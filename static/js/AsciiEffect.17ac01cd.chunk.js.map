{"version":3,"sources":["../node_modules/three/examples/jsm/effects/AsciiEffect.js"],"names":["AsciiEffect","renderer","charSet","options","width","height","bResolution","iScale","bColor","bAlpha","bBlock","bInvert","strResolution","domElement","document","createElement","style","cursor","iWidth","iHeight","oImg","oAscii","initAsciiSize","Math","round","fResolution","oCanvas","backgroundColor","rows","cells","color","cellSpacing","cellPadding","oStyle","display","whiteSpace","margin","padding","letterSpacing","fLetterSpacing","fontFamily","strFont","fontSize","fFontSize","lineHeight","fLineHeight","textAlign","textDecoration","appendChild","this","setSize","w","h","render","scene","camera","asciifyImage","aDefaultCharList","split","aDefaultColorCharList","oCanvasImg","getContext","oCtx","getImageData","aCharList","canvasRenderer","clearRect","drawImage","oImgData","data","strChars","y","x","iOffset","iRed","iGreen","iBlue","iAlpha","iCharIdx","fBrightness","floor","length","strThisChar","undefined","innerHTML"],"mappings":"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","file":"static/js/AsciiEffect.17ac01cd.chunk.js","sourcesContent":["/**\n * Ascii generation is based on http://www.nihilogic.dk/labs/jsascii/\n * Maybe more about this later with a blog post at http://lab4games.net/zz85/blog\n *\n * 16 April 2012 - @blurspline\n */\n\nclass AsciiEffect {\n\n\tconstructor( renderer, charSet = ' .:-=+*#%@', options = {} ) {\n\n\t\t// ' .,:;=|iI+hHOE#`$';\n\t\t// darker bolder character set from https://github.com/saw/Canvas-ASCII-Art/\n\t\t// ' .\\'`^\",:;Il!i~+_-?][}{1)(|/tfjrxnuvczXYUJCLQ0OZmwqpdbkhao*#MW&8%B@$'.split('');\n\n\t\t// Some ASCII settings\n\n\t\tconst bResolution = ! options[ 'resolution' ] ? 0.15 : options[ 'resolution' ]; // Higher for more details\n\t\tconst iScale = ! options[ 'scale' ] ? 1 : options[ 'scale' ];\n\t\tconst bColor = ! options[ 'color' ] ? false : options[ 'color' ]; // nice but slows down rendering!\n\t\tconst bAlpha = ! options[ 'alpha' ] ? false : options[ 'alpha' ]; // Transparency\n\t\tconst bBlock = ! options[ 'block' ] ? false : options[ 'block' ]; // blocked characters. like good O dos\n\t\tconst bInvert = ! options[ 'invert' ] ? false : options[ 'invert' ]; // black is white, white is black\n\n\t\tconst strResolution = 'low';\n\n\t\tlet width, height;\n\n\t\tconst domElement = document.createElement( 'div' );\n\t\tdomElement.style.cursor = 'default';\n\n\t\tconst oAscii = document.createElement( 'table' );\n\t\tdomElement.appendChild( oAscii );\n\n\t\tlet iWidth, iHeight;\n\t\tlet oImg;\n\n\t\tthis.setSize = function ( w, h ) {\n\n\t\t\twidth = w;\n\t\t\theight = h;\n\n\t\t\trenderer.setSize( w, h );\n\n\t\t\tinitAsciiSize();\n\n\t\t};\n\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\trenderer.render( scene, camera );\n\t\t\tasciifyImage( renderer, oAscii );\n\n\t\t};\n\n\t\tthis.domElement = domElement;\n\n\n\t\t// Throw in ascii library from http://www.nihilogic.dk/labs/jsascii/jsascii.js\n\n\t\t/*\n\t\t* jsAscii 0.1\n\t\t* Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n\t\t* MIT License [http://www.nihilogic.dk/licenses/mit-license.txt]\n\t\t*/\n\n\t\tfunction initAsciiSize() {\n\n\t\t\tiWidth = Math.round( width * fResolution );\n\t\t\tiHeight = Math.round( height * fResolution );\n\n\t\t\toCanvas.width = iWidth;\n\t\t\toCanvas.height = iHeight;\n\t\t\t// oCanvas.style.display = \"none\";\n\t\t\t// oCanvas.style.width = iWidth;\n\t\t\t// oCanvas.style.height = iHeight;\n\n\t\t\toImg = renderer.domElement;\n\n\t\t\tif ( oImg.style.backgroundColor ) {\n\n\t\t\t\toAscii.rows[ 0 ].cells[ 0 ].style.backgroundColor = oImg.style.backgroundColor;\n\t\t\t\toAscii.rows[ 0 ].cells[ 0 ].style.color = oImg.style.color;\n\n\t\t\t}\n\n\t\t\toAscii.cellSpacing = 0;\n\t\t\toAscii.cellPadding = 0;\n\n\t\t\tconst oStyle = oAscii.style;\n\t\t\toStyle.display = 'inline';\n\t\t\toStyle.width = Math.round( iWidth / fResolution * iScale ) + 'px';\n\t\t\toStyle.height = Math.round( iHeight / fResolution * iScale ) + 'px';\n\t\t\toStyle.whiteSpace = 'pre';\n\t\t\toStyle.margin = '0px';\n\t\t\toStyle.padding = '0px';\n\t\t\toStyle.letterSpacing = fLetterSpacing + 'px';\n\t\t\toStyle.fontFamily = strFont;\n\t\t\toStyle.fontSize = fFontSize + 'px';\n\t\t\toStyle.lineHeight = fLineHeight + 'px';\n\t\t\toStyle.textAlign = 'left';\n\t\t\toStyle.textDecoration = 'none';\n\n\t\t}\n\n\n\t\tconst aDefaultCharList = ( ' .,:;i1tfLCG08@' ).split( '' );\n\t\tconst aDefaultColorCharList = ( ' CGO08@' ).split( '' );\n\t\tconst strFont = 'courier new, monospace';\n\n\t\tconst oCanvasImg = renderer.domElement;\n\n\t\tconst oCanvas = document.createElement( 'canvas' );\n\t\tif ( ! oCanvas.getContext ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst oCtx = oCanvas.getContext( '2d' );\n\t\tif ( ! oCtx.getImageData ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet aCharList = ( bColor ? aDefaultColorCharList : aDefaultCharList );\n\n\t\tif ( charSet ) aCharList = charSet;\n\n\t\tlet fResolution = 0.5;\n\n\t\tswitch ( strResolution ) {\n\n\t\t\tcase 'low' : \tfResolution = 0.25; break;\n\t\t\tcase 'medium' : fResolution = 0.5; break;\n\t\t\tcase 'high' : \tfResolution = 1; break;\n\n\t\t}\n\n\t\tif ( bResolution ) fResolution = bResolution;\n\n\t\t// Setup dom\n\n\t\tconst fFontSize = ( 2 / fResolution ) * iScale;\n\t\tconst fLineHeight = ( 2 / fResolution ) * iScale;\n\n\t\t// adjust letter-spacing for all combinations of scale and resolution to get it to fit the image width.\n\n\t\tlet fLetterSpacing = 0;\n\n\t\tif ( strResolution == 'low' ) {\n\n\t\t\tswitch ( iScale ) {\n\n\t\t\t\tcase 1 : fLetterSpacing = - 1; break;\n\t\t\t\tcase 2 :\n\t\t\t\tcase 3 : fLetterSpacing = - 2.1; break;\n\t\t\t\tcase 4 : fLetterSpacing = - 3.1; break;\n\t\t\t\tcase 5 : fLetterSpacing = - 4.15; break;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( strResolution == 'medium' ) {\n\n\t\t\tswitch ( iScale ) {\n\n\t\t\t\tcase 1 : fLetterSpacing = 0; break;\n\t\t\t\tcase 2 : fLetterSpacing = - 1; break;\n\t\t\t\tcase 3 : fLetterSpacing = - 1.04; break;\n\t\t\t\tcase 4 :\n\t\t\t\tcase 5 : fLetterSpacing = - 2.1; break;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( strResolution == 'high' ) {\n\n\t\t\tswitch ( iScale ) {\n\n\t\t\t\tcase 1 :\n\t\t\t\tcase 2 : fLetterSpacing = 0; break;\n\t\t\t\tcase 3 :\n\t\t\t\tcase 4 :\n\t\t\t\tcase 5 : fLetterSpacing = - 1; break;\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// can't get a span or div to flow like an img element, but a table works?\n\n\n\t\t// convert img element to ascii\n\n\t\tfunction asciifyImage( canvasRenderer, oAscii ) {\n\n\t\t\toCtx.clearRect( 0, 0, iWidth, iHeight );\n\t\t\toCtx.drawImage( oCanvasImg, 0, 0, iWidth, iHeight );\n\t\t\tconst oImgData = oCtx.getImageData( 0, 0, iWidth, iHeight ).data;\n\n\t\t\t// Coloring loop starts now\n\t\t\tlet strChars = '';\n\n\t\t\t// console.time('rendering');\n\n\t\t\tfor ( let y = 0; y < iHeight; y += 2 ) {\n\n\t\t\t\tfor ( let x = 0; x < iWidth; x ++ ) {\n\n\t\t\t\t\tconst iOffset = ( y * iWidth + x ) * 4;\n\n\t\t\t\t\tconst iRed = oImgData[ iOffset ];\n\t\t\t\t\tconst iGreen = oImgData[ iOffset + 1 ];\n\t\t\t\t\tconst iBlue = oImgData[ iOffset + 2 ];\n\t\t\t\t\tconst iAlpha = oImgData[ iOffset + 3 ];\n\t\t\t\t\tlet iCharIdx;\n\n\t\t\t\t\tlet fBrightness;\n\n\t\t\t\t\tfBrightness = ( 0.3 * iRed + 0.59 * iGreen + 0.11 * iBlue ) / 255;\n\t\t\t\t\t// fBrightness = (0.3*iRed + 0.5*iGreen + 0.3*iBlue) / 255;\n\n\t\t\t\t\tif ( iAlpha == 0 ) {\n\n\t\t\t\t\t\t// should calculate alpha instead, but quick hack :)\n\t\t\t\t\t\t//fBrightness *= (iAlpha / 255);\n\t\t\t\t\t\tfBrightness = 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tiCharIdx = Math.floor( ( 1 - fBrightness ) * ( aCharList.length - 1 ) );\n\n\t\t\t\t\tif ( bInvert ) {\n\n\t\t\t\t\t\tiCharIdx = aCharList.length - iCharIdx - 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// good for debugging\n\t\t\t\t\t//fBrightness = Math.floor(fBrightness * 10);\n\t\t\t\t\t//strThisChar = fBrightness;\n\n\t\t\t\t\tlet strThisChar = aCharList[ iCharIdx ];\n\n\t\t\t\t\tif ( strThisChar === undefined || strThisChar == ' ' )\n\t\t\t\t\t\tstrThisChar = '&nbsp;';\n\n\t\t\t\t\tif ( bColor ) {\n\n\t\t\t\t\t\tstrChars += '<span style=\\''\n\t\t\t\t\t\t\t+ 'color:rgb(' + iRed + ',' + iGreen + ',' + iBlue + ');'\n\t\t\t\t\t\t\t+ ( bBlock ? 'background-color:rgb(' + iRed + ',' + iGreen + ',' + iBlue + ');' : '' )\n\t\t\t\t\t\t\t+ ( bAlpha ? 'opacity:' + ( iAlpha / 255 ) + ';' : '' )\n\t\t\t\t\t\t\t+ '\\'>' + strThisChar + '</span>';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstrChars += strThisChar;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstrChars += '<br/>';\n\n\t\t\t}\n\n\t\t\toAscii.innerHTML = '<tr><td>' + strChars + '</td></tr>';\n\n\t\t\t// console.timeEnd('rendering');\n\n\t\t\t// return oAscii;\n\n\t\t}\n\n\t}\n\n}\n\nexport { AsciiEffect };\n"],"sourceRoot":""}