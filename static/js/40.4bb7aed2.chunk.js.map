{"version":3,"sources":["components/ColorButton/ColorButton.js","../node_modules/@material-ui/core/esm/ListItem/ListItem.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","MainPage/Sidebar/SidebarBody/AdvancedSettings/AsciiParamsSetting.js"],"names":["ColorButton","props","color","value","onClick","children","others","Button","style","backgroundColor","getTextColor","event","currentTarget","useEnhancedEffect","window","React","ListItem","ref","_props$alignItems","alignItems","_props$autoFocus","autoFocus","_props$button","button","childrenProp","classes","className","componentProp","component","_props$ContainerCompo","ContainerComponent","_props$ContainerProps","ContainerProps","ContainerClassName","_objectWithoutProperties","_props$dense","dense","_props$disabled","disabled","_props$disableGutters","disableGutters","_props$divider","divider","focusVisibleClassName","_props$selected","selected","other","context","ListContext","childContext","listItemRef","current","focus","toArray","hasSecondaryAction","length","isMuiElement","handleOwnRef","instance","ReactDOM","handleRef","useForkRef","componentProps","_extends","clsx","root","gutters","alignItemsFlexStart","secondaryAction","Component","focusVisible","ButtonBase","Provider","container","pop","withStyles","theme","display","justifyContent","position","textDecoration","width","boxSizing","textAlign","paddingTop","paddingBottom","palette","action","opacity","borderBottom","concat","backgroundClip","paddingLeft","paddingRight","transition","transitions","create","duration","shortest","hover","name","MenuItem","tabIndex","_props$component","ListItemClasses","_props$role","role","tabIndexProp","undefined","typography","body1","_defineProperty","minHeight","overflow","whiteSpace","breakpoints","up","body2","AsciiParamsSetting","openModal","useContext","SettingsContext","ascii","invert","bgColor","charSet","dispatch","DispatchContext","currentSet","asciiSet","findIndex","set","options","map","_","i","fullWidth","variant","type","key","onChange","setNumber","target"],"mappings":"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","file":"static/js/40.4bb7aed2.chunk.js","sourcesContent":["import Button from \"@material-ui/core/Button\";\r\nimport { getTextColor } from \"helpers/helpers\";\r\n\r\nfunction ColorButton(props) {\r\n    const { color, value, onClick, children, ...others } = props;\r\n\r\n    const onBtnClick = event => {\r\n        const { value } = event.currentTarget;\r\n        onClick(value);\r\n    };\r\n\r\n    return (\r\n        <Button\r\n            style={{\r\n                backgroundColor: color,\r\n                color: getTextColor(color),\r\n            }}\r\n            value={value}\r\n            onClick={onBtnClick}\r\n            {...others}\r\n        >\r\n            {children || color}\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default ColorButton;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport * as ReactDOM from 'react-dom';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      position: 'relative',\n      textDecoration: 'none',\n      width: '100%',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      paddingTop: 8,\n      paddingBottom: 8,\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n    container: {\n      position: 'relative'\n    },\n\n    /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n    focusVisible: {},\n\n    /* Styles applied to the `component` element if dense. */\n    dense: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      alignItems: 'flex-start'\n    },\n\n    /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the inner `component` element if `divider={true}`. */\n    divider: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      backgroundClip: 'padding-box'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the inner `component` element if `button={true}`. */\n    button: {\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n    secondaryAction: {\n      // Add some space to avoid collision as `ListItemSecondaryAction`\n      // is absolutely positioned.\n      paddingRight: 48\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nvar ListItem = /*#__PURE__*/React.forwardRef(function ListItem(props, ref) {\n  var _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$button = props.button,\n      button = _props$button === void 0 ? false : _props$button,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      componentProp = props.component,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo,\n      _props$ContainerProps = props.ContainerProps;\n  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;\n\n  var ContainerClassName = _props$ContainerProps.className,\n      ContainerProps = _objectWithoutProperties(_props$ContainerProps, [\"className\"]),\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$divider = props.divider,\n      divider = _props$divider === void 0 ? false : _props$divider,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  var context = React.useContext(ListContext);\n  var childContext = {\n    dense: dense || context.dense || false,\n    alignItems: alignItems\n  };\n  var listItemRef = React.useRef(null);\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  var children = React.Children.toArray(childrenProp);\n  var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n\n  var componentProps = _extends({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled: disabled\n  }, other);\n\n  var Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(ListContext.Provider, {\n      value: childContext\n    }, /*#__PURE__*/React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), /*#__PURE__*/React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    var secondaryActionIndex = -1;\n\n    for (var i = children.length - 1; i >= 0; i -= 1) {\n      var child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import { useContext } from \"react\";\r\n\r\nimport { DispatchContext, SettingsContext } from \"context/SettingsContext\";\r\nimport { asciiSet } from \"helpers/consts\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport ColorButton from \"components/ColorButton\";\r\n\r\nfunction AsciiParamsSetting({ openModal }) {\r\n    const {\r\n        ascii: { invert, color, bgColor, charSet },\r\n    } = useContext(SettingsContext);\r\n    const dispatch = useContext(DispatchContext);\r\n\r\n    const currentSet = asciiSet.findIndex(set => set === charSet);\r\n\r\n    const toggleInvert = () => {\r\n        const action = {\r\n            type: \"toggle\",\r\n            key: \"ascii\",\r\n            value: [\"invert\"],\r\n        };\r\n        dispatch(action);\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const { value: setNumber } = event.target;\r\n        const action = {\r\n            type: \"update\",\r\n            key: \"ascii\",\r\n            value: { charSet: asciiSet[setNumber] },\r\n        };\r\n        dispatch(action);\r\n    };\r\n\r\n    const options = asciiSet.map((_, i) => (\r\n        <MenuItem value={i} key={i}>\r\n            {`Set ${i}`}\r\n        </MenuItem>\r\n    ));\r\n\r\n    return (\r\n        <>\r\n            <div className=\"AdvancedSettingsGroup-optionName\">Invert</div>\r\n            <Button fullWidth variant=\"contained\" onClick={toggleInvert}>\r\n                {invert ? \"ON\" : \"OFF\"}\r\n            </Button>\r\n\r\n            <div className=\"AdvancedSettingsGroup-optionName\">\r\n                Character Set\r\n            </div>\r\n            <div>\r\n                <Select fullWidth onChange={handleChange} value={currentSet}>\r\n                    {options}\r\n                </Select>\r\n            </div>\r\n\r\n            <div className=\"AdvancedSettingsGroup-optionName\">Color</div>\r\n            <ColorButton\r\n                fullWidth\r\n                color={color}\r\n                value=\"ascii-color\"\r\n                onClick={openModal}\r\n            />\r\n\r\n            <div className=\"AdvancedSettingsGroup-optionName\">Background</div>\r\n            <ColorButton\r\n                fullWidth\r\n                color={bgColor}\r\n                value=\"ascii-bgColor\"\r\n                onClick={openModal}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AsciiParamsSetting;\r\n"],"sourceRoot":""}