{"version":3,"sources":["../node_modules/three/examples/jsm/controls/OrbitControls.js","../../src/fscreen.js"],"names":["_changeEvent","type","_startEvent","_endEvent","OrbitControls","object","domElement","undefined","console","warn","document","error","style","touchAction","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","this","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","handleTouchMovePan","handleTouchMoveDolly","setPointerCapture","pointerId","push","addPointer","pointerType","trackPointer","DOLLY_ROTATE","onTouchStart","mouseAction","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","removePointer","releasePointerCapture","preventDefault","handleMouseWheel","needsUpdate","code","handleKeyDown","i","splice","pointer","passive","EventDispatcher","key","fullscreenEnabled","fullscreenElement","requestFullscreen","exitFullscreen","fullscreenchange","fullscreenerror","fullscreen","webkit","moz","ms","window","vendor","Object","requestFullscreenFunction","bind","fullscreenPseudoClass","handler","options","Boolean","val","onfullscreenchange","toLowerCase","onfullscreenerror"],"mappings":"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","file":"static/js/3.eb282ecd.chunk.js","sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t\t// no-op\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t\t// no-op\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchEnd();\n\n\t\t\t} else {\n\n\t\t\t\tonMouseUp( event );\n\n\t\t\t}\n\n\t\t\tremovePointer( event );\n\n\t\t\t//\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerCancel( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseUp( event ) {\n\n\t\t\thandleMouseUp( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchEnd( event ) {\n\n\t\t\thandleTouchEnd( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n","const key = {\n  fullscreenEnabled: 0,\n  fullscreenElement: 1,\n  requestFullscreen: 2,\n  exitFullscreen: 3,\n  fullscreenchange: 4,\n  fullscreenerror: 5,\n  fullscreen: 6\n};\n\nconst webkit = [\n  'webkitFullscreenEnabled',\n  'webkitFullscreenElement',\n  'webkitRequestFullscreen',\n  'webkitExitFullscreen',\n  'webkitfullscreenchange',\n  'webkitfullscreenerror',\n  '-webkit-full-screen',\n];\n\nconst moz = [\n  'mozFullScreenEnabled',\n  'mozFullScreenElement',\n  'mozRequestFullScreen',\n  'mozCancelFullScreen',\n  'mozfullscreenchange',\n  'mozfullscreenerror',\n  '-moz-full-screen',\n];\n\nconst ms = [\n  'msFullscreenEnabled',\n  'msFullscreenElement',\n  'msRequestFullscreen',\n  'msExitFullscreen',\n  'MSFullscreenChange',\n  'MSFullscreenError',\n  '-ms-fullscreen',\n];\n\n// so it doesn't throw if no window or document\nconst document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};\n\nconst vendor = (\n  ('fullscreenEnabled' in document && Object.keys(key)) ||\n  (webkit[0] in document && webkit) ||\n  (moz[0] in document && moz) ||\n  (ms[0] in document && ms) ||\n  []\n);\n\nexport default {\n  requestFullscreen: element => element[vendor[key.requestFullscreen]](),\n  requestFullscreenFunction: element => element[vendor[key.requestFullscreen]],\n  get exitFullscreen() { return document[vendor[key.exitFullscreen]].bind(document); },\n  get fullscreenPseudoClass() { return `:${vendor[key.fullscreen]}`; },\n  addEventListener: (type, handler, options) => document.addEventListener(vendor[key[type]], handler, options),\n  removeEventListener: (type, handler, options) => document.removeEventListener(vendor[key[type]], handler, options),\n  get fullscreenEnabled() { return Boolean(document[vendor[key.fullscreenEnabled]]); },\n  set fullscreenEnabled(val) {},\n  get fullscreenElement() { return document[vendor[key.fullscreenElement]]; },\n  set fullscreenElement(val) {},\n  get onfullscreenchange() { return document[`on${vendor[key.fullscreenchange]}`.toLowerCase()]; },\n  set onfullscreenchange(handler) { return document[`on${vendor[key.fullscreenchange]}`.toLowerCase()] = handler; },\n  get onfullscreenerror() { return document[`on${vendor[key.fullscreenerror]}`.toLowerCase()]; },\n  set onfullscreenerror(handler) { return document[`on${vendor[key.fullscreenerror]}`.toLowerCase()] = handler; },\n};\n"],"sourceRoot":""}