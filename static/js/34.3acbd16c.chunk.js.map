{"version":3,"sources":["DrawerContent.js","styles/DrawerHeaderStyles.js","DrawerHeader.js","SideBar.js"],"names":["SettingBtns","lazy","ChainMaker","AdvancedSettings","DrawerContent","content","openControl","useContext","SettingsContext","app","sideContent","fallback","drawerBG","DRAWER_BGCOLOR","useStyles","makeStyles","theme","downloadButton","color","display","alignItems","justifyContent","width","height","borderRadius","position","left","top","margin","cursor","backgroundColor","closeDrawerButton","right","root","minHeight","fontSize","zIndex","backgroundImage","bg","backgroundSize","backgroundPosition","marginBottom","DrawerHeader","toggleDrawerOpen","classes","dispatch","DispatchContext","currentCodec","capture","codec","useEffect","supportedCodecs","videoCodecs","filter","MediaRecorder","isTypeSupported","action","type","key","value","err","console","log","className","onClick","Tooltip","title","placement","SideBar","toggleSidebarOpen","open","Drawer","drawer","variant","anchor","paper","drawerPaper"],"mappings":"wJAIMA,EAAcC,gBAAK,kBAAM,kCACzBC,EAAaD,gBAAK,kBAAM,kCACxBE,EAAmBF,gBAAK,kBAAM,kCAwBrBG,MAtBf,YAAyC,IAKjCC,EALiBC,EAAe,EAAfA,YAMrB,OAHIC,qBAAWC,KADXC,IAAOC,aAKP,IAAK,WACDL,EAAU,cAACL,EAAD,CAAaM,YAAaA,IACpC,MACJ,IAAK,aACDD,EAAU,cAACH,EAAD,CAAYI,YAAaA,IACnC,MACJ,IAAK,WACDD,EAAU,cAACF,EAAD,CAAkBG,YAAaA,IAKjD,OAAO,cAAC,WAAD,CAAUK,SAAU,0CAApB,SAAyCN,K,4ECvB9CO,EAAWC,IA4DFC,EA1DGC,aAAW,SAAAC,GAAK,MAAK,CACnCC,eAAgB,CACZC,MAAO,QACPC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,MAAO,OACPC,OAAQ,OACRC,aAAc,MACdC,SAAU,WACVC,KAAM,IACNC,IAAK,IACLC,OAAQ,OACRC,OAAQ,UACRC,gBAAiB,wBACjB,UAAW,CACPA,gBAAiB,0BAGzBC,kBAAmB,CACfb,MAAO,QACPC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,MAAO,OACPC,OAAQ,OACRC,aAAc,MACdC,SAAU,WACVO,MAAO,IACPL,IAAK,IACLC,OAAQ,OACRC,OAAQ,UACRC,gBAAiB,wBACjB,UAAW,CACPA,gBAAiB,0BAGzBG,KAAM,CACFV,OAAQ,OACRW,UAAW,OACXZ,MAAO,OACPa,SAAU,SACVhB,QAAS,OACTM,SAAU,SACVE,IAAK,EACLS,OAAQ,EACRf,eAAgB,SAChBD,WAAY,SACZU,gBAAiBlB,EACjByB,gBAAgB,OAAD,OAASC,IAAT,KAEfC,eAAgB,aAChBC,mBAAoB,SACpBtB,MAAO,QACPuB,aAAc,cCcPC,MA7Df,YAA6C,IAArBC,EAAoB,EAApBA,iBACdC,EAAU9B,IACV+B,EAAWtC,qBAAWuC,KAENC,EAClBxC,qBAAWC,KADXwC,QAAWC,MA+Bf,OA5BAC,qBAAU,WACN,IACI,IAAMC,EAAkBC,IAAYC,QAAO,SAAAJ,GAAK,OAC5CK,cAAcC,gBAAgBN,MAE5BO,EAAS,CACXC,KAAM,SACNC,IAAK,UACLC,MAAO,CACHR,gBAAgB,YAAKA,GACrBF,MAAOE,EAAgB,KAG/BN,EAASW,GACX,MAAOI,GACLC,QAAQC,IAAIF,MAEjB,CAACf,IAYA,sBAAKkB,UAAWnB,EAAQX,KAAxB,UACI,4CACA,qBACI8B,UAAWnB,EAAQb,kBACnBiC,QAASrB,EAFb,SAII,cAAC,IAAD,MAEHI,GACG,cAACkB,EAAA,EAAD,CACIC,MAAM,yCACNC,UAAU,aAFd,SAII,qBACIJ,UAAWnB,EAAQ3B,eACnB+C,QAzBE,WAMlBnB,EALe,CACXY,KAAM,SACNC,IAAK,UACLC,MAAO,YAmBC,SAII,cAAC,IAAD,Y,QCxCTS,UAnBf,YAA4D,IAAzCC,EAAwC,EAAxCA,kBAAmBC,EAAqB,EAArBA,KAAMhE,EAAe,EAAfA,YAClCsC,EAAU9B,cAChB,OACI,eAACyD,EAAA,EAAD,CACIR,UAAWnB,EAAQ4B,OACnBC,QAAQ,aACRC,OAAO,OACPJ,KAAMA,EACN1B,QAAS,CACL+B,MAAO/B,EAAQgC,aANvB,UASI,cAAC,EAAD,CAAcjC,iBAAkB0B,IAEhC,cAAC,EAAD,CAAe/D,YAAaA","file":"static/js/34.3acbd16c.chunk.js","sourcesContent":["import { lazy, Suspense, useContext } from \"react\";\r\n\r\nimport { SettingsContext } from \"./context/SettingsContext\";\r\n\r\nconst SettingBtns = lazy(() => import(\"./SettingBtns\"));\r\nconst ChainMaker = lazy(() => import(\"./ChainMaker\"));\r\nconst AdvancedSettings = lazy(() => import(\"./AdvancedSettings\"));\r\n\r\nfunction DrawerContent({ openControl }) {\r\n    const {\r\n        app: { sideContent },\r\n    } = useContext(SettingsContext);\r\n\r\n    let content;\r\n    switch (sideContent) {\r\n        case \"settings\":\r\n            content = <SettingBtns openControl={openControl} />;\r\n            break;\r\n        case \"chainMaker\":\r\n            content = <ChainMaker openControl={openControl} />;\r\n            break;\r\n        case \"advanced\":\r\n            content = <AdvancedSettings openControl={openControl} />;\r\n            break;\r\n        default:\r\n    }\r\n\r\n    return <Suspense fallback={<div>Loading</div>}>{content}</Suspense>;\r\n}\r\n\r\nexport default DrawerContent;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { DRAWER_BGCOLOR } from \"../consts\";\r\nimport bg from \"./Rose-Petals.svg\";\r\n\r\nconst drawerBG = DRAWER_BGCOLOR;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    downloadButton: {\r\n        color: \"black\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        width: \"2rem\",\r\n        height: \"2rem\",\r\n        borderRadius: \"50%\",\r\n        position: \"absolute\",\r\n        left: \"0\",\r\n        top: \"0\",\r\n        margin: \"1rem\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"rgba(255,255,255,0.5)\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"rgba(255,255,255,0.8)\",\r\n        },\r\n    },\r\n    closeDrawerButton: {\r\n        color: \"black\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        width: \"2rem\",\r\n        height: \"2rem\",\r\n        borderRadius: \"50%\",\r\n        position: \"absolute\",\r\n        right: \"0\",\r\n        top: \"0\",\r\n        margin: \"1rem\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"rgba(255,255,255,0.5)\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"rgba(255,255,255,0.8)\",\r\n        },\r\n    },\r\n    root: {\r\n        height: \"4rem\",\r\n        minHeight: \"4rem\",\r\n        width: \"100%\",\r\n        fontSize: \"1.5rem\",\r\n        display: \"flex\",\r\n        position: \"sticky\",\r\n        top: 0,\r\n        zIndex: 5,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundColor: drawerBG,\r\n        backgroundImage: `url(${bg})`,\r\n        /* background by SVGBackgrounds.com */\r\n        backgroundSize: \"auto 100vh\",\r\n        backgroundPosition: \"center\",\r\n        color: \"white\",\r\n        marginBottom: \"0.5rem\",\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { useContext, useEffect } from \"react\";\r\n\r\nimport { SettingsContext, DispatchContext } from \"./context/SettingsContext\";\r\n\r\nimport ArrowLeft from \"@material-ui/icons/ArrowLeft\";\r\nimport GetApp from \"@material-ui/icons/GetApp\";\r\n\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nimport useStyles from \"./styles/DrawerHeaderStyles\";\r\n\r\nimport { videoCodecs } from \"./consts\";\r\n\r\nfunction DrawerHeader({ toggleDrawerOpen }) {\r\n    const classes = useStyles();\r\n    const dispatch = useContext(DispatchContext);\r\n    const {\r\n        capture: { codec: currentCodec },\r\n    } = useContext(SettingsContext);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const supportedCodecs = videoCodecs.filter(codec =>\r\n                MediaRecorder.isTypeSupported(codec)\r\n            );\r\n            const action = {\r\n                type: \"update\",\r\n                key: \"capture\",\r\n                value: {\r\n                    supportedCodecs: [...supportedCodecs],\r\n                    codec: supportedCodecs[0],\r\n                },\r\n            };\r\n            dispatch(action);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }, [dispatch]);\r\n\r\n    const toggleCapture = () => {\r\n        const action = {\r\n            type: \"toggle\",\r\n            key: \"capture\",\r\n            value: \"enable\",\r\n        };\r\n        dispatch(action);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <span>Settings</span>\r\n            <div\r\n                className={classes.closeDrawerButton}\r\n                onClick={toggleDrawerOpen}\r\n            >\r\n                <ArrowLeft />\r\n            </div>\r\n            {currentCodec && (\r\n                <Tooltip\r\n                    title=\"Save animation as video (experimental)\"\r\n                    placement=\"bottom-end\"\r\n                >\r\n                    <div\r\n                        className={classes.downloadButton}\r\n                        onClick={toggleCapture}\r\n                    >\r\n                        <GetApp />\r\n                    </div>\r\n                </Tooltip>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DrawerHeader;\r\n","import Drawer from \"@material-ui/core/Drawer\";\r\n\r\nimport DrawerContent from \"./DrawerContent\";\r\nimport DrawerHeader from \"./DrawerHeader\";\r\n\r\nimport useStyles from \"./styles/MainPageStyles\";\r\n\r\nfunction SideBar({ toggleSidebarOpen, open, openControl }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Drawer\r\n            className={classes.drawer}\r\n            variant=\"persistent\"\r\n            anchor=\"left\"\r\n            open={open}\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}\r\n        >\r\n            <DrawerHeader toggleDrawerOpen={toggleSidebarOpen} />\r\n\r\n            <DrawerContent openControl={openControl} />\r\n        </Drawer>\r\n    );\r\n}\r\n\r\nexport default SideBar;\r\n"],"sourceRoot":""}