{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","fbx2json/fileList.js","fbx2json/fbx2json.js"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","fileList","getModel","fileName","a","filePath","fbxSource","loadModel","model","exportAni","ani","name","content","JSON","stringify","toJSON","blob","Blob","type","url","URL","createObjectURL","document","createElement","style","href","download","body","appendChild","click","console","log","window","revokeObjectURL","removeChild","pause","msec","Promise","resolve","setTimeout","exportAllAni","animations","counter","handleFile","fileToLoad","concat","includes","aniName","replace","fbx2json","fbxList"],"mappings":"yKACe,SAASA,EAA2BC,EAAGC,GACpD,IAAIC,EAEJ,GAAsB,qBAAXC,QAAgD,MAAtBH,EAAEG,OAAOC,UAAmB,CAC/D,GAAIC,MAAMC,QAAQN,KAAOE,EAAK,OAAAK,EAAA,GAA2BP,KAAOC,GAAkBD,GAAyB,kBAAbA,EAAEQ,OAAqB,CAC/GN,IAAIF,EAAIE,GACZ,IAAIO,EAAI,EAEJC,EAAI,aAER,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIH,GAAKT,EAAEQ,OAAe,CACxBK,MAAM,GAED,CACLA,MAAM,EACNC,MAAOd,EAAES,OAGbM,EAAG,SAAWC,GACZ,MAAMA,GAERC,EAAGP,GAIP,MAAM,IAAIQ,UAAU,yIAGtB,IAEIC,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLV,EAAG,WACDT,EAAKF,EAAEG,OAAOC,aAEhBQ,EAAG,WACD,IAAIU,EAAOpB,EAAGqB,OAEd,OADAH,EAAmBE,EAAKT,KACjBS,GAETP,EAAG,SAAWS,GACZH,GAAS,EACTF,EAAMK,GAERP,EAAG,WACD,IACOG,GAAoC,MAAhBlB,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAImB,EAAQ,MAAMF,K,+BCnDXM,EADE,G,gBCIXC,EAAQ,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACPC,EADO,UACOC,IADP,gBACwBH,GADxB,SAEOI,YAAUF,GAFjB,cAEPG,EAFO,yBAGNA,GAHM,2CAAH,sDAMRC,EAAS,uCAAG,WAAMC,GAAN,YAAAN,EAAA,SAAAA,EAAA,sDACRD,EADQ,UACMO,EAAIC,KADV,SAERC,EAAUC,KAAKC,UAAUJ,EAAIK,UAE7BC,EAAO,IAAIC,KAAK,CAACL,GAAU,CAAEM,KAAM,eACnCC,EAAMC,IAAIC,gBAAgBL,IAE1BZ,EAAIkB,SAASC,cAAc,MAC/BC,MAAQ,gBACVpB,EAAEqB,KAAON,EACTf,EAAEsB,SAAWvB,EACbmB,SAASK,KAAKC,YAAYxB,GAC1BA,EAAEyB,QACFC,QAAQC,IAAR,mBAAwBrB,EAAIC,OAE5BqB,OAAOZ,IAAIa,gBAAgBd,GAC3BG,SAASK,KAAKO,YAAY9B,GAhBZ,4CAAH,sDAmBT+B,EAAK,uCAAG,WAAMC,GAAN,SAAAhC,EAAA,+EACH,IAAIiC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OADxC,2CAAH,sDAILI,EAAY,uCAAG,WAAMC,GAAN,qBAAArC,EAAA,sDACbsC,EAAU,EADG,IAECD,GAFD,gEAEN/B,EAFM,iBAGPD,EAAUC,GAHH,UAKbgC,IAAYA,EAAU,GALT,kCAMOP,EAAM,KANb,uMAAH,sDAUZQ,EAAU,uCAAG,WAAMxC,GAAN,qBAAAC,EAAA,6DACXwC,EAAazC,EAAS0C,OAAO1C,EAAS2C,SAAS,OAAS,GAAK,QADlD,SAEc5C,EAAS0C,GAFvB,gBAEPH,EAFO,EAEPA,WAGkB,IAAtBA,EAAWzD,QAAuC,eAAvByD,EAAW,GAAG9B,OAEnCoC,EAAU5C,EAAS6C,QAAQ,OAAQ,IACzCP,EAAW,GAAG9B,KAAOoC,GAGzBP,EAAaC,GAXE,2CAAH,sDAcHQ,EAAQ,uCAAG,gCAAA7C,EAAA,0DACG8C,GADH,+DACT/C,EADS,iBAEVwC,EAAWxC,GAFD,qMAAH","file":"static/js/55.b79427f4.chunk.js","sourcesContent":["import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","const fileList = [];\r\nexport default fileList;\r\n","import fbxList from \"./fileList\";\r\nimport { loadModel } from \"helpers/viewerHelpers\";\r\nimport { fbxSource } from \"App\";\r\n\r\nconst getModel = async fileName => {\r\n    const filePath = `${fbxSource}/fbx/${fileName}`;\r\n    const model = await loadModel(filePath);\r\n    return model;\r\n};\r\n\r\nconst exportAni = async ani => {\r\n    const fileName = `${ani.name}.json`;\r\n    const content = JSON.stringify(ani.toJSON());\r\n\r\n    const blob = new Blob([content], { type: \"text/plain\" });\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    const a = document.createElement(\"a\");\r\n    a.style = \"display: none\";\r\n    a.href = url;\r\n    a.download = fileName;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    console.log(`exported ${ani.name}`);\r\n\r\n    window.URL.revokeObjectURL(url);\r\n    document.body.removeChild(a);\r\n};\r\n\r\nconst pause = async msec => {\r\n    return new Promise(resolve => setTimeout(resolve, msec));\r\n};\r\n\r\nconst exportAllAni = async animations => {\r\n    let counter = 0;\r\n    for (const ani of animations) {\r\n        await exportAni(ani);\r\n\r\n        counter = ++counter % 10;\r\n        if (!counter) await pause(1000);\r\n    }\r\n};\r\n\r\nconst handleFile = async fileName => {\r\n    let fileToLoad = fileName.concat(fileName.includes(\"fbx\") ? \"\" : \".fbx\");\r\n    const { animations } = await getModel(fileToLoad);\r\n\r\n    const fromMixamo =\r\n        animations.length === 1 && animations[0].name === \"mixamo.com\";\r\n    if (fromMixamo) {\r\n        const aniName = fileName.replace(\".fbx\", \"\");\r\n        animations[0].name = aniName;\r\n    }\r\n\r\n    exportAllAni(animations);\r\n};\r\n\r\nexport const fbx2json = async () => {\r\n    for (const fileName of fbxList) {\r\n        await handleFile(fileName);\r\n    }\r\n};\r\n"],"sourceRoot":""}