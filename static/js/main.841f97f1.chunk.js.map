{"version":3,"sources":["reducer/settingsReducer.js","context/SettingsContext.js","helpers.js","data/face_offset.js","ModelViewer.js","Display.js","MainPage.js","App.js","hooks/useToggleState.js","styles/MainPageStyles.js","styles/Rose-Petals.svg","consts.js","viewerHelpers.js","serviceWorker.js","index.js"],"names":["settingsReducer","state","action","key","value","type","currentValue","defaultSetting","defaultSettings","update","forEach","v","SettingsContext","createContext","DispatchContext","initAniChain","chainCodeToList","animation","code","initSettings","model","scene","app","outline","capture","chainMaker","chain","SettingsProvider","props","useReducer","settings","dispatch","Provider","children","callbackOnPotentialArray","object","callback","Array","isArray","child","setInitialSettings","params","length","faceTextureDefined","param","split","keycode","setValue","join","chainList","map","n","parseFloat","initKey","group","isBooleanValue","Boolean","generateChainCode","defaultMod","timeScale","repetitions","modList","ts","r","output","ani","i","fileName","aniName","concat","Object","keys","modKey","collectFilter","toggleState","collected","tmp","k","push","multiCondFilter","input","filters","filterKeys","filter","el","every","includes","complementaryColor","color","hexColor","replace","toString","slice","aniButtonsFromObject","handleSelect","groupName","style","maxWidth","variant","data-value","data-name","onClick","getStandbyCode","weapon","gender","WEAPON_CODE","GENDER_CODE","getVictoryCode","getDashAtkCode","getRollCode","getComboCode","comboLength","COMBO_LENGTH","result","getFSCode","fsAniLength","FS_LENGTH","getLobbyCode","faceOffset","c110267_01","x","y","c110050_02","c110291_01","c110354_01","c110345_01","c110266_01","c110365_01","c110346_01","c110366_01","c110299_02","c110360_01","c110307_01","c110322_01","c110356_01","c110300_01","c110344_01","c110053_03","c110368_01","c110367_01","c110003_02","c110270_02","c110341_03","ModelViewer","animate","frameId","requestAnimationFrame","mixers","dt","clock","getDelta","mixer","renderer","render","camera","init","models","modelInfo","main","modelId","weaponLeft","analyzeWeaponCode","weaponRight","outlines","outlineDetails","outlineColor","size","outlineSize","enable","showOutline","opacity","outlineOpacity","viewport","width","window","innerWidth","height","innerHeight","THREE","background","bgColor","CAM_PARAMS","angle","near","far","cameraPosition","position","set","updateProjectionMatrix","controls","OrbitControls","mount","controlsPosition","target","light","add","rendererAA","antialias","alpha","outputEncoding","rendererNoAA","antiAliasing","canvas","domElement","setSize","appendChild","playNextAni","_aniIdx","nAni","mediaRecorder","stop","toggleCapture","newIdx","aniIdx","addAnimationChain","animationChain","a","analyzeChainCode","fileList","animationList","setIsLoading","addEventListener","aniSettings","batchLoader","file","path","fbxSource","loadModel","animations","Promise","all","animFiles","anim","fileIdx","find","name","initLoad","modelPath","loadMain","loadWeaponR","loadWeaponL","addWeapon","side","boneName","traverse","removeWeapon","remove","this","addOutline","initPos","clone","initRot","rotation","changeMaterialToBasic","weaponInfo","weaponModel","texture","flipped","Math","PI","faceOverride","faceTexture","offsetFix","offsetFixBase","offsetFixOverride","offset","applyFace","aniCode","prevProps","aspect","videoStream","captureStream","MediaRecorder","mimeType","captureSetting","codec","chunks","ondataavailable","event","data","onstop","superBuffer","Blob","url","URL","createObjectURL","document","createElement","body","href","download","click","revokeObjectURL","start","currentSize","getSize","removeChild","disposeItem","faceTextureChanged","dx","dy","faceOffsetFix","oldFaceOffsetFix","currentFaceOffsetFix","stopAllAction","copy","newValue","visible","changeOutlineSize","changeOpacity","changeOutlineColor","cancelAnimationFrame","renderLists","dispose","ref","clipAction","setLoop","clampWhenFinished","time","play","PureComponent","AniControl","lazy","Display","useContext","id","face","chainCode","initCameraPosition","showAniControl","useCallback","faceOffsets","defaultCameraPosition","cameraPositions","isNaN","controlsPositions","className","fallback","ControlPanel","SideBar","MainPage","location","classes","useStyles","useState","currentMode","setCurrentMode","useToggleState","sidebarOpen","toggleSidebarOpen","controlOpen","toggleControlOpen","isLoading","initLoadDone","setInitLoadDone","showSettings","viewerRef","useRef","setViewport","useEffect","pathname","updateViewportSize","removeEventListener","current","clientHeight","clientWidth","loadingMsg","root","CssBaseline","mode","open","openSidebarButton","openControl","content","process","App","routeProps","initVal","setState","drawerWidth","DRAWER_WIDTH","drawerBG","DRAWER_BGCOLOR","makeStyles","theme","display","drawer","overflowY","drawerPaper","alignItems","backgroundColor","backgroundImage","bg","backgroundSize","backgroundPosition","marginBottom","padding","top","left","margin","borderRadius","transition","cursor","zIndex","justifyContent","fontSize","module","exports","baseUrl","sideContent","supportedCodecs","ft","f","wr","wl","cam","showAC","AA","cc","Sword","Blade","Dagger","Axe","Lance","Bow","Wand","Staff","Manacaster","WEAPON_LIST","Male","Female","FILTERS","rarity","element","WEAPON_FILTERS","spFaceTextures","commonBG","green","black","grey","white","c","d","c100034_01","d210078_01","d210114_01","smith","face1","face2","face3","face4","face5","face6","face7","face8","face9","videoCodecs","resolve","FBXLoader","load","endsWith","weaponCode","substring","item","disposedList","Set","needToDispose","has","uuid","notDisposed","disposeObject","isMesh","material","obj","geometry","texturePath","encoding","newMaterial","skinning","fill","updateOutlineShader","fog","needsUpdate","onBeforeCompile","shader","customTransform","vertexShader","setTimeout","updated","m","details","replaceMaterial","transparent","createOutlineMaterial","isSkinnedMesh","bind","skeleton","bindMatrix","parent","faceTexturePath","faceMaterial","groups","faceGroups","count","materialIndex","min","end","max","uv","attributes","u","getX","getY","setXY","aniCodes","currentAni","currentParts","Infinity","parseInt","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qSAEaA,EAAkB,SAACC,EAAOC,GACnC,IAAIC,EAAKC,EACT,OAAQF,EAAOG,MACX,IAAK,SACDF,EAAMD,EAAOC,IACbC,EAAQF,EAAOE,MACf,IAAME,EAAeL,EAAME,GAAKC,GAChC,OAAO,2BACAH,GADP,kBAEKE,EAFL,2BAEgBF,EAAME,IAFtB,kBAE6BC,GAASE,MAE1C,IAAK,QAGDH,EAAMD,EAAOC,IACbC,EAAQF,EAAOE,MACf,IAAMG,EAAiBC,IAAgBL,GAEvC,IAAKC,EACD,OAAO,2BACAH,GADP,kBAEKE,EAFL,2BAEgBF,EAAME,IAASI,KAGnC,IAAME,EAAS,GAIf,OAHAL,EAAMM,SAAQ,SAAAC,GACVF,EAAOE,GAAKJ,EAAeI,MAExB,2BAAKV,GAAZ,kBAAoBE,EAApB,2BAA+BF,EAAME,IAASM,KAClD,IAAK,OAED,OACJ,IAAK,SAID,OAFAN,EAAMD,EAAOC,IACbC,EAAQF,EAAOE,MACR,2BAAKH,GAAZ,kBAAoBE,EAApB,2BAA+BF,EAAME,IAASC,KAClD,QACI,OAAOH,I,OCnCNW,EAAkBC,0BAClBC,EAAkBD,0BAEzBE,EAAeC,YAAgBR,IAAgBS,UAAUC,KAAM,QAExDC,EAAe,CACxBC,MAAM,eAAMZ,IAAgBY,OAC5BC,MAAM,eAAMb,IAAgBa,OAC5BJ,UAAU,eAAMT,IAAgBS,WAChCK,IAAI,eAAMd,IAAgBc,KAC1BC,QAAQ,eAAMf,IAAgBe,SAC9BC,QAAQ,eAAMhB,IAAgBgB,SAC9BC,WAAY,CAAEC,MAAOX,IAGlB,SAASY,EAAiBC,GAAQ,IAAD,EACPC,qBAAW7B,EAAiBmB,GADrB,mBAC7BW,EAD6B,KACnBC,EADmB,KAGpC,OACI,kBAACnB,EAAgBoB,SAAjB,CAA0B5B,MAAO0B,GAC7B,kBAAChB,EAAgBkB,SAAjB,CAA0B5B,MAAO2B,GAC5BH,EAAMK,a,sjBCXVC,EAA2B,SAACC,EAAQC,GACzCC,MAAMC,QAAQH,GACdA,EAAOzB,SAAQ,SAAA6B,GAAK,OAAIH,EAASG,MAGrCH,EAASD,IAGAK,EAAqB,SAAAC,GAC9B,GAAsB,IAAlBA,EAAOC,OAAX,CACA,IAAIC,GAAqB,EACzBF,EAAO/B,SAAQ,SAAAkC,GAEX,GAAKA,EAAL,CAFoB,MAIQA,EAAMC,MAAM,KAJpB,iBAIbC,EAJa,KAID1C,EAJC,WAMpB,GAAKA,EAAM,GAAX,CAEA,IAAI2C,EAA4B,IAAjB3C,EAAMsC,OAAetC,EAAM,GAAKA,EAAM4C,KAAK,KAE1D,OAAQF,GACJ,IAAK,KACDH,GAAqB,EACrB,MACJ,IAAK,KAED,IAAMM,EAAYjC,YAAgB+B,EAAU,aAC5C5B,IAAY,WAAZ,MAAsC8B,EACtC,MACJ,IAAK,KACgB,gBAAbF,IACAA,EAAQ,WAAOA,IAEnB,MACJ,IAAK,MACDA,EAAWA,EAASF,MAAM,KAAKK,KAAI,SAAAC,GAAC,OAAIC,WAAWD,MAzBvC,MA6BGE,IAAQP,GAAvBQ,EA7BY,EA6BZA,MAAOnD,EA7BK,EA6BLA,IAEToD,EAA8B,SAAbR,GAAoC,UAAbA,EAE9C5B,IAAamC,GAAOnD,GAAOoD,EACrBC,QAAqB,SAAbT,GACRA,OAGV5B,IAAY,MAAZ,QAAmCA,IAAY,MAAZ,GAE9BwB,IACDxB,IAAY,MAAZ,YAAuCA,IAAY,MAAZ,MAIlCsC,EAAoB,SAAA/B,GAC7B,IAAMgC,EAAa,CACfC,UAAW,EACXC,YAAa,GAEXC,EAAU,CACZC,GAAI,YACJC,EAAG,eAEDrB,EAAShB,EAAMgB,OACjBsB,EAAS,GAyBb,OAxBAtC,EAAMhB,SAAQ,SAACuD,EAAKC,GAAO,IACfC,EAAsBF,EAAtBE,SAAUC,EAAYH,EAAZG,QACdD,IAQAH,GANIA,EADM,IAANE,EACSF,EAAOK,OAAOF,GAEdH,EAAOK,OACZF,IAAazC,EAAMwC,EAAI,GAAGC,SAAWA,EAAW,KAGxCE,OAAO,MAE3BL,EAASA,EAAOK,OAAOD,GAEvBE,OAAOC,KAAKV,GAASnD,SAAQ,SAAA8D,GACzB,IAAMrE,EAAM0D,EAAQW,GAChBP,EAAI9D,KAASuD,EAAWvD,KACxB6D,EAASA,EAAOK,OAAP,WAAkBG,EAAlB,YAA4BP,EAAI9D,SAG7C+D,EAAIxB,EAAS,IACbsB,EAASA,EAAOK,OAAO,SAGxBL,GAGES,EAAgB,SAAAC,GACzB,IAAIC,EAAY,GAUhB,OATAL,OAAOC,KAAKG,GAAahE,SAAQ,SAAAP,GAC7B,IAAIyE,EAAM,GACVN,OAAOC,KAAKG,EAAYvE,IAAMO,SAAQ,SAAAmE,GAC9BH,EAAYvE,GAAK0E,IACjBD,EAAIE,KAAKD,MAGjBF,EAAUxE,GAAOyE,KAEdD,GAGEI,EAAkB,SAACC,EAAOC,GACnC,IAAMC,EAAaZ,OAAOC,KAAKU,GAE/B,OAAOD,EAAMG,QAAO,SAAAC,GAChB,OAAOF,EAAWG,OAAM,SAAAlF,GACpB,OAAK8E,EAAQ9E,GAAKuC,QACXuC,EAAQ9E,GAAKmF,SAASF,EAAGjF,WAK/BoF,EAAqB,SAAAC,GAC9B,IAAMC,EAAWD,EAAME,QAAQ,IAAK,MAEpC,MAAM,IAAN,QAAY,UAAY,WAAaD,GAAUE,SAAS,KAAKC,OAAO,KAG3DC,EAAuB,SAAC1D,EAAQ2D,EAAcC,GACvD,IAAK5D,EAAQ,OAAO,KACpB,IAAM6D,EAAQ,CAAEC,SAAU,WAC1B,OAAO3B,OAAOC,KAAKpC,GAAQe,KAAI,SAAA/C,GAAG,OAC9B,kBAAC,IAAD,CACI+F,QAAQ,YACR/F,IAAKA,EACLgG,aAAYhE,EAAOhC,GACnBiG,YAAA,UAAcL,EAAS,UAAMA,EAAN,KAAqB,IAA5C,OAAiD5F,GACjDkG,QAASP,EACTE,MAAOA,GAEN7F,OAMAmG,EAAiB,SAACC,EAAQC,GAAT,oBACnBC,IAAYF,GADO,YACIE,IAAYF,GADhB,gBAC+BG,IAAYF,KAE5DG,EAAiB,SAAAJ,GAAM,oBACzBE,IAAYF,GADa,YACFE,IAAYF,GADV,oBAC6BE,IAAYF,GADzC,YAGvBK,EAAiB,SAAAL,GAAM,oBAAWE,IAAYF,GAAvB,YAEvBM,EAAc,SAAAN,GAAM,oBAAWE,IAAYF,GAAvB,YAEpBO,EAAe,SAAAP,GAKxB,IAJA,IAAMQ,EAAcC,IAAaT,GAC3BrF,EAAOuF,IAAYF,GACrBU,EAAM,cAAU/F,GAEXgD,EAAI,EAAGA,GAAK6C,EAAa7C,IAC9B+C,EAASA,EAAO5C,OAAP,WAAkBnD,EAAlB,iBAA+BgD,EAA/B,MAGb,OADA+C,EAASA,EAAOrB,MAAM,GAAI,IAKjBsB,EAAY,SAAAX,GAKrB,IAJA,IAAMY,EAAcC,IAAUb,GACxBrF,EAAOuF,IAAYF,GACrBU,EAAM,aAAS/F,GAEVgD,EAAI,EAAGA,GAAKiD,EAAajD,IAC9B+C,EAASA,EAAO5C,OAAP,WAAkBnD,EAAlB,iBAA+BgD,EAA/B,MAGb,OADA+C,EAASA,EAAOrB,MAAM,GAAI,IAKjByB,EAAe,SAACd,EAAQC,GACjC,IAAMtF,EAAOuF,IAAYF,GACzB,MAAe,SAAXC,EACM,OAAN,OAActF,EAAd,YAAsBA,EAAtB,4BAA8CA,EAA9C,oBAA8DA,EAA9D,oBAA8EA,EAA9E,oBAA8FA,EAA9F,WAEE,OAAN,OAAcA,EAAd,YAAsBA,EAAtB,4BAA8CA,EAA9C,oBAA8DA,EAA9D,oBAA8EA,EAA9E,oBAA8FA,EAA9F,a,mPC/KWoG,EAxBI,CACfC,WAAY,CAAEC,EAAG,IAAMC,GAAI,KAC3BC,WAAY,CAAEF,EAAG,IAAMC,EAAG,KAC1BE,WAAY,CAAEH,EAAG,IAAMC,EAAG,KAC1BG,WAAY,CAAEJ,EAAG,IAAMC,EAAG,KAC1BI,WAAY,CAAEL,EAAG,IAAMC,GAAI,KAC3BK,WAAY,CAAEN,EAAG,IAAMC,EAAG,KAC1BM,WAAY,CAAEP,EAAG,KAAOC,GAAI,OAC5BO,WAAY,CAAER,EAAG,IAAMC,EAAG,KAC1BQ,WAAY,CAAET,EAAG,KAAOC,GAAI,OAC5BS,WAAY,CAAEV,EAAG,IAAMC,EAAG,KAC1BU,WAAY,CAAEX,EAAG,IAAMC,EAAG,KAC1BW,WAAY,CAAEZ,EAAG,IAAMC,GAAI,KAC3BY,WAAY,CAAEb,EAAG,KAAOC,EAAG,KAC3Ba,WAAY,CAAEd,EAAG,IAAMC,EAAG,KAC1Bc,WAAY,CAAEf,EAAG,IAAMC,GAAI,IAC3Be,WAAY,CAAEhB,EAAG,IAAMC,GAAI,KAC3BgB,WAAY,CAAEjB,EAAG,KAAOC,GAAI,OAC5BiB,WAAY,CAAElB,EAAG,KAAOC,GAAI,OAC5BkB,WAAY,CAAEnB,EAAG,KAAOC,GAAI,OAC5BmB,WAAY,CAAEpB,EAAG,KAAOC,GAAI,OAC5BoB,WAAY,CAAErB,EAAG,KAAOC,GAAI,OAC5BqB,WAAY,CAAEtB,EAAG,KAAOC,GAAI,Q,OCkmBjBsB,E,4MAlmBXC,QAAU,WAEN,GADA,EAAKC,QAAUC,sBAAsB,EAAKF,SACtC,EAAKG,OAAOzG,OAAS,EAAG,CACxB,IAAM0G,EAAK,EAAKC,MAAMC,WACtB,EAAKH,OAAOzI,SAAQ,SAAA6I,GAAK,OAAIA,EAAM9I,OAAO2I,MAE9C,EAAKI,SAASC,OAAO,EAAKpI,MAAO,EAAKqI,S,EAI1CC,KAAO,WAAO,IAAD,IACT,EAAKC,OAAS,GACd,EAAKC,UAAY,CACbC,KAAM,EAAKlI,MAAMmI,QACjBC,WAAY,EAAKpI,MAAMoI,WACjBC,YAAkB,EAAKrI,MAAMoI,YAC7B,GACNE,YAAa,EAAKtI,MAAMsI,YAClBD,YAAkB,EAAKrI,MAAMsI,aAC7B,IAIV,EAAKC,SAAW,GAChB,EAAKC,eAAiB,CAClB5E,MAAO,EAAK5D,MAAMyI,aAClBC,KAAM,EAAK1I,MAAM2I,YACjBC,OAAQ,EAAK5I,MAAM6I,YACnBC,QAAS,EAAK9I,MAAM+I,gBAIxB,EAAKC,SAAW,EAAKhJ,MAAMgJ,UAAY,CACnCC,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,aAInB,EAAK9B,OAAS,GAGd,EAAKE,MAAQ,IAAI6B,IAGjB,EAAK7J,MAAQ,IAAI6J,IACjB,EAAK7J,MAAM8J,WACgB,gBAAvB,EAAKvJ,MAAMwJ,QACL,IAAIF,IAAY,EAAKtJ,MAAMwJ,SAC3B,KAGV,EAAK1B,OAAS,IAAIwB,IACdG,IAAWC,MACX,EAAKV,SAASC,MAAQ,EAAKD,SAASI,OACpCK,IAAWE,KACXF,IAAWG,KAEf,EAAKC,eAAiB,EAAK7J,MAAM6J,gBAAkB,CAAC,EAAG,EAAG,KAC1D,IAAK/B,OAAOgC,UAASC,IAArB,oBAA4B,EAAKF,iBACjC,EAAK/B,OAAOkC,yBAGZ,EAAKC,SAAW,IAAIC,IAAc,EAAKpC,OAAQ,EAAKqC,OACpD,EAAKC,iBAAmB,EAAKpK,MAAMoK,kBAAoB,CAAC,EAAG,EAAG,IAC9D,IAAKH,SAASI,QAAON,IAArB,oBAA4B,EAAKK,mBACjC,EAAKH,SAASpL,SAGd,IAAIyL,EAAQ,IAAIhB,IAAuB,UACvCgB,EAAMR,SAASC,IAAI,EAAG,IAAK,KAC3B,EAAKtK,MAAM8K,IAAID,GAGf,EAAKE,WAAa,IAAIlB,KAAoB,CACtCmB,WAAW,EACXC,OAAO,IAEX,EAAKF,WAAWG,eAAiBrB,KAEjC,EAAKsB,aAAe,IAAItB,KAAoB,CACxCmB,WAAW,EACXC,OAAO,IAEX,EAAKE,aAAaD,eAAiBrB,KAEnC,EAAK1B,SAAW,EAAK5H,MAAM6K,aACrB,EAAKL,WACL,EAAKI,aACX,EAAKE,OAAS,EAAKlD,SAASmD,WAC5B,EAAKnD,SAASoD,QAAQ,EAAKhC,SAASC,MAAO,EAAKD,SAASI,QACzD,EAAKe,MAAMc,YAAY,EAAKH,QAE5B,EAAK1D,W,EAGT8D,YAAc,WAEN,EAAKlL,MAAMJ,SAAW,EAAKuL,UAAY,EAAKC,KAAO,IACnD,EAAKC,cAAcC,OACnB,EAAKtL,MAAMuL,iBAEf,IAAMC,GAAU,EAAKL,QAAU,GAAK,EAAKC,KACzC,EAAKK,OAASD,G,EAIlBE,kB,uCAAoB,WAAOnL,EAAQoL,EAAgB5J,GAA/B,2BAAA6J,EAAA,yDACXD,EADW,0DAGkBE,YAAiBF,GAHnC,mBAGTG,EAHS,KAGCC,EAHD,KAIhB,EAAKX,KAAOW,EAAcjL,OAE1B,EAAKd,MAAMgM,cAAa,GAExBzL,EAAOoH,MAAQ,IAAI2B,IAAqB/I,GACxC,EAAKgH,OAAOrE,KAAK3C,EAAOoH,OAExB,EAAKwD,QAAU,EACf5K,EAAOoH,MAAM5F,UAAYA,EACzBxB,EAAOoH,MAAMsE,iBAAiB,WAAY,EAAKf,aAC/C,EAAKgB,YAAcH,EAAczK,KAAI,SAAAe,GACjC,MAAO,CACHN,UAAWM,EAAIN,UACfC,YAAaK,EAAIL,gBAGnBmK,EAAcL,EAASxK,KAAI,SAAA8K,GAC7B,IAAMC,EAAI,UAAMC,EAAN,gBAAuBF,EAAvB,QACV,OAAOG,YAAUF,MAGfG,EAAa,GAzBH,UA2BQC,QAAQC,IAAIP,GA3BpB,QA2BVQ,EA3BU,OA6BhBZ,EAAcjN,SAAQ,SAAA8N,GAAS,IACnBC,EAAqBD,EAArBC,QAASrK,EAAYoK,EAAZpK,QACXnD,EAAYmD,EACZmK,EAAUE,GAASL,WAAWM,MAC1B,SAAAzK,GAAG,OAAIA,EAAI0K,OAASvK,KAExBmK,EAAUE,GAASL,WAAW,GACpCA,EAAWtJ,KAAK7D,MAEpB,EAAKmN,WAAaA,EAElB,EAAKf,OAAS,EACd,EAAKzL,MAAMgM,cAAa,GAzCR,4C,4DA6DpBgB,SAAW,WACP,IAAMC,EAAS,UAAMX,EAAN,gBAAuB,EAAKtM,MAAMR,MAAlC,YAA2C,EAAKQ,MAAMR,MAAtD,QACT0N,EAAWX,YAAUU,GAErB3E,EAAc,EAAKtI,MAAMsI,YACzB,EAAKL,UAAUK,YAAY9I,MAC3B,GACA2N,EAAcZ,YAAUjE,GAExBF,EAAa,EAAKpI,MAAMoI,WACxB,EAAKH,UAAUG,WAAW5I,MAC1B,GACA4N,EAAcb,YAAUnE,GAE9B,OAAOqE,QAAQC,IAAI,CAACQ,EAAUC,EAAaC,K,EAG/CC,UAAY,SAAC1I,EAAQ2I,GACjB,IAAMC,EAAQ,iBAAaD,EAAK,IAChC,EAAKtF,OAAOE,KAAKsF,UAAS,SAAA7M,GAClBA,EAAMoM,OAASQ,GAAsC,IAA1B5M,EAAMN,SAASS,QAC1CH,EAAM4J,IAAI5F,O,EAKtB8I,aAAe,SAAAH,GACX,IAAMC,EAAQ,iBAAaD,EAAK,IAChC,EAAKtF,OAAOE,KAAKsF,UAAS,SAAA7M,GACQ,IAA1BA,EAAMN,SAASS,QAAgBH,EAAMoM,OAASQ,GACf,UAA3B5M,EAAMN,SAAS,GAAG5B,MAClBkC,EAAM+M,OAAO,EAAK1F,OAAL,gBAAqBsF,S,kNAO9CK,KAAK5F,OACL4F,KAAK3N,MAAMgM,cAAa,G,SAGsB2B,KAAKX,W,mCAA5C9E,E,KAAMI,E,KAAaF,E,KAG1BuF,KAAK3F,OAAS,CACVE,OACAI,cACAF,cAGJuF,KAAKpF,SAASL,KAAO0F,YAAW1F,EAAMyF,KAAKnF,gBAG3CN,EAAK2F,QAAU3F,EAAK4B,SAASgE,QAC7B5F,EAAK6F,QAAU7F,EAAK8F,SAASF,QAG7BG,YAAsB/F,GAGtB,CAAC,QAAS,QAAQpJ,SAAQ,SAAAwO,GACtB,IAAM/O,EAAG,gBAAY+O,GAErB,GAAK,EAAKtN,MAAMzB,GAAhB,CAEA,IAAM2P,EAAa,EAAKjG,UAAU1J,GAC5B4P,EAAc,EAAKnG,OAAOzJ,GAC1B6P,EAAUF,EAAWE,QAC3BH,YAAsBE,EAAaC,GAEnCD,EAAYH,SAASnI,EAAIqI,EAAWG,QAAUC,KAAKC,GAAK,EAExD,EAAKhG,SAAShK,GAAOqP,YAAWO,EAAa,EAAK3F,gBAElD,EAAK6E,UAAU,EAAKrF,OAAL,gBAAqBsF,IAASA,OAI3CkB,EAAeb,KAAK3N,MAAMoO,UAAYT,KAAK3N,MAAMyO,aAEvB,IAA5Bd,KAAK3N,MAAM0F,WAAWE,GACM,IAA5B+H,KAAK3N,MAAM0F,WAAWG,GACtB2I,KAEIE,EAAY,CAAE9I,EAAG,EAAGC,EAAG,GACvB2I,IACMG,EAAgBjJ,EAAWiI,KAAK3N,MAAMoO,UAAY,CACpDxI,EAAG,EACHC,EAAG,GAED+I,EAAoBlJ,EACtBiI,KAAK3N,MAAMyO,cACV,CACD7I,EAAG,EACHC,EAAG,GAEP6I,EAAY,CACR9I,EAAGgJ,EAAkBhJ,EAAI+I,EAAc/I,EACvCC,EAAG+I,EAAkB/I,EAAI8I,EAAc9I,IAGzCgJ,EAAS,CACXjJ,EAAG+H,KAAK3N,MAAM0F,WAAWE,EAAI8I,EAAU9I,EACvCC,EAAG8H,KAAK3N,MAAM0F,WAAWG,EAAI6I,EAAU7I,GAE3CiJ,YAAU5G,EAAMyF,KAAK3N,MAAMyO,YAAaI,IAI5ClB,KAAKlO,MAAM8K,IAAIrC,GAEfyF,KAAK3N,MAAMgM,cAAa,GAGxB2B,KAAKjC,kBAAkBxD,EAAMyF,KAAK3N,MAAM+O,QAASpB,KAAK3N,MAAM+B,W,yLAGvCiN,G,yHAgBjBA,EAAUhG,SAASC,QAAU0E,KAAK3N,MAAMgJ,SAASC,OACjD+F,EAAUhG,SAASI,SAAWuE,KAAK3N,MAAMgJ,SAASI,SACnD,EAC2BuE,KAAK3N,MAAMgJ,SAA7BC,EADV,EACUA,MAAOG,EADjB,EACiBA,OACfuE,KAAK/F,SAASoD,QAAQ/B,EAAOG,GAC7BuE,KAAK7F,OAAOmH,OAAShG,EAAQG,EAC7BuE,KAAK7F,OAAOkC,0BAIZgF,EAAUpP,UAAY+N,KAAK3N,MAAMJ,SAAW+N,KAAK3N,MAAMJ,UACvD+N,KAAKuB,YAAcvB,KAAK7C,OAAOqE,cAAc,IAC7CxB,KAAKtC,cAAgB,IAAI+D,cAAczB,KAAKuB,YAAa,CACrDG,SAAU1B,KAAK3N,MAAMsP,eAAeC,QAExC5B,KAAK6B,OAAS,GACd7B,KAAKtC,cAAcoE,gBAAkB,SAAAC,GAAK,OACtC,EAAKF,OAAOtM,KAAKwM,EAAMC,OAC3BhC,KAAKtC,cAAcuE,OAAS,WACxB,EAAK5P,MAAMgM,cAAa,GACxB,IAAM6D,EAAc,IAAIC,KAAK,EAAKN,OAAQ,CACtC/Q,KAAM,eAENsR,EAAMC,IAAIC,gBAAgBJ,GAC1BjE,EAAIsE,SAASC,cAAc,KAC/BD,SAASE,KAAKnF,YAAYW,GAC1BA,EAAExH,MAAQ,gBACVwH,EAAEyE,KAAON,EACTnE,EAAE0E,SAAW,iBACb1E,EAAE2E,QACFrH,OAAO8G,IAAIQ,gBAAgBT,IAG/BpC,KAAK3N,MAAMgM,cAAa,GAExB2B,KAAKlC,OAAS,EACdkC,KAAKtC,cAAcoF,SAInBzB,EAAUnE,eAAiB8C,KAAK3N,MAAM6K,eAEhC6F,EAAc,IAAIpH,IACxBqE,KAAK/F,SAAS+I,QAAQD,GAEtB/C,KAAK/F,SAAW+F,KAAK3N,MAAM6K,aACrB8C,KAAKnD,WACLmD,KAAK/C,aACX+C,KAAK/F,SAASoD,QAAQ0F,EAAY9K,EAAG8K,EAAY7K,GAEjD8H,KAAKxD,MAAMyG,YAAYjD,KAAK7C,QAE5B6C,KAAK7C,OAAS6C,KAAK/F,SAASmD,WAC5B4C,KAAKxD,MAAMc,YAAY0C,KAAK7C,SAI5BkE,EAAUxP,QAAUmO,KAAK3N,MAAMR,M,wBAC/BmO,KAAK3N,MAAMgM,cAAa,GAClBiB,E,UAAeX,E,gBAAiBqB,KAAK3N,MAAMR,M,YAASmO,KAAK3N,MAAMR,M,iBAEjD+M,YAAUU,G,OAAxBzN,E,OACNyO,YAAsBzO,GAEtBmO,KAAKpF,SAASL,KAAO0F,YAAWpO,EAAOmO,KAAKnF,gBAG5C,CAAC,QAAS,QAAQ1J,SAAQ,SAAAwO,GACtB,IAAM/O,EAAG,gBAAY+O,GACjB0B,EAAUzQ,IACV,EAAKkP,aAAaH,MAI1BK,KAAKlO,MAAMiO,OAAOC,KAAK3F,OAAOE,MAC9B2I,YAAYlD,KAAK3F,OAAOE,MAExByF,KAAK3F,OAAOE,KAAO1I,EAGnBA,EAAMqO,QAAUrO,EAAMsK,SAASgE,QAC/BtO,EAAMuO,QAAUvO,EAAMwO,SAASF,QAG/BH,KAAKlO,MAAM8K,IAAI/K,GAGTgP,EAAeb,KAAK3N,MAAMoO,UAAYT,KAAK3N,MAAMyO,aAEvB,IAA5Bd,KAAK3N,MAAM0F,WAAWE,GACM,IAA5B+H,KAAK3N,MAAM0F,WAAWG,GACtB2I,IAEAM,YAAUtP,EAAOmO,KAAK3N,MAAMyO,YAAad,KAAK3N,MAAM0F,YAIxD,CAAC,QAAS,QAAQ5G,SAAQ,SAAAwO,GACtB,IAAM/O,EAAG,gBAAY+O,GACfa,EAAc,EAAKnG,OAAOzJ,GAE3B4P,IAEL,EAAKd,UAAUc,EAAab,GAEvB,EAAK/E,SAAShK,KACf,EAAKgK,SAAShK,GAAOqP,YACjBO,EACA,EAAK3F,qBAMjBmF,KAAKjC,kBACDlM,EACAmO,KAAK3N,MAAM+O,QACXpB,KAAK3N,MAAM+B,WAGf4L,KAAK3N,MAAMgM,cAAa,G,wBAGlB8E,EACF9B,EAAUP,cAAgBd,KAAK3N,MAAMyO,aAErCO,EAAUtJ,aAAeiI,KAAK3N,MAAM0F,YACpCoL,KAEMC,EAAKpD,KAAK3N,MAAM0F,WAAWE,EAAIoJ,EAAUtJ,WAAWE,EACpDoL,EAAKrD,KAAK3N,MAAM0F,WAAWG,EAAImJ,EAAUtJ,WAAWG,EACtDoL,EAAgB,CAAErL,EAAG,EAAGC,EAAG,GAC3BiL,IACMI,EAAmBxL,EACrBsJ,EAAUP,cACT,CACD7I,EAAG,EACHC,EAAG,GAEDsL,EAAuBzL,EACzBiI,KAAK3N,MAAMyO,cACV,CAAE7I,EAAG,EAAGC,EAAG,GAChBoL,EAAgB,CACZrL,EAAGuL,EAAqBvL,EAAIsL,EAAiBtL,EAC7CC,EAAGsL,EAAqBtL,EAAIqL,EAAiBrL,IAG/CgJ,EAAS,CACXjJ,EAAGmL,EAAKE,EAAcrL,EACtBC,EAAGmL,EAAKC,EAAcpL,GAE1BiJ,YAAUnB,KAAK3F,OAAOE,KAAMyF,KAAK3N,MAAMyO,YAAaI,I,QAK5D,CAAC,QAAS,QAAQ/P,QAAlB,uCAA0B,WAAMwO,GAAN,uBAAA1B,EAAA,yDAChBrN,EADgB,gBACD+O,GAEjB0B,EAAUzQ,KAAS,EAAKyB,MAAMzB,GAHZ,oDAKtB,EAAKkP,aAAaH,GAClBuD,YAAY,EAAK7I,OAAOzJ,IAEnB,EAAKyB,MAAMzB,GARM,wBASlB,EAAKyJ,OAAOzJ,GAAO,KACnB,EAAK0J,UAAU1J,GAAO,GAEtB,EAAKgK,SAAShK,GAAO,KAZH,kCAgBtB,EAAKyB,MAAMgM,cAAa,GAExB,EAAK/D,UAAU1J,GAAO8J,YAAkB,EAAKrI,MAAMzB,IAlB7B,EAmBgB,EAAK0J,UAAU1J,GAAtC0O,EAnBO,EAmBdzN,MAAkB4O,EAnBJ,EAmBIA,QAnBJ,UAsBF7B,YAAUU,GAtBR,QAsBhBzN,EAtBgB,OAuBtB,EAAKwI,OAAOzJ,GAAOiB,EAEnByO,YAAsB,EAAKjG,OAAOzJ,GAAM6P,GACpC,EAAKnG,UAAU1J,GAAK8P,UACpB,EAAKrG,OAAOzJ,GAAKyP,SAASnI,EAAIyI,KAAKC,IAGvC,EAAKhG,SAAShK,GAAOqP,YAAWpO,EAAO,EAAKgJ,gBAE5C,EAAK6E,UAAU7N,EAAO8N,GAEtB,EAAKtN,MAAMgM,cAAa,GAlCF,4CAA1B,uDAsCIgD,EAAUD,UAAYpB,KAAK3N,MAAM+O,UAC7BC,EAAUD,UACVpB,KAAK3F,OAAOE,KAAKP,MAAMyJ,gBADJ,EAIUzD,KAAK3F,OAAOE,KAAjC2F,EAJW,EAIXA,QAASE,EAJE,EAIFA,QACjBJ,KAAK3F,OAAOE,KAAK4B,SAASuH,KAAKxD,GAC/BF,KAAK3F,OAAOE,KAAK8F,SAASqD,KAAKtD,GAE/BJ,KAAKpG,OAAS,GACdoG,KAAKnB,WAAa,IAEtBmB,KAAKjC,kBACDiC,KAAK3F,OAAOE,KACZyF,KAAK3N,MAAM+O,QACXpB,KAAK3N,MAAM+B,YAKfiN,EAAUjN,YAAc4L,KAAK3N,MAAM+B,WAC/B4L,KAAKpG,OAAOzG,OAAS,GACrB6M,KAAKpG,OAAOzI,SACR,SAAA6I,GAAK,OAAKA,EAAM5F,UAAY,EAAK/B,MAAM+B,aAM/CiN,EAAUxF,UAAYmE,KAAK3N,MAAMwJ,UACjCmE,KAAKlO,MAAM8J,WACgB,gBAAvBoE,KAAK3N,MAAMwJ,QACL,IAAIF,IAAYqE,KAAK3N,MAAMwJ,SAC3B,MAIVwF,EAAUnG,cAAgB8E,KAAK3N,MAAM6I,cAC/ByI,EAAW3D,KAAK3N,MAAM6I,YAC5B8E,KAAKnF,eAAeI,OAAS0I,EAE7B5O,OAAOC,KAAKgL,KAAKpF,UAAUzJ,SAAQ,SAAAP,GAC1B,EAAKgK,SAAShK,IACnB,EAAKgK,SAAShK,GAAKO,SACf,SAAAa,GAAO,OAAKA,EAAQ4R,QAAUD,SAMtCtC,EAAUrG,cAAgBgF,KAAK3N,MAAM2I,cAC/BD,EAAOiF,KAAK3N,MAAM2I,YACxBgF,KAAKnF,eAAeE,KAAOA,EAE3BhG,OAAOC,KAAKgL,KAAKpF,UAAUzJ,SAAQ,SAAAP,GAC1B,EAAKgK,SAAShK,IACnB,EAAKgK,SAAShK,GAAKO,SAAQ,SAAAa,GAAO,OAC9B6R,YAAkB7R,EAAS+I,UAMnCsG,EAAUjG,iBAAmB4E,KAAK3N,MAAM+I,iBAClCuI,EAAW3D,KAAK3N,MAAM+I,eAC5B4E,KAAKnF,eAAeM,QAAUwI,EAE9B5O,OAAOC,KAAKgL,KAAKpF,UAAUzJ,SAAQ,SAAAP,GAC1B,EAAKgK,SAAShK,IACnB,EAAKgK,SAAShK,GAAKO,SAAQ,SAAAa,GAAO,OAC9B8R,YAAc9R,EAAS2R,UAM/BtC,EAAUvG,eAAiBkF,KAAK3N,MAAMyI,eAChC6I,EAAW3D,KAAK3N,MAAMyI,aAE5B/F,OAAOC,KAAKgL,KAAKpF,UAAUzJ,SAAQ,SAAAP,GAC1B,EAAKgK,SAAShK,IACnB,EAAKgK,SAAShK,GAAKO,SAAQ,SAAAa,GAAO,OAC9B+R,YAAmB/R,EAAS2R,U,qJAOxCK,qBAAqBhE,KAAKtG,SAC1BwJ,YAAYlD,KAAKlO,OACjBkO,KAAKpG,OAAS,KACdoG,KAAKlG,MAAQ,KACbkG,KAAK7F,OAAS,KACd6F,KAAK1D,SAAW,KAChB0D,KAAKlO,MAAQ,KACbkO,KAAK/F,SAAW,KAChB+F,KAAKnD,WAAWoH,YAAYC,UAC5BlE,KAAKnD,WAAWqH,UAChBlE,KAAKnD,WAAa,KAClBmD,KAAK/C,aAAagH,YAAYC,UAC9BlE,KAAK/C,aAAaiH,UAClBlE,KAAK/C,aAAe,O,+BAEd,IAAD,OACL,OACI,yBACIkH,IAAK,SAAAtO,GACD,EAAK2G,MAAQ3G,O,2BApclBgI,GACPmC,KAAKxC,QAAUK,EACf,IAAMoB,EAAOe,KAAKnB,WAAWhB,GACvB7D,EAAQgG,KAAK3F,OAAOE,KAAKP,MAC/BA,EAAMyJ,gBACN,IAAM9S,EAASqJ,EAAMoK,WAAWnF,GALjB,EAMoBe,KAAKzB,YAAYV,GAA5CzJ,EANO,EAMPA,UAAWC,EANJ,EAMIA,YAEnB1D,EAAO0T,QAAQ1I,IAAkBtH,GACjC1D,EAAO2T,mBAAoB,EAC3B3T,EAAOyD,UAAYA,EACnBzD,EAAO4T,KAAO,EACd5T,EAAO6T,W,GApKWC,iBCbpBC,G,MAAaC,gBAAK,kBAAM,yDA2FfC,MAzFf,SAAiBvS,GAAQ,IACbgJ,EAAahJ,EAAbgJ,SAEF9I,EAAWsS,qBAAWxT,KAHR,EAuBhBkB,EAlBAV,MACQ2I,EANQ,EAMZsK,GACArE,EAPY,EAOZA,QACAK,EARY,EAQZA,YACAiE,EATY,EASZA,KACApK,EAVY,EAUZA,YACAF,EAXY,EAWZA,WAXY,EAuBhBlI,EAVAb,UAAmBsT,EAbH,EAaHrT,KAAiByC,EAbd,EAacA,UAbd,EAuBhB7B,EATAT,MAAqB+J,EAdL,EAcPD,WAAqBqJ,EAdd,EAccA,mBAdd,EAuBhB1S,EARAR,IAAOmT,EAfS,EAeTA,eAAgBhI,EAfP,EAeOA,aACJjL,EAOnBM,EAPAN,QAAWgJ,OAhBK,EAuBhB1I,EANAP,QACYkJ,EAlBI,EAkBZD,OACOH,EAnBK,EAmBZ7E,MACM+E,EApBM,EAoBZD,KACSK,EArBG,EAqBZD,QAIF3I,EAAWqS,qBAAWtT,KACtBqM,EAAgBuH,uBAAY,WAM9B3S,EALe,CACX1B,KAAM,SACNF,IAAK,UACLC,MAAO,aAGZ,CAAC2B,IAEEuF,EAAaqN,IAAY,OAAD,OAAQL,IAEhCjU,EAAO0J,EAAQ,GAEf6K,EAAwBC,IAAgB9K,GACxC8K,IAAgB9K,GAChB8K,IAAgBxU,GAEhBoL,EAAiB+I,EACjBA,EAAmBtR,KAAI,SAACC,EAAGe,GAAJ,OACnB4Q,MAAM3R,GAAKyR,EAAsB1Q,GAAKf,KAE1CyR,EAEA5I,EAAmB+I,IAAkBhL,GACrCgL,IAAkBhL,GAClBgL,IAAkB1U,GAExB,OACI,yBAAK2U,UAAU,WACVP,GACG,yBAAKO,UAAU,sBACX,kBAAC,WAAD,CAAUC,SAAU,MAChB,kBAAChB,EAAD,CAAY7T,MAAO0B,EAASb,UAAU0C,cAIlD,kBAAC,EAAD,CACIiK,aAAchM,EAAMgM,aACpBpM,QAASA,EACT0P,eAAgBpP,EAASN,QACzB2L,cAAeA,EACfvC,SAAUA,EACVa,eAAgBA,EAChBO,iBAAkBA,EAClB5K,MAAO2I,EACPiG,QAASA,EACTK,YAAaA,EACb/I,WAAYA,EACZ4C,YAAaA,EACbF,WAAYA,EACZ2G,QAAS4D,EACT5Q,UAAWA,EACXyH,QAASA,EACTX,YAAaA,EACbJ,aAAcA,EACdE,YAAaA,EACbI,eAAgBA,EAChB8B,aAAcA,M,QC1ExByI,EAAehB,gBAAK,kBAAM,gEAC1BiB,EAAUjB,gBAAK,kBAAM,gEAoFZkB,MAlFf,YAAiC,IAAbC,EAAY,EAAZA,SACVC,EAAUC,cADY,EAGUC,mBAAS,SAHnB,mBAGrBC,EAHqB,KAGRC,EAHQ,OAIaC,aAAe,GAJ5B,mBAIrBC,EAJqB,KAIRC,EAJQ,OAKaF,aAAe,GAL5B,mBAKrBG,EALqB,KAKRC,EALQ,OAMMP,oBAAS,GANf,mBAMrBQ,EANqB,KAMVpI,EANU,OAOY4H,oBAAS,GAPrB,mBAOrBS,EAPqB,KAOPC,EAPO,KASjBC,EACP/B,qBAAWxT,KADXU,IAAO6U,aAGLC,EAAYC,mBAZU,EAaIb,mBAAS,CACrC3K,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,cAfS,mBAarBL,EAbqB,KAaX0L,EAbW,KAkB5BC,qBAAU,WACN,IAAM9T,EAAS4S,EAASmB,SAAS3T,MAAM,KAMvC,OALAL,YAAmBC,GACnByT,GAAgB,GAEhBpL,OAAO+C,iBAAiB,SAAU4I,GAE3B,WACH3L,OAAO4L,oBAAoB,SAAUD,MAE1C,CAACpB,EAASmB,WAEb,IAAMC,EAAqB,WACvB,IAAMzL,EAASoL,EAAUO,QAAQC,aAC3B/L,EAAQuL,EAAUO,QAAQE,YAChCP,EAAY,CAAEzL,QAAOG,YAQzB,OACI,oCACKgL,GAAa,yBAAKhB,UAAWM,EAAQwB,YAAxB,cACd,yBAAK9B,UAAWM,EAAQyB,MACpB,kBAAC,WAAD,CAAU9B,SAAU,MAChB,kBAAC+B,EAAA,EAAD,MACA,kBAAC9B,EAAD,CACI+B,KAAMxB,EACNyB,KAAMpB,EACNC,kBAAmBA,IAEtBE,GAAgBE,GACb,oCACI,4BACI9P,QAASwP,EACTb,UAAWM,EAAQ6B,mBAEnB,kBAAC,IAAD,OAGJ,kBAAChC,EAAD,CACIU,kBAAmBA,EACnBqB,KAAMtB,EACNwB,YA5BR,SAAAH,GAChBlB,IACAL,EAAeuB,QA+BNhB,GACG,0BAAMvC,IAAK0C,EAAWpB,UAAWM,EAAQ+B,SACrC,kBAAC,EAAD,CACIzJ,aAAcA,EACdhD,SAAUA,Q,MC5E/B,IAAMsD,EAAYoJ,YAEVC,IAZf,WACI,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO9N,OAAQ,SAAA+N,GAAU,OAAI,kBAAC,EAAaA,U,mDCH5C7B,IARf,WAA0C,IAAlB8B,EAAiB,0DACXjC,mBAASiC,GADE,mBAC9BxX,EAD8B,KACvByX,EADuB,KAE/BhT,EAAc2R,kBAAO,WACvBqB,GAAS,SAAAzX,GAAK,OAAKA,QAEvB,MAAO,CAACA,EAAOyE,EAAYiS,W,gCCP/B,oCAIMgB,EAAcC,IACdC,EAAWC,IAEXvC,EAAYwC,aAAW,SAAAC,GAAK,MAAK,CACnCjB,KAAM,CACFkB,QAAS,QACTpN,MAAO,QACPG,OAAQ,SAEZkN,OAAQ,CACJrN,MAAO8M,EACPQ,UAAW,UAEfC,YAAa,CACTC,WAAY,SACZC,gBAAiBT,EACjBU,gBAAgB,OAAD,OAASC,IAAT,KAEfC,eAAgB,QAChBC,mBAAoB,SACpB7N,MAAO8M,EACP,WAAY,CACRgB,aAAc,WAGtBtB,QAAS,CACLrM,OAAQ,QACRH,MAAO,QACP+N,QAAS,GAEbzB,kBAAmB,CACfzL,SAAU,WACVmN,IAAK,EACLC,KAAM,EACNC,OAAQ,OACRrO,QAAS,MACTsO,aAAc,UACdC,WAAY,uBACZC,OAAQ,UACR,UAAW,CACPxO,QAAS,MAGjBoM,WAAY,CACRpL,SAAU,WACVyN,OAAQ,OACRtO,MAAO,QACPG,OAAQ,QACRiN,QAAS,OACTmB,eAAgB,SAChBf,WAAY,SACZ7S,MAAO,QACP6T,SAAU,UACVf,gBAAiB,uBAIV/C,O,mBC7Df+D,EAAOC,QAAU,IAA0B,yC,+BCA3C,soBAAO,IAAM3B,EAAe,QACfE,EAAiB,UAEjB0B,EAAU,wCAIVhZ,EAAkB,CAC3BY,MAAO,CACHiT,GAAI,aACJrE,QAAS,aACTK,YAAa,aACbiE,KAAM,EACNpK,YAAa,GACbF,WAAY,IAEhB3I,MAAO,CACH8J,WAAY,UACZqJ,mBAAoB,MAExBvT,UAAW,CACPC,KAhBW,qBAiBXyC,UAAW,GAEfrC,IAAK,CACDmY,YAAa,WACbtD,cAAc,EACd1B,gBAAgB,EAChBhI,cAAc,EACdjL,SAAS,GAEbD,QAAS,CACLiJ,QAAQ,EACRF,KAAM,EACN9E,MAAO,UACPkF,QAAS,GAEblJ,QAAS,CACLgJ,QAAQ,EACRkP,gBAAiB,GACjBvI,MAAO,KAIF9N,EAAU,CACnBgR,GAAI,CAAE/Q,MAAO,QAASnD,IAAK,MAC3BwZ,GAAI,CAAErW,MAAO,QAASnD,IAAK,eAC3ByZ,EAAG,CAAEtW,MAAO,QAASnD,IAAK,QAC1B0Z,GAAI,CAAEvW,MAAO,QAASnD,IAAK,eAC3B2Z,GAAI,CAAExW,MAAO,QAASnD,IAAK,cAC3BqY,GAAI,CAAElV,MAAO,QAASnD,IAAK,cAC3B4Z,IAAK,CAAEzW,MAAO,QAASnD,IAAK,sBAC5B2D,GAAI,CAAER,MAAO,YAAanD,IAAK,aAC/B6Z,OAAQ,CAAE1W,MAAO,MAAOnD,IAAK,kBAC7BgW,aAAc,CAAE7S,MAAO,MAAOnD,IAAK,gBACnCsK,YAAa,CAAEnH,MAAO,UAAWnD,IAAK,UACtC8Z,GAAI,CAAE3W,MAAO,MAAOnD,IAAK,gBACzB+Z,GAAI,CAAE5W,MAAO,YAAanD,IAAK,SAGtBsG,EAAc,CACvB0T,MAAO,MACPC,MAAO,MACPC,OAAQ,MACRC,IAAK,MACLC,MAAO,MACPC,IAAK,MACLC,KAAM,MACNC,MAAO,MACPC,WAAY,OAGHC,EAAc,CACvB,QACA,QACA,SACA,MACA,QACA,MACA,OACA,QACA,cAGSlU,EAAc,CACvBmU,KAAM,GACNC,OAAQ,IAGC9T,EAAe,CACxBsT,IAAK,EACLE,IAAK,EACLE,MAAO,EACPL,OAAQ,EACRD,MAAO,EACPG,MAAO,EACPE,KAAM,EACNN,MAAO,GAGE/S,EAAY,CACrBkT,IAAK,EACLE,IAAK,EACLE,MAAO,EACPL,OAAQ,EACRD,MAAO,EACPG,MAAO,EACPE,KAAM,EACNN,MAAO,GAGEY,EAAU,CACnBC,OAAQ,CAAC,IAAK,IAAK,KACnBC,QAAS,CAAC,QAAS,QAAS,OAAQ,QAAS,UAC7C1U,OAAQ,CACJ,QACA,QACA,SACA,MACA,QACA,MACA,OACA,QACA,eAIK2U,EAAiB,CAC1BF,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAClCC,QAAS,CAAC,QAAS,QAAS,OAAQ,QAAS,SAAU,QACvD1U,OAAQ,CACJ,QACA,QACA,SACA,MACA,QACA,MACA,OACA,QACA,eAIK4U,EAAiB,CAC1B5S,WAAY,eAGH6S,EAAW,CACpBC,MAAO,UACPC,MAAO,UACPC,KAAM,UACNC,MAAO,WAGEnQ,EAAa,CACtBC,MAAO,GACPE,IAAK,IACLD,KAAM,KAGGsJ,EAAkB,CAC3B4G,EAAG,CAAC,EAAG,GAAK,KACZC,EAAG,CAAC,EAAG,GAAK,GAEZC,WAAY,CAAC,EAAG,GAAK,MACrBC,WAAY,CAAC,EAAG,EAAG,IACnBC,WAAY,CAAC,EAAG,EAAG,IAEnBC,MAAO,CAAC,EAAG,EAAG,IAGL/G,EAAoB,CAC7B0G,EAAG,CAAC,EAAG,GAAK,GACZC,EAAG,CAAC,EAAG,EAAG,GAEVE,WAAY,CAAC,EAAG,EAAG,GACnBC,WAAY,CAAC,EAAG,EAAG,GAEnBC,MAAO,CAAC,EAAG,GAAK,IAGPnH,EAAc,CACvBoH,MAAO,CAAEvU,EAAG,EAAGC,EAAG,GAClBuU,MAAO,CAAExU,EAAG,EAAGC,EAAG,GAClBwU,MAAO,CAAEzU,EAAG,EAAGC,EAAG,GAClByU,MAAO,CAAE1U,EAAG,EAAGC,EAAG,GAClB0U,MAAO,CAAE3U,EAAG,EAAGC,EAAG,GAClB2U,MAAO,CAAE5U,EAAG,EAAGC,GAAI,GACnB4U,MAAO,CAAE7U,EAAG,EAAGC,GAAI,GACnB6U,MAAO,CAAE9U,EAAG,EAAGC,GAAI,GACnB8U,MAAO,CAAE/U,EAAG,EAAGC,GAAI,IAGV+U,EAAc,CACvB,yBACA,wBACA,wBACA,e,ihBC9LSrO,EAAY,SAAAwD,GACrB,OACIA,GACA,IAAItD,SAAQ,SAAAoO,IACR,IAAIC,KAAYC,KAAKhL,EAAK8K,OAczBxS,EAAoB,SAAA/I,GAC7B,IAAM+O,EAAU/O,EAAK0b,SAAS,KACxBC,EAAa3b,EAAK4b,UAAU,EAAG5b,EAAKwB,OAAS,GAInD,MAAO,CAAEtB,MAHE,UAAM8M,IAAN,gBAAuB2O,EAAvB,YAAqCA,EAArC,QAGK7M,QAFH,UAAM9B,IAAN,gBAAuB2O,EAAvB,YAAqCA,EAArC,QAEY5M,YAGhBwC,EAAc,SAAAsK,GACvB,GAAKA,EAAL,CAGA,IAAMC,EAAe,IAAIC,IAInBC,EAAgB,SAAA/a,GAAM,OAAIA,GAFZ,SAAAA,GAAM,OAAK6a,EAAaG,IAAIhb,EAAOib,MAEbC,CAAYlb,IAOhDsR,EAAU,SAAAtR,GACR+a,EAAc/a,IANA,SAAAA,GAClB6a,EAAa7Q,IAAIhK,EAAOib,MACxBjb,EAAOsR,UAIoB6J,CAAcnb,IAG7C4a,EAAK3N,UAAS,SAAA7M,GACLA,EAAMgb,SAGXrb,YAAyBK,EAAMib,UAAU,SAAAC,GACrChK,EAAQgK,EAAIva,KACZuQ,EAAQgK,MAGZhK,EAAQlR,EAAMmb,gBAIT7N,EAAwB,SAAC1N,EAAQwb,GACrCxb,GACLA,EAAOiN,UAAS,SAAA7M,GACZ,GAAKA,EAAMgb,QAAyB,YAAfhb,EAAMoM,KAA3B,CAEA,IACIqB,EADEwN,EAAWjb,EAAMib,UAGnBxN,EADA2N,GACU,IAAIzS,KAAsByR,KAAKgB,GAE/Btb,MAAMC,QAAQC,EAAMib,UACxBA,EAAS,GAAGta,IACZsa,EAASta,KAGX0a,SAAW1S,KAEnB,IAAM2S,EAAc,IAAI3S,IAAwB,CAC5ChI,IAAK8M,EACL8N,UAAU,IAGd5b,YAAyBsb,GAAU,SAAAC,GAC3BE,GAAeF,EAAIva,KAAKua,EAAIva,IAAIuQ,UACpCgK,EAAIhK,aAGJpR,MAAMC,QAAQkb,GACdjb,EAAMib,SAAW,IAAInb,MAAMmb,EAAS9a,QAAQqb,KAAKF,GAEjDtb,EAAMib,SAAWK,OA0ChBxK,EAAgB,SAAC,EAAc3I,GAAa,IAAzB8S,EAAwB,EAAxBA,SAC5Btb,YAAyBsb,GAAU,SAAAC,GAC/BA,EAAI/S,QAAUA,MAKhBsT,EAAsB,SAACR,EAAUlT,GAEnCkT,EAASS,KAAOT,EAASS,IACzBT,EAASU,aAAc,EAEvBV,EAASW,gBAAkB,SAAAC,GACvB,IACMC,EAAe,uEACuC,KAAP/T,EADhC,mBAGrB8T,EAAOE,aAAeF,EAAOE,aAAa5Y,QAJ5B,0BAMV2Y,IAGRE,YAAW,WACPf,EAASS,KAAOT,EAASS,IACzBT,EAASU,aAAc,IACxB,MAIM9K,EAAoB,SAAC,EAAc9I,GAAU,IAAtBkT,EAAqB,EAArBA,SAChC,GAAInb,MAAMC,QAAQkb,GAAW,CACzB,IAAMgB,EAAU,IAAIvB,IACpBO,EAAS9c,SAAQ,SAAA+d,GACTD,EAAQrB,IAAIsB,EAAErB,QAElBY,EAAoBS,EAAGnU,GACvBkU,EAAQrS,IAAIsS,EAAErB,eAGlBY,EAAoBR,EAAUlT,IAKzBgJ,EAAqB,SAAC,EAAc9N,GAAW,IAAvBgY,EAAsB,EAAtBA,SACjC,GAAInb,MAAMC,QAAQkb,GAAW,CACzB,IAAMgB,EAAU,IAAIvB,IACpBO,EAAS9c,SAAQ,SAAA+d,GACTD,EAAQrB,IAAIsB,EAAErB,QAElBqB,EAAEjZ,MAAQ,IAAI0F,IAAY1F,GAC1BgZ,EAAQrS,IAAIsS,EAAErB,eAGlBI,EAAShY,MAAQ,IAAI0F,IAAY1F,IAK5BgK,EAAa,SAACrN,EAAQuc,GAC/B,GAAKvc,EAAL,CACA,IAAMgI,EAAW,GAiBjB,OAhBAhI,EAAOiN,UAAS,SAAA7M,GACZ,GAAKA,EAAMgb,OAAX,CAEA,IAAMhc,EAAUgB,EAAMmN,QACtBnO,EAAQoN,KAAO,UACfpN,EAAQ4R,QAAUuL,EAAQlU,OAE1BL,EAASrF,KAAKvD,IApFE,SAACY,EAAQ0b,GAE7B3b,YAAyBC,EAAOqb,UAAU,SAAAC,GAClCA,EAAIva,KAAKua,EAAIva,IAAIuQ,UACrBgK,EAAIhK,aAGJpR,MAAMC,QAAQH,EAAOqb,UACrBrb,EAAOqb,SAAW,IAAInb,MAAMF,EAAOqb,SAAS9a,QAAQqb,KAAKF,GAEzD1b,EAAOqb,SAAWK,EA4ElBc,CAAgBpd,EA5GM,SAAC,GAA8B,IAA5B+I,EAA2B,EAA3BA,KAAM9E,EAAqB,EAArBA,MAAOkF,EAAc,EAAdA,QACpCmT,EAAc,IAAI3S,IAAuB,CAC3C1F,QACAkF,UACAwE,KAAMhE,IACN0T,aAAa,EACbd,UAAU,IAYd,OAVAD,EAAYM,gBAAkB,SAAAC,GAC1B,IACMC,EAAe,mEACmC,KAAP/T,EAD5B,eAGrB8T,EAAOE,aAAeF,EAAOE,aAAa5Y,QAJ5B,0BAMV2Y,IAGDR,EAyFiBgB,CAAsBH,IAGtCnc,EAAMuc,eACNvd,EAAQwd,KAAKxc,EAAMyc,SAAUzc,EAAM0c,YAEvC1c,EAAM2c,OAAO/S,IAAI5K,OAEd4I,IAGEuG,EAAY,SAACvO,EAAQkO,EAAa/I,GAC3C,IAAM6X,EAAe,UAAMjR,IAAN,gBAAuBmC,EAAvB,YAAsCA,EAAtC,QACfL,GAAU,IAAI9E,KAAsByR,KAAKwC,GAC/CnP,EAAQ4N,SAAW1S,KACnB,IAAMkU,EAAe,IAAIlU,IAAwB,CAC7ChI,IAAK8M,EACL8N,UAAU,IAGd3b,EAAOiN,UAAS,SAAA7M,GACZ,GAAmB,aAAfA,EAAMoM,MAAwD,IAAjCpM,EAAMmb,SAAS2B,OAAO3c,OAAc,CACjE,IAAM4c,EAAa/c,EAAMmb,SAAS2B,OAAOla,QACrC,SAAAN,GAAC,OAAIA,EAAE0a,MAAQ,OAEnB,GAA0B,IAAtBD,EAAW5c,OAOX,GANwB4c,EAAWpc,KAC/B,SAAAI,GAAK,OAAIA,EAAMkc,iBAEH9e,SACZ,SAAAwD,GAAC,OAAK3B,EAAMib,SAAStZ,GAAKkb,KAET,IAAjB9X,EAAWE,GAA4B,IAAjBF,EAAWG,EAAS,CAW1C,IAVA,IAAM4K,EAAQnC,KAAKuP,IACfH,EAAW,GAAGjN,MACdiN,EAAW,GAAGjN,OAEZqN,EAAMxP,KAAKyP,IACbL,EAAW,GAAGjN,MAAQiN,EAAW,GAAGC,MACpCD,EAAW,GAAGjN,MAAQiN,EAAW,GAAGC,OAGlCK,EAAKrd,EAAMmb,SAASmC,WAAWD,GAC5B1b,EAAImO,EAAOnO,EAAIwb,EAAKxb,IAAK,CAC9B,IAAM4b,EAAIF,EAAGG,KAAK7b,GAAK,IAAOoD,EAAWE,EACnC7G,EAAIif,EAAGI,KAAK9b,GAAK,IAAOoD,EAAWG,EACzCmY,EAAGK,MAAM/b,EAAG4b,EAAGnf,GAEnBif,EAAG1B,aAAc,QAQxBzQ,EAAmB,SAAAvM,GAC5B,IAAKA,EAAM,MAAO,CAAC,GAAI,IAKvB,IAJA,IAAMgf,EAAWhf,EAAK2B,MAAM,KACtBmK,EAAOkT,EAASxd,OAChBgL,EAAW,GACXC,EAAgB,GACbzJ,EAAI,EAAGA,EAAI8I,EAAM9I,IAAK,CAC3B,IAMIic,EANAxc,EAAY,EACZC,EAAc,EACd6K,EAAU,KACVrK,EAAU,KACVD,EAAW,KACXua,OAAO,EAEL0B,EAAeF,EAAShc,GAAGrB,MAAM,KAEvC,GAD8C,IAAxBud,EAAa1d,OAE/Bgc,EAAU0B,EAAa,OACpB,CAAC,IAAD,cACmBA,EADnB,GACFjc,EADE,KACQua,EADR,KAEHjQ,EAAUf,EAAShL,OAAS,EAMhC,GAJIyB,IACAsK,EAAUf,EAAShL,OACnBgL,EAAS5I,KAAKX,IAEdua,EAAQpZ,SAAS,KAAM,CAAC,IAAD,EACKoZ,EAAQ7b,MAAM,KADnB,iBAChB8L,EADgB,KACP7M,EADO,WAEvBsC,EAAUuK,EAFa,oBAGH7M,GAHG,IAGvB,2BAA8B,CAAC,IAAD,UACGe,MAAM,KADT,mBACnB1C,EADmB,KACdC,EADc,KAEd,OAARD,IACAwD,EAAYP,WAAWhD,IAEf,MAARD,IACAyD,EAAwB,QAAVxD,EAAkBigB,IAAWC,SAASlgB,KATrC,oCAavBgE,EAAUsa,EAEdyB,EAAa,CACT1R,UACArK,UACAT,YACAC,eAEJ+J,EAAc7I,KAAKqb,GAEvB,MAAO,CAACzS,EAAUC,IAGT3M,EAAkB,SAACE,EAAMyN,GAAU,IAAD,EACTlB,EAAiBvM,GADR,mBACpCwM,EADoC,KAC1BC,EAD0B,KAErCjL,EAASiL,EAAcjL,OAa7B,OAZeiL,EAAczK,KAAI,SAACe,EAAKC,GAAO,IAClCuK,EAA6CxK,EAA7CwK,QAASrK,EAAoCH,EAApCG,QAAST,EAA2BM,EAA3BN,UAAWC,EAAgBK,EAAhBL,YAErC,MAAO,CACH+K,KAFaA,EAAKtK,OAAO3B,EAAS,EAAT,WAAiBwB,EAAI,GAAM,IAGpDC,SAAUuJ,EAASe,GACnBrK,UACAT,YACAC,cACAyQ,GAAI+I,oB,8IC5TI5Z,QACW,cAA7BsH,OAAOuK,SAASkL,UAEe,UAA7BzV,OAAOuK,SAASkL,UAEhBzV,OAAOuK,SAASkL,SAASC,MACvB,2DCXNC,IAAShX,OACL,kBAAC,IAAD,KACI,kBAAC8N,EAAA,EAAD,OAEJzF,SAAS4O,eAAe,SDwHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.841f97f1.chunk.js","sourcesContent":["import { defaultSettings } from \"../consts\";\r\n\r\nexport const settingsReducer = (state, action) => {\r\n    let key, value;\r\n    switch (action.type) {\r\n        case \"toggle\":\r\n            key = action.key;\r\n            value = action.value;\r\n            const currentValue = state[key][value];\r\n            return {\r\n                ...state,\r\n                [key]: { ...state[key], [value]: !currentValue },\r\n            };\r\n        case \"reset\":\r\n            // reset values\r\n            // value = array of keys in settings[key] to be reset, null -> reset all\r\n            key = action.key;\r\n            value = action.value;\r\n            const defaultSetting = defaultSettings[key];\r\n            // no value -> reset all\r\n            if (!value)\r\n                return {\r\n                    ...state,\r\n                    [key]: { ...state[key], ...defaultSetting },\r\n                };\r\n            // if value is defined, reset only the specified keys\r\n            const update = {};\r\n            value.forEach(v => {\r\n                update[v] = defaultSetting[v];\r\n            });\r\n            return { ...state, [key]: { ...state[key], ...update } };\r\n        case \"load\":\r\n            // load preset values\r\n            return;\r\n        case \"update\":\r\n            // update state[key] with values from value\r\n            key = action.key;\r\n            value = action.value;\r\n            return { ...state, [key]: { ...state[key], ...value } };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport { settingsReducer } from \"../reducer/settingsReducer\";\r\nimport { defaultSettings } from \"../consts\";\r\nimport { chainCodeToList } from \"../viewerHelpers\";\r\n\r\nexport const SettingsContext = createContext();\r\nexport const DispatchContext = createContext();\r\n\r\nconst initAniChain = chainCodeToList(defaultSettings.animation.code, \"init\");\r\n\r\nexport const initSettings = {\r\n    model: { ...defaultSettings.model },\r\n    scene: { ...defaultSettings.scene },\r\n    animation: { ...defaultSettings.animation },\r\n    app: { ...defaultSettings.app },\r\n    outline: { ...defaultSettings.outline },\r\n    capture: { ...defaultSettings.capture },\r\n    chainMaker: { chain: initAniChain },\r\n};\r\n\r\nexport function SettingsProvider(props) {\r\n    const [settings, dispatch] = useReducer(settingsReducer, initSettings);\r\n\r\n    return (\r\n        <SettingsContext.Provider value={settings}>\r\n            <DispatchContext.Provider value={dispatch}>\r\n                {props.children}\r\n            </DispatchContext.Provider>\r\n        </SettingsContext.Provider>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { initSettings } from \"./context/SettingsContext\";\r\nimport {\r\n    initKey,\r\n    WEAPON_CODE,\r\n    GENDER_CODE,\r\n    COMBO_LENGTH,\r\n    FS_LENGTH,\r\n} from \"./consts\";\r\n\r\nimport { chainCodeToList } from \"./viewerHelpers\";\r\n\r\n// if object is an array, apply callback on each element of object, otherwise, apply call back on the object\r\nexport const callbackOnPotentialArray = (object, callback) => {\r\n    if (Array.isArray(object)) {\r\n        object.forEach(child => callback(child));\r\n        return;\r\n    }\r\n    callback(object);\r\n};\r\n\r\nexport const setInitialSettings = params => {\r\n    if (params.length === 0) return;\r\n    let faceTextureDefined = false;\r\n    params.forEach(param => {\r\n        // if no string given, skip\r\n        if (!param) return;\r\n\r\n        const [keycode, ...value] = param.split(\"=\"); // animation code can have \"=\" inside\r\n        // if no value given, skip\r\n        if (!value[0]) return;\r\n\r\n        let setValue = value.length === 1 ? value[0] : value.join(\"=\");\r\n\r\n        switch (keycode) {\r\n            case \"ft\":\r\n                faceTextureDefined = true;\r\n                break;\r\n            case \"cc\":\r\n                // initialize chain maker chain\r\n                const chainList = chainCodeToList(setValue, \"Animation\");\r\n                initSettings[\"chainMaker\"][\"chain\"] = chainList;\r\n                break;\r\n            case \"bg\":\r\n                if (setValue !== \"transparent\") {\r\n                    setValue = `#${setValue}`;\r\n                }\r\n                break;\r\n            case \"cam\": // parameters in form x, y, z\r\n                setValue = setValue.split(\",\").map(n => parseFloat(n));\r\n                break;\r\n            default:\r\n        }\r\n        const { group, key } = initKey[keycode];\r\n\r\n        const isBooleanValue = setValue === \"true\" || setValue === \"false\";\r\n\r\n        initSettings[group][key] = isBooleanValue\r\n            ? Boolean(setValue === \"true\")\r\n            : setValue;\r\n    });\r\n\r\n    initSettings[\"model\"][\"texture\"] = initSettings[\"model\"][\"id\"];\r\n\r\n    if (!faceTextureDefined) {\r\n        initSettings[\"model\"][\"faceTexture\"] = initSettings[\"model\"][\"id\"];\r\n    }\r\n};\r\n\r\nexport const generateChainCode = chain => {\r\n    const defaultMod = {\r\n        timeScale: 1,\r\n        repetitions: 1,\r\n    };\r\n    const modList = {\r\n        ts: \"timeScale\",\r\n        r: \"repetitions\",\r\n    };\r\n    const length = chain.length;\r\n    let output = \"\";\r\n    chain.forEach((ani, i) => {\r\n        const { fileName, aniName } = ani;\r\n        if (fileName) {\r\n            if (i === 0) {\r\n                output = output.concat(fileName);\r\n            } else {\r\n                output = output.concat(\r\n                    fileName !== chain[i - 1].fileName ? fileName : \"\"\r\n                );\r\n            }\r\n            output = output.concat(\"+\");\r\n        }\r\n        output = output.concat(aniName);\r\n        // Add modifiers\r\n        Object.keys(modList).forEach(modKey => {\r\n            const key = modList[modKey];\r\n            if (ani[key] !== defaultMod[key]) {\r\n                output = output.concat(`&${modKey}=${ani[key]}`);\r\n            }\r\n        });\r\n        if (i < length - 1) {\r\n            output = output.concat(\">\");\r\n        }\r\n    });\r\n    return output;\r\n};\r\n\r\nexport const collectFilter = toggleState => {\r\n    let collected = {};\r\n    Object.keys(toggleState).forEach(key => {\r\n        let tmp = [];\r\n        Object.keys(toggleState[key]).forEach(k => {\r\n            if (toggleState[key][k]) {\r\n                tmp.push(k);\r\n            }\r\n        });\r\n        collected[key] = tmp;\r\n    });\r\n    return collected;\r\n};\r\n\r\nexport const multiCondFilter = (input, filters) => {\r\n    const filterKeys = Object.keys(filters);\r\n\r\n    return input.filter(el => {\r\n        return filterKeys.every(key => {\r\n            if (!filters[key].length) return true;\r\n            return filters[key].includes(el[key]);\r\n        });\r\n    });\r\n};\r\n\r\nexport const complementaryColor = color => {\r\n    const hexColor = color.replace(\"#\", \"0x\");\r\n\r\n    return `#${(\"000000\" + (\"0xffffff\" ^ hexColor).toString(16)).slice(-6)}`;\r\n};\r\n\r\nexport const aniButtonsFromObject = (object, handleSelect, groupName) => {\r\n    if (!object) return null;\r\n    const style = { maxWidth: \"13.5rem\" };\r\n    return Object.keys(object).map(key => (\r\n        <Button\r\n            variant=\"contained\"\r\n            key={key}\r\n            data-value={object[key]}\r\n            data-name={`${groupName ? `${groupName} ` : \"\"}${key}`}\r\n            onClick={handleSelect}\r\n            style={style}\r\n        >\r\n            {key}\r\n        </Button>\r\n    ));\r\n};\r\n\r\n// Animation chain code generator\r\nexport const getStandbyCode = (weapon, gender) =>\r\n    `LOB_${WEAPON_CODE[weapon]}+${WEAPON_CODE[weapon]}_ONT_${GENDER_CODE[gender]}`;\r\n\r\nexport const getVictoryCode = weapon =>\r\n    `WIN_${WEAPON_CODE[weapon]}+${WEAPON_CODE[weapon]}_WIN_01>+${WEAPON_CODE[weapon]}_WIN_02`;\r\n\r\nexport const getDashAtkCode = weapon => `DAS+${WEAPON_CODE[weapon]}_DAS_02`;\r\n\r\nexport const getRollCode = weapon => `ROL+${WEAPON_CODE[weapon]}_ROL_01`;\r\n\r\nexport const getComboCode = weapon => {\r\n    const comboLength = COMBO_LENGTH[weapon];\r\n    const code = WEAPON_CODE[weapon];\r\n    let result = `CMB_${code}`;\r\n    // Weapon combo has 5 animations each\r\n    for (let i = 1; i <= comboLength; i++) {\r\n        result = result.concat(`+${code}_CMB_0${i}>`);\r\n    }\r\n    result = result.slice(0, -1); // Remove last '>' character\r\n    return result;\r\n};\r\n\r\n// Force Strike chain code\r\nexport const getFSCode = weapon => {\r\n    const fsAniLength = FS_LENGTH[weapon];\r\n    const code = WEAPON_CODE[weapon];\r\n    let result = `FS_${code}`;\r\n    // Weapon combo has 5 animations each\r\n    for (let i = 1; i <= fsAniLength; i++) {\r\n        result = result.concat(`+${code}_CHR_0${i}>`);\r\n    }\r\n    result = result.slice(0, -1); // Remove last '>' character\r\n    return result;\r\n};\r\n\r\n// Join Lobby chain code\r\nexport const getLobbyCode = (weapon, gender) => {\r\n    const code = WEAPON_CODE[weapon];\r\n    if (gender === \"Male\")\r\n        return `LOB_${code}+${code}_ONT_05&ts=-0.5>+${code}_ONT_02>+${code}_ONT_07>+${code}_ONT_08>+${code}_ONT_21`;\r\n    // Female\r\n    return `LOB_${code}+${code}_ONT_06&ts=-0.5>+${code}_ONT_04>+${code}_ONT_09>+${code}_ONT_10>+${code}_ONT_23`;\r\n};\r\n","const faceOffset = {\r\n    c110267_01: { x: 0.08, y: -0.03 },\r\n    c110050_02: { x: 0.07, y: 0.13 },\r\n    c110291_01: { x: 0.07, y: 0.14 },\r\n    c110354_01: { x: 0.07, y: 0.01 },\r\n    c110345_01: { x: 0.08, y: -0.13 },\r\n    c110266_01: { x: 0.01, y: 0.03 },\r\n    c110365_01: { x: 0.043, y: -0.0625 },\r\n    c110346_01: { x: 0.07, y: 0.08 },\r\n    c110366_01: { x: 0.043, y: -0.0625 },\r\n    c110299_02: { x: 0.07, y: 0.08 },\r\n    c110360_01: { x: 0.07, y: 0.14 },\r\n    c110307_01: { x: 0.08, y: -0.03 },\r\n    c110322_01: { x: 0.043, y: 0.08 },\r\n    c110356_01: { x: 0.07, y: 0.08 },\r\n    c110300_01: { x: 0.07, y: -0.1 },\r\n    c110344_01: { x: 0.07, y: -0.02 },\r\n    c110053_03: { x: 0.043, y: -0.0625 },\r\n    c110368_01: { x: 0.043, y: -0.0625 },\r\n    c110367_01: { x: 0.043, y: -0.0625 },\r\n    c110003_02: { x: 0.043, y: -0.0625 },\r\n    c110270_02: { x: 0.043, y: -0.0625 },\r\n    c110341_03: { x: 0.043, y: -0.0625 },\r\n};\r\nexport default faceOffset;\r\n","import React, { PureComponent } from \"react\";\r\n\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nimport { fbxSource } from \"./App\";\r\nimport { CAM_PARAMS } from \"./consts\";\r\nimport faceOffset from \"./data/face_offset\";\r\nimport {\r\n    changeMaterialToBasic,\r\n    analyzeWeaponCode,\r\n    loadModel,\r\n    applyFace,\r\n    disposeItem,\r\n    analyzeChainCode,\r\n    addOutline,\r\n    changeOpacity,\r\n    changeOutlineSize,\r\n    changeOutlineColor,\r\n} from \"./viewerHelpers\";\r\n\r\nclass ModelViewer extends PureComponent {\r\n    animate = () => {\r\n        this.frameId = requestAnimationFrame(this.animate);\r\n        if (this.mixers.length > 0) {\r\n            const dt = this.clock.getDelta();\r\n            this.mixers.forEach(mixer => mixer.update(dt));\r\n        }\r\n        this.renderer.render(this.scene, this.camera);\r\n    };\r\n\r\n    // set up initial scene\r\n    init = () => {\r\n        this.models = {};\r\n        this.modelInfo = {\r\n            main: this.props.modelId,\r\n            weaponLeft: this.props.weaponLeft\r\n                ? analyzeWeaponCode(this.props.weaponLeft)\r\n                : \"\",\r\n            weaponRight: this.props.weaponRight\r\n                ? analyzeWeaponCode(this.props.weaponRight)\r\n                : \"\",\r\n        };\r\n\r\n        // save reference and specifications for outlines\r\n        this.outlines = {};\r\n        this.outlineDetails = {\r\n            color: this.props.outlineColor,\r\n            size: this.props.outlineSize,\r\n            enable: this.props.showOutline,\r\n            opacity: this.props.outlineOpacity,\r\n        };\r\n\r\n        // viewport\r\n        this.viewport = this.props.viewport || {\r\n            width: window.innerWidth,\r\n            height: window.innerHeight,\r\n        };\r\n\r\n        // mixers\r\n        this.mixers = [];\r\n\r\n        // clock\r\n        this.clock = new THREE.Clock();\r\n\r\n        // Scene\r\n        this.scene = new THREE.Scene();\r\n        this.scene.background =\r\n            this.props.bgColor !== \"transparent\"\r\n                ? new THREE.Color(this.props.bgColor)\r\n                : null;\r\n\r\n        // Camera\r\n        this.camera = new THREE.PerspectiveCamera(\r\n            CAM_PARAMS.angle,\r\n            this.viewport.width / this.viewport.height,\r\n            CAM_PARAMS.near,\r\n            CAM_PARAMS.far\r\n        );\r\n        this.cameraPosition = this.props.cameraPosition || [2, 0, 10];\r\n        this.camera.position.set(...this.cameraPosition);\r\n        this.camera.updateProjectionMatrix();\r\n\r\n        // Controls\r\n        this.controls = new OrbitControls(this.camera, this.mount);\r\n        this.controlsPosition = this.props.controlsPosition || [0, 0, 0];\r\n        this.controls.target.set(...this.controlsPosition);\r\n        this.controls.update();\r\n\r\n        // Light\r\n        let light = new THREE.DirectionalLight(0xffffff);\r\n        light.position.set(0, 200, 100);\r\n        this.scene.add(light);\r\n\r\n        // Renderer\r\n        this.rendererAA = new THREE.WebGLRenderer({\r\n            antialias: true,\r\n            alpha: true,\r\n        });\r\n        this.rendererAA.outputEncoding = THREE.sRGBEncoding;\r\n\r\n        this.rendererNoAA = new THREE.WebGLRenderer({\r\n            antialias: false,\r\n            alpha: true,\r\n        });\r\n        this.rendererNoAA.outputEncoding = THREE.sRGBEncoding;\r\n\r\n        this.renderer = this.props.antiAliasing\r\n            ? this.rendererAA\r\n            : this.rendererNoAA;\r\n        this.canvas = this.renderer.domElement;\r\n        this.renderer.setSize(this.viewport.width, this.viewport.height);\r\n        this.mount.appendChild(this.canvas);\r\n\r\n        this.animate();\r\n    };\r\n\r\n    playNextAni = () => {\r\n        // if capturing and finished recording current chain, stop capturing and set capture flag back to false\r\n        if (this.props.capture && this._aniIdx === this.nAni - 1) {\r\n            this.mediaRecorder.stop();\r\n            this.props.toggleCapture();\r\n        }\r\n        const newIdx = (this._aniIdx + 1) % this.nAni;\r\n        this.aniIdx = newIdx;\r\n    };\r\n\r\n    // add Animation Chain\r\n    addAnimationChain = async (object, animationChain, timeScale) => {\r\n        if (!animationChain) return; // If no Animation, return\r\n\r\n        const [fileList, animationList] = analyzeChainCode(animationChain);\r\n        this.nAni = animationList.length;\r\n\r\n        this.props.setIsLoading(true);\r\n\r\n        object.mixer = new THREE.AnimationMixer(object);\r\n        this.mixers.push(object.mixer);\r\n\r\n        this._aniIdx = 0;\r\n        object.mixer.timeScale = timeScale; // Global timeScale\r\n        object.mixer.addEventListener(\"finished\", this.playNextAni);\r\n        this.aniSettings = animationList.map(ani => {\r\n            return {\r\n                timeScale: ani.timeScale,\r\n                repetitions: ani.repetitions,\r\n            };\r\n        });\r\n        const batchLoader = fileList.map(file => {\r\n            const path = `${fbxSource}/fbx/${file}.fbx`;\r\n            return loadModel(path);\r\n        });\r\n\r\n        const animations = [];\r\n        // load all animation files\r\n        const animFiles = await Promise.all(batchLoader);\r\n\r\n        animationList.forEach(anim => {\r\n            const { fileIdx, aniName } = anim;\r\n            const animation = aniName\r\n                ? animFiles[fileIdx].animations.find(\r\n                      ani => ani.name === aniName\r\n                  )\r\n                : animFiles[fileIdx].animations[0];\r\n            animations.push(animation);\r\n        });\r\n        this.animations = animations;\r\n        // play first animation\r\n        this.aniIdx = 0;\r\n        this.props.setIsLoading(false);\r\n    };\r\n\r\n    // this.aniIdx = n => play animation with index n\r\n    set aniIdx(newIdx) {\r\n        this._aniIdx = newIdx;\r\n        const anim = this.animations[newIdx];\r\n        const mixer = this.models.main.mixer;\r\n        mixer.stopAllAction();\r\n        const action = mixer.clipAction(anim);\r\n        const { timeScale, repetitions } = this.aniSettings[newIdx];\r\n\r\n        action.setLoop(THREE.LoopRepeat, repetitions);\r\n        action.clampWhenFinished = true;\r\n        action.timeScale = timeScale;\r\n        action.time = 0;\r\n        action.play();\r\n    }\r\n\r\n    // Promise to load all models at initialize\r\n    initLoad = () => {\r\n        const modelPath = `${fbxSource}/fbx/${this.props.model}/${this.props.model}.fbx`;\r\n        const loadMain = loadModel(modelPath);\r\n\r\n        const weaponRight = this.props.weaponRight\r\n            ? this.modelInfo.weaponRight.model\r\n            : \"\";\r\n        const loadWeaponR = loadModel(weaponRight);\r\n\r\n        const weaponLeft = this.props.weaponLeft\r\n            ? this.modelInfo.weaponLeft.model\r\n            : \"\";\r\n        const loadWeaponL = loadModel(weaponLeft);\r\n\r\n        return Promise.all([loadMain, loadWeaponR, loadWeaponL]);\r\n    };\r\n\r\n    addWeapon = (weapon, side) => {\r\n        const boneName = `jWeapon${side[0]}`;\r\n        this.models.main.traverse(child => {\r\n            if (child.name === boneName && child.children.length === 0) {\r\n                child.add(weapon);\r\n            }\r\n        });\r\n    };\r\n\r\n    removeWeapon = side => {\r\n        const boneName = `jWeapon${side[0]}`;\r\n        this.models.main.traverse(child => {\r\n            if (child.children.length === 1 && child.name === boneName) {\r\n                if (child.children[0].type === \"Group\") {\r\n                    child.remove(this.models[`weapon${side}`]);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    async componentDidMount() {\r\n        this.init();\r\n        this.props.setIsLoading(true);\r\n\r\n        // Load the models\r\n        const [main, weaponRight, weaponLeft] = await this.initLoad();\r\n\r\n        // save references\r\n        this.models = {\r\n            main,\r\n            weaponRight,\r\n            weaponLeft,\r\n        };\r\n        // add outline to main model and save reference\r\n        this.outlines.main = addOutline(main, this.outlineDetails);\r\n\r\n        // Save initial position and rotation\r\n        main.initPos = main.position.clone();\r\n        main.initRot = main.rotation.clone();\r\n\r\n        // change the materials to MeshBasicMaterial\r\n        changeMaterialToBasic(main);\r\n\r\n        // process weapons\r\n        [\"Right\", \"Left\"].forEach(side => {\r\n            const key = `weapon${side}`;\r\n            // if weapon not specified, return\r\n            if (!this.props[key]) return;\r\n            // add weapon\r\n            const weaponInfo = this.modelInfo[key];\r\n            const weaponModel = this.models[key];\r\n            const texture = weaponInfo.texture;\r\n            changeMaterialToBasic(weaponModel, texture);\r\n            // flip weapon if needed\r\n            weaponModel.rotation.y = weaponInfo.flipped ? Math.PI : 0;\r\n            // add outline to weapon and save reference\r\n            this.outlines[key] = addOutline(weaponModel, this.outlineDetails);\r\n            // add weapon to main body\r\n            this.addWeapon(this.models[`weapon${side}`], side);\r\n        });\r\n\r\n        // Apply face settings\r\n        const faceOverride = this.props.texture !== this.props.faceTexture;\r\n        if (\r\n            this.props.faceOffset.x !== 0 ||\r\n            this.props.faceOffset.y !== 0 ||\r\n            faceOverride\r\n        ) {\r\n            let offsetFix = { x: 0, y: 0 };\r\n            if (faceOverride) {\r\n                const offsetFixBase = faceOffset[this.props.texture] || {\r\n                    x: 0,\r\n                    y: 0,\r\n                };\r\n                const offsetFixOverride = faceOffset[\r\n                    this.props.faceTexture\r\n                ] || {\r\n                    x: 0,\r\n                    y: 0,\r\n                };\r\n                offsetFix = {\r\n                    x: offsetFixOverride.x - offsetFixBase.x,\r\n                    y: offsetFixOverride.y - offsetFixBase.y,\r\n                };\r\n            }\r\n            const offset = {\r\n                x: this.props.faceOffset.x + offsetFix.x,\r\n                y: this.props.faceOffset.y + offsetFix.y,\r\n            };\r\n            applyFace(main, this.props.faceTexture, offset);\r\n        }\r\n\r\n        // Add character to scene\r\n        this.scene.add(main);\r\n        // main model loading finished\r\n        this.props.setIsLoading(false);\r\n\r\n        // Add animation\r\n        this.addAnimationChain(main, this.props.aniCode, this.props.timeScale);\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        // console.log(\"component did update\");\r\n\r\n        // // print updated props to console\r\n        // Object.keys(prevProps).forEach(key => {\r\n        //     if (prevProps[key] !== this.props[key]) {\r\n        //         console.log(\r\n        //             `${key}: ${JSON.stringify(\r\n        //                 prevProps[key]\r\n        //             )} to ${JSON.stringify(this.props[key])}`\r\n        //         );\r\n        //     }\r\n        // });\r\n\r\n        // Update viewport\r\n        if (\r\n            prevProps.viewport.width !== this.props.viewport.width ||\r\n            prevProps.viewport.height !== this.props.viewport.height\r\n        ) {\r\n            const { width, height } = this.props.viewport;\r\n            this.renderer.setSize(width, height);\r\n            this.camera.aspect = width / height;\r\n            this.camera.updateProjectionMatrix();\r\n        }\r\n\r\n        // Capture\r\n        if (prevProps.capture !== this.props.capture && this.props.capture) {\r\n            this.videoStream = this.canvas.captureStream(30);\r\n            this.mediaRecorder = new MediaRecorder(this.videoStream, {\r\n                mimeType: this.props.captureSetting.codec,\r\n            });\r\n            this.chunks = [];\r\n            this.mediaRecorder.ondataavailable = event =>\r\n                this.chunks.push(event.data);\r\n            this.mediaRecorder.onstop = () => {\r\n                this.props.setIsLoading(false);\r\n                const superBuffer = new Blob(this.chunks, {\r\n                    type: \"video/webm\",\r\n                });\r\n                var url = URL.createObjectURL(superBuffer);\r\n                var a = document.createElement(\"a\");\r\n                document.body.appendChild(a);\r\n                a.style = \"display: none\";\r\n                a.href = url;\r\n                a.download = \"animation.webm\";\r\n                a.click();\r\n                window.URL.revokeObjectURL(url);\r\n            };\r\n            // disable user input\r\n            this.props.setIsLoading(true);\r\n            // play first animation and start capturing\r\n            this.aniIdx = 0;\r\n            this.mediaRecorder.start();\r\n        }\r\n\r\n        // update anti aliasing setting\r\n        if (prevProps.antiAliasing !== this.props.antiAliasing) {\r\n            // get current viewport size\r\n            const currentSize = new THREE.Vector2();\r\n            this.renderer.getSize(currentSize);\r\n            // switch renderer\r\n            this.renderer = this.props.antiAliasing\r\n                ? this.rendererAA\r\n                : this.rendererNoAA;\r\n            this.renderer.setSize(currentSize.x, currentSize.y);\r\n            // remove old canvas\r\n            this.mount.removeChild(this.canvas);\r\n            // Add new canvas\r\n            this.canvas = this.renderer.domElement;\r\n            this.mount.appendChild(this.canvas);\r\n        }\r\n\r\n        // Update main model\r\n        if (prevProps.model !== this.props.model) {\r\n            this.props.setIsLoading(true);\r\n            const modelPath = `${fbxSource}/fbx/${this.props.model}/${this.props.model}.fbx`;\r\n            // load new model\r\n            const model = await loadModel(modelPath);\r\n            changeMaterialToBasic(model);\r\n            // add outline\r\n            this.outlines.main = addOutline(model, this.outlineDetails);\r\n\r\n            // remove weapons from old model if they exist\r\n            [\"Right\", \"Left\"].forEach(side => {\r\n                const key = `weapon${side}`;\r\n                if (prevProps[key]) {\r\n                    this.removeWeapon(side);\r\n                }\r\n            });\r\n            // remove and dispose old model\r\n            this.scene.remove(this.models.main);\r\n            disposeItem(this.models.main);\r\n            // add reference\r\n            this.models.main = model;\r\n\r\n            // Save initial position and rotation\r\n            model.initPos = model.position.clone();\r\n            model.initRot = model.rotation.clone();\r\n\r\n            // Add new model to scene\r\n            this.scene.add(model);\r\n\r\n            // Apply face to new model\r\n            const faceOverride = this.props.texture !== this.props.faceTexture;\r\n            if (\r\n                this.props.faceOffset.x !== 0 ||\r\n                this.props.faceOffset.y !== 0 ||\r\n                faceOverride\r\n            ) {\r\n                applyFace(model, this.props.faceTexture, this.props.faceOffset);\r\n            }\r\n\r\n            // Add weapons to new model\r\n            [\"Right\", \"Left\"].forEach(side => {\r\n                const key = `weapon${side}`;\r\n                const weaponModel = this.models[key];\r\n                // if no weapon, return\r\n                if (!weaponModel) return;\r\n\r\n                this.addWeapon(weaponModel, side);\r\n                // add outline if not exist\r\n                if (!this.outlines[key]) {\r\n                    this.outlines[key] = addOutline(\r\n                        weaponModel,\r\n                        this.outlineDetails\r\n                    );\r\n                }\r\n            });\r\n\r\n            // Add animation to new model\r\n            this.addAnimationChain(\r\n                model,\r\n                this.props.aniCode,\r\n                this.props.timeScale\r\n            );\r\n\r\n            this.props.setIsLoading(false);\r\n        } else {\r\n            // Update face when main model not changed\r\n            const faceTextureChanged =\r\n                prevProps.faceTexture !== this.props.faceTexture;\r\n            if (\r\n                prevProps.faceOffset !== this.props.faceOffset ||\r\n                faceTextureChanged\r\n            ) {\r\n                const dx = this.props.faceOffset.x - prevProps.faceOffset.x;\r\n                const dy = this.props.faceOffset.y - prevProps.faceOffset.y;\r\n                let faceOffsetFix = { x: 0, y: 0 };\r\n                if (faceTextureChanged) {\r\n                    const oldFaceOffsetFix = faceOffset[\r\n                        prevProps.faceTexture\r\n                    ] || {\r\n                        x: 0,\r\n                        y: 0,\r\n                    };\r\n                    const currentFaceOffsetFix = faceOffset[\r\n                        this.props.faceTexture\r\n                    ] || { x: 0, y: 0 };\r\n                    faceOffsetFix = {\r\n                        x: currentFaceOffsetFix.x - oldFaceOffsetFix.x,\r\n                        y: currentFaceOffsetFix.y - oldFaceOffsetFix.y,\r\n                    };\r\n                }\r\n                const offset = {\r\n                    x: dx + faceOffsetFix.x,\r\n                    y: dy + faceOffsetFix.y,\r\n                };\r\n                applyFace(this.models.main, this.props.faceTexture, offset);\r\n            }\r\n        }\r\n\r\n        // Update Weapons\r\n        [\"Right\", \"Left\"].forEach(async side => {\r\n            const key = `weapon${side}`;\r\n            // if not changed, return\r\n            if (prevProps[key] === this.props[key]) return;\r\n            // Update weapon\r\n            this.removeWeapon(side); // remove old weapon\r\n            disposeItem(this.models[key]); // dispose old weapon\r\n            // if current weapon is empty (weapon removed)\r\n            if (!this.props[key]) {\r\n                this.models[key] = null;\r\n                this.modelInfo[key] = \"\";\r\n                // remove reference to outline\r\n                this.outlines[key] = null;\r\n                return;\r\n            }\r\n            // load new weapon\r\n            this.props.setIsLoading(true);\r\n\r\n            this.modelInfo[key] = analyzeWeaponCode(this.props[key]);\r\n            const { model: modelPath, texture } = this.modelInfo[key];\r\n\r\n            // load new model\r\n            const model = await loadModel(modelPath);\r\n            this.models[key] = model;\r\n            // process new weapon\r\n            changeMaterialToBasic(this.models[key], texture);\r\n            if (this.modelInfo[key].flipped) {\r\n                this.models[key].rotation.y = Math.PI;\r\n            }\r\n            // add outline to new weapon\r\n            this.outlines[key] = addOutline(model, this.outlineDetails);\r\n            // add new weapon to main model\r\n            this.addWeapon(model, side);\r\n\r\n            this.props.setIsLoading(false);\r\n        });\r\n\r\n        // Update animation\r\n        if (prevProps.aniCode !== this.props.aniCode) {\r\n            if (prevProps.aniCode) {\r\n                this.models.main.mixer.stopAllAction();\r\n\r\n                // Reset position and rotation to initial value\r\n                const { initPos, initRot } = this.models.main;\r\n                this.models.main.position.copy(initPos);\r\n                this.models.main.rotation.copy(initRot);\r\n\r\n                this.mixers = [];\r\n                this.animations = [];\r\n            }\r\n            this.addAnimationChain(\r\n                this.models.main,\r\n                this.props.aniCode,\r\n                this.props.timeScale\r\n            );\r\n        }\r\n\r\n        //Update timeScale\r\n        if (prevProps.timeScale !== this.props.timeScale) {\r\n            if (this.mixers.length > 0) {\r\n                this.mixers.forEach(\r\n                    mixer => (mixer.timeScale = this.props.timeScale)\r\n                );\r\n            }\r\n        }\r\n\r\n        // Update background color\r\n        if (prevProps.bgColor !== this.props.bgColor) {\r\n            this.scene.background =\r\n                this.props.bgColor !== \"transparent\"\r\n                    ? new THREE.Color(this.props.bgColor)\r\n                    : null;\r\n        }\r\n\r\n        // Update outline visibility\r\n        if (prevProps.showOutline !== this.props.showOutline) {\r\n            const newValue = this.props.showOutline;\r\n            this.outlineDetails.enable = newValue;\r\n\r\n            Object.keys(this.outlines).forEach(key => {\r\n                if (!this.outlines[key]) return;\r\n                this.outlines[key].forEach(\r\n                    outline => (outline.visible = newValue)\r\n                );\r\n            });\r\n        }\r\n\r\n        // Update outline size\r\n        if (prevProps.outlineSize !== this.props.outlineSize) {\r\n            const size = this.props.outlineSize;\r\n            this.outlineDetails.size = size;\r\n\r\n            Object.keys(this.outlines).forEach(key => {\r\n                if (!this.outlines[key]) return;\r\n                this.outlines[key].forEach(outline =>\r\n                    changeOutlineSize(outline, size)\r\n                );\r\n            });\r\n        }\r\n\r\n        // Update outline opacity\r\n        if (prevProps.outlineOpacity !== this.props.outlineOpacity) {\r\n            const newValue = this.props.outlineOpacity;\r\n            this.outlineDetails.opacity = newValue;\r\n\r\n            Object.keys(this.outlines).forEach(key => {\r\n                if (!this.outlines[key]) return;\r\n                this.outlines[key].forEach(outline =>\r\n                    changeOpacity(outline, newValue)\r\n                );\r\n            });\r\n        }\r\n\r\n        // Update outline color\r\n        if (prevProps.outlineColor !== this.props.outlineColor) {\r\n            const newValue = this.props.outlineColor;\r\n\r\n            Object.keys(this.outlines).forEach(key => {\r\n                if (!this.outlines[key]) return;\r\n                this.outlines[key].forEach(outline =>\r\n                    changeOutlineColor(outline, newValue)\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        cancelAnimationFrame(this.frameId);\r\n        disposeItem(this.scene);\r\n        this.mixers = null;\r\n        this.clock = null;\r\n        this.camera = null;\r\n        this.controls = null;\r\n        this.scene = null;\r\n        this.renderer = null;\r\n        this.rendererAA.renderLists.dispose();\r\n        this.rendererAA.dispose();\r\n        this.rendererAA = null;\r\n        this.rendererNoAA.renderLists.dispose();\r\n        this.rendererNoAA.dispose();\r\n        this.rendererNoAA = null;\r\n    }\r\n    render() {\r\n        return (\r\n            <div\r\n                ref={el => {\r\n                    this.mount = el;\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ModelViewer;\r\n","import React, { lazy, Suspense, useContext, useCallback } from \"react\";\r\n\r\nimport { SettingsContext, DispatchContext } from \"./context/SettingsContext\";\r\nimport ModelViewer from \"./ModelViewer\";\r\nimport \"./styles/Display.css\";\r\n\r\nimport { faceOffsets, cameraPositions, controlsPositions } from \"./consts\";\r\n\r\nconst AniControl = lazy(() => import(\"./AniControl\"));\r\n\r\nfunction Display(props) {\r\n    const { viewport } = props;\r\n\r\n    const settings = useContext(SettingsContext);\r\n    const {\r\n        model: {\r\n            id: modelId,\r\n            texture,\r\n            faceTexture,\r\n            face,\r\n            weaponRight,\r\n            weaponLeft,\r\n        },\r\n        animation: { code: chainCode, timeScale },\r\n        scene: { background: bgColor, initCameraPosition },\r\n        app: { showAniControl, antiAliasing },\r\n        capture: { enable: capture },\r\n        outline: {\r\n            enable: showOutline,\r\n            color: outlineColor,\r\n            size: outlineSize,\r\n            opacity: outlineOpacity,\r\n        },\r\n    } = settings;\r\n\r\n    const dispatch = useContext(DispatchContext);\r\n    const toggleCapture = useCallback(() => {\r\n        const action = {\r\n            type: \"toggle\",\r\n            key: \"capture\",\r\n            value: \"enable\",\r\n        };\r\n        dispatch(action);\r\n    }, [dispatch]);\r\n\r\n    const faceOffset = faceOffsets[`face${face}`];\r\n\r\n    const type = modelId[0];\r\n\r\n    const defaultCameraPosition = cameraPositions[modelId]\r\n        ? cameraPositions[modelId]\r\n        : cameraPositions[type];\r\n\r\n    const cameraPosition = initCameraPosition\r\n        ? initCameraPosition.map((n, i) =>\r\n              isNaN(n) ? defaultCameraPosition[i] : n\r\n          )\r\n        : defaultCameraPosition;\r\n\r\n    const controlsPosition = controlsPositions[modelId]\r\n        ? controlsPositions[modelId]\r\n        : controlsPositions[type];\r\n\r\n    return (\r\n        <div className=\"Display\">\r\n            {showAniControl && (\r\n                <div className=\"Display-AniControl\">\r\n                    <Suspense fallback={null}>\r\n                        <AniControl value={settings.animation.timeScale} />\r\n                    </Suspense>\r\n                </div>\r\n            )}\r\n            <ModelViewer\r\n                setIsLoading={props.setIsLoading}\r\n                capture={capture}\r\n                captureSetting={settings.capture}\r\n                toggleCapture={toggleCapture}\r\n                viewport={viewport}\r\n                cameraPosition={cameraPosition}\r\n                controlsPosition={controlsPosition}\r\n                model={modelId}\r\n                texture={texture}\r\n                faceTexture={faceTexture}\r\n                faceOffset={faceOffset}\r\n                weaponRight={weaponRight}\r\n                weaponLeft={weaponLeft}\r\n                aniCode={chainCode}\r\n                timeScale={timeScale}\r\n                bgColor={bgColor}\r\n                showOutline={showOutline}\r\n                outlineColor={outlineColor}\r\n                outlineSize={outlineSize}\r\n                outlineOpacity={outlineOpacity}\r\n                antiAliasing={antiAliasing}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Display;\r\n","import React, {\r\n    lazy,\r\n    Suspense,\r\n    useState,\r\n    useRef,\r\n    useEffect,\r\n    useContext,\r\n} from \"react\";\r\nimport useToggleState from \"./hooks/useToggleState\";\r\n\r\nimport Menu from \"@material-ui/icons/Menu\";\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport useStyles from \"./styles/MainPageStyles\";\r\n\r\nimport Display from \"./Display\";\r\nimport { SettingsContext } from \"./context/SettingsContext\";\r\nimport { setInitialSettings } from \"./helpers\";\r\n\r\nconst ControlPanel = lazy(() => import(\"./ControlPanel\"));\r\nconst SideBar = lazy(() => import(\"./SideBar\"));\r\n\r\nfunction MainPage({ location }) {\r\n    const classes = useStyles();\r\n\r\n    const [currentMode, setCurrentMode] = useState(\"model\");\r\n    const [sidebarOpen, toggleSidebarOpen] = useToggleState(true);\r\n    const [controlOpen, toggleControlOpen] = useToggleState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [initLoadDone, setInitLoadDone] = useState(false);\r\n    const {\r\n        app: { showSettings },\r\n    } = useContext(SettingsContext);\r\n\r\n    const viewerRef = useRef();\r\n    const [viewport, setViewport] = useState({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const params = location.pathname.split(\"/\");\r\n        setInitialSettings(params);\r\n        setInitLoadDone(true);\r\n\r\n        window.addEventListener(\"resize\", updateViewportSize);\r\n\r\n        return function () {\r\n            window.removeEventListener(\"resize\", updateViewportSize);\r\n        };\r\n    }, [location.pathname]);\r\n\r\n    const updateViewportSize = () => {\r\n        const height = viewerRef.current.clientHeight;\r\n        const width = viewerRef.current.clientWidth;\r\n        setViewport({ width, height });\r\n    };\r\n\r\n    const openControl = mode => {\r\n        toggleControlOpen();\r\n        setCurrentMode(mode);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isLoading && <div className={classes.loadingMsg}>Loading...</div>}\r\n            <div className={classes.root}>\r\n                <Suspense fallback={null}>\r\n                    <CssBaseline />\r\n                    <ControlPanel\r\n                        mode={currentMode}\r\n                        open={controlOpen}\r\n                        toggleControlOpen={toggleControlOpen}\r\n                    />\r\n                    {initLoadDone && showSettings && (\r\n                        <>\r\n                            <button\r\n                                onClick={toggleSidebarOpen}\r\n                                className={classes.openSidebarButton}\r\n                            >\r\n                                <Menu />\r\n                            </button>\r\n\r\n                            <SideBar\r\n                                toggleSidebarOpen={toggleSidebarOpen}\r\n                                open={sidebarOpen}\r\n                                openControl={openControl}\r\n                            />\r\n                        </>\r\n                    )}\r\n                </Suspense>\r\n                {initLoadDone && (\r\n                    <main ref={viewerRef} className={classes.content}>\r\n                        <Display\r\n                            setIsLoading={setIsLoading}\r\n                            viewport={viewport}\r\n                        />\r\n                    </main>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\n\r\nimport { SettingsProvider } from \"./context/SettingsContext\";\r\n\r\nimport { Route, HashRouter } from \"react-router-dom\";\r\nimport MainPage from \"./MainPage\";\r\n\r\nimport \"./styles/App.css\";\r\n\r\nfunction App() {\r\n    return (\r\n        <SettingsProvider>\r\n            <HashRouter>\r\n                <Route render={routeProps => <MainPage {...routeProps} />} />\r\n            </HashRouter>\r\n        </SettingsProvider>\r\n    );\r\n}\r\n\r\nexport const fbxSource = process.env.PUBLIC_URL;\r\n\r\nexport default App;\r\n","import { useState, useRef } from \"react\";\r\n\r\nfunction useToggleState(initVal = false) {\r\n    const [state, setState] = useState(initVal);\r\n    const toggleState = useRef(() => {\r\n        setState(state => !state);\r\n    });\r\n    return [state, toggleState.current];\r\n}\r\n\r\nexport default useToggleState;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { DRAWER_WIDTH, DRAWER_BGCOLOR } from \"../consts\";\r\nimport bg from \"./Rose-Petals.svg\";\r\n\r\nconst drawerWidth = DRAWER_WIDTH;\r\nconst drawerBG = DRAWER_BGCOLOR;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"block\",\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        overflowY: \"scroll\",\r\n    },\r\n    drawerPaper: {\r\n        alignItems: \"center\",\r\n        backgroundColor: drawerBG,\r\n        backgroundImage: `url(${bg})`,\r\n        /* background by SVGBackgrounds.com */\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        width: drawerWidth,\r\n        \"& button\": {\r\n            marginBottom: \"0.2rem\",\r\n        },\r\n    },\r\n    content: {\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n        padding: 0,\r\n    },\r\n    openSidebarButton: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        margin: \"2rem\",\r\n        opacity: \"0.5\",\r\n        borderRadius: \"0.25rem\",\r\n        transition: \"0.5s all ease-in-out\",\r\n        cursor: \"pointer\",\r\n        \"&:hover\": {\r\n            opacity: \"1\",\r\n        },\r\n    },\r\n    loadingMsg: {\r\n        position: \"absolute\",\r\n        zIndex: \"9999\",\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        color: \"white\",\r\n        fontSize: \"x-large\",\r\n        backgroundColor: \"rgba(0,0,0,0.5)\",\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","module.exports = __webpack_public_path__ + \"static/media/Rose-Petals.1911e778.svg\";","export const DRAWER_WIDTH = \"15rem\";\r\nexport const DRAWER_BGCOLOR = \"#330000\";\r\n\r\nexport const baseUrl = \"https://dgk3593.github.io/dl-model/#/\";\r\n\r\nconst defaultAni = \"MWM_CMN+CMN_MWM_03\";\r\n\r\nexport const defaultSettings = {\r\n    model: {\r\n        id: \"c100001_01\",\r\n        texture: \"c100001_01\",\r\n        faceTexture: \"c100001_01\",\r\n        face: 2,\r\n        weaponRight: \"\",\r\n        weaponLeft: \"\",\r\n    },\r\n    scene: {\r\n        background: \"#cccccc\",\r\n        initCameraPosition: null,\r\n    },\r\n    animation: {\r\n        code: defaultAni,\r\n        timeScale: 1,\r\n    },\r\n    app: {\r\n        sideContent: \"settings\",\r\n        showSettings: true,\r\n        showAniControl: true,\r\n        antiAliasing: false,\r\n        capture: false,\r\n    },\r\n    outline: {\r\n        enable: true,\r\n        size: 5, // 1 -> 10\r\n        color: \"#000000\",\r\n        opacity: 1, // 0.1 -> 10%, 1-> 100%\r\n    },\r\n    capture: {\r\n        enable: false,\r\n        supportedCodecs: [],\r\n        codec: \"\",\r\n    },\r\n};\r\n\r\nexport const initKey = {\r\n    id: { group: \"model\", key: \"id\" },\r\n    ft: { group: \"model\", key: \"faceTexture\" },\r\n    f: { group: \"model\", key: \"face\" },\r\n    wr: { group: \"model\", key: \"weaponRight\" },\r\n    wl: { group: \"model\", key: \"weaponLeft\" },\r\n    bg: { group: \"scene\", key: \"background\" },\r\n    cam: { group: \"scene\", key: \"initCameraPosition\" },\r\n    ts: { group: \"animation\", key: \"timeScale\" },\r\n    showAC: { group: \"app\", key: \"showAniControl\" },\r\n    showSettings: { group: \"app\", key: \"showSettings\" },\r\n    showOutline: { group: \"outline\", key: \"enable\" },\r\n    AA: { group: \"app\", key: \"antiAliasing\" },\r\n    cc: { group: \"animation\", key: \"code\" },\r\n};\r\n\r\nexport const WEAPON_CODE = {\r\n    Sword: \"SWD\",\r\n    Blade: \"KAT\",\r\n    Dagger: \"DAG\",\r\n    Axe: \"AXE\",\r\n    Lance: \"LAN\",\r\n    Bow: \"BOW\",\r\n    Wand: \"ROD\",\r\n    Staff: \"CAN\",\r\n    Manacaster: \"GUN\",\r\n};\r\n\r\nexport const WEAPON_LIST = [\r\n    \"Sword\",\r\n    \"Blade\",\r\n    \"Dagger\",\r\n    \"Axe\",\r\n    \"Lance\",\r\n    \"Bow\",\r\n    \"Wand\",\r\n    \"Staff\",\r\n    \"Manacaster\",\r\n];\r\n\r\nexport const GENDER_CODE = {\r\n    Male: 21,\r\n    Female: 23,\r\n};\r\n\r\nexport const COMBO_LENGTH = {\r\n    Axe: 5,\r\n    Bow: 6,\r\n    Staff: 5,\r\n    Dagger: 6,\r\n    Blade: 5,\r\n    Lance: 5,\r\n    Wand: 5,\r\n    Sword: 5,\r\n};\r\n\r\nexport const FS_LENGTH = {\r\n    Axe: 3,\r\n    Bow: 3,\r\n    Staff: 5,\r\n    Dagger: 3,\r\n    Blade: 3,\r\n    Lance: 4,\r\n    Wand: 3,\r\n    Sword: 3,\r\n};\r\n\r\nexport const FILTERS = {\r\n    rarity: [\"3\", \"4\", \"5\"],\r\n    element: [\"Flame\", \"Water\", \"Wind\", \"Light\", \"Shadow\"],\r\n    weapon: [\r\n        \"Sword\",\r\n        \"Blade\",\r\n        \"Dagger\",\r\n        \"Axe\",\r\n        \"Lance\",\r\n        \"Bow\",\r\n        \"Wand\",\r\n        \"Staff\",\r\n        \"Manacaster\",\r\n    ],\r\n};\r\n\r\nexport const WEAPON_FILTERS = {\r\n    rarity: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\r\n    element: [\"Flame\", \"Water\", \"Wind\", \"Light\", \"Shadow\", \"None\"],\r\n    weapon: [\r\n        \"Sword\",\r\n        \"Blade\",\r\n        \"Dagger\",\r\n        \"Axe\",\r\n        \"Lance\",\r\n        \"Bow\",\r\n        \"Wand\",\r\n        \"Staff\",\r\n        \"Manacaster\",\r\n    ],\r\n};\r\n\r\nexport const spFaceTextures = {\r\n    c110300_01: \"ec110300_01\",\r\n};\r\n\r\nexport const commonBG = {\r\n    green: \"#00ff00\",\r\n    black: \"#000000\",\r\n    grey: \"#cccccc\",\r\n    white: \"#ffffff\",\r\n};\r\n\r\nexport const CAM_PARAMS = {\r\n    angle: 45,\r\n    far: 300,\r\n    near: 0.01,\r\n};\r\n\r\nexport const cameraPositions = {\r\n    c: [0, 0.5, 1.5],\r\n    d: [3, 0.5, 6],\r\n\r\n    c100034_01: [0, 0.5, 1.75],\r\n    d210078_01: [3, 3, 20],\r\n    d210114_01: [3, 3, 20],\r\n\r\n    smith: [1, 1, 2],\r\n};\r\n\r\nexport const controlsPositions = {\r\n    c: [0, 0.5, 0],\r\n    d: [0, 1, 0],\r\n\r\n    d210078_01: [0, 3, 0],\r\n    d210114_01: [0, 3, 0],\r\n\r\n    smith: [0, 0.5, 0],\r\n};\r\n\r\nexport const faceOffsets = {\r\n    face1: { x: 2, y: 1 },\r\n    face2: { x: 0, y: 0 },\r\n    face3: { x: 1, y: 0 },\r\n    face4: { x: 2, y: 0 },\r\n    face5: { x: 3, y: 0 },\r\n    face6: { x: 0, y: -1 },\r\n    face7: { x: 1, y: -1 },\r\n    face8: { x: 2, y: -1 },\r\n    face9: { x: 3, y: -1 },\r\n};\r\n\r\nexport const videoCodecs = [\r\n    \"video/webm;codecs=h264\",\r\n    \"video/webm;codecs=vp9\",\r\n    \"video/webm;codecs=vp8\",\r\n    \"video/webm\",\r\n];\r\n","import * as THREE from \"three\";\r\nimport { fbxSource } from \"./App\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nimport { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\";\r\nimport { callbackOnPotentialArray } from \"./helpers\";\r\n\r\nexport const loadModel = url => {\r\n    return (\r\n        url &&\r\n        new Promise(resolve => {\r\n            new FBXLoader().load(url, resolve);\r\n        })\r\n    );\r\n};\r\n\r\nexport const loadTexture = url => {\r\n    return (\r\n        url &&\r\n        new Promise(resolve => {\r\n            new THREE.TextureLoader().load(url, resolve);\r\n        })\r\n    );\r\n};\r\n\r\nexport const analyzeWeaponCode = code => {\r\n    const flipped = code.endsWith(\"b\");\r\n    const weaponCode = code.substring(0, code.length - 1);\r\n    const model = `${fbxSource}/fbx/${weaponCode}/${weaponCode}.fbx`;\r\n    const texture = `${fbxSource}/fbx/${weaponCode}/${weaponCode}.png`;\r\n\r\n    return { model, texture, flipped };\r\n};\r\n\r\nexport const disposeItem = item => {\r\n    if (!item) return;\r\n\r\n    // keep track of disposed objects\r\n    const disposedList = new Set();\r\n    // true if object's uuid is not in disposedList\r\n    const notDisposed = object => !disposedList.has(object.uuid);\r\n    // true if object exists and not disposed yet\r\n    const needToDispose = object => object && notDisposed(object);\r\n    // add object's uuid to disposedList and call object's dispose method\r\n    const disposeObject = object => {\r\n        disposedList.add(object.uuid);\r\n        object.dispose();\r\n    };\r\n    // dispose an object if need to\r\n    const dispose = object => {\r\n        if (needToDispose(object)) disposeObject(object);\r\n    };\r\n\r\n    item.traverse(child => {\r\n        if (!child.isMesh) return;\r\n        // child is mesh\r\n        // dispose material\r\n        callbackOnPotentialArray(child.material, obj => {\r\n            dispose(obj.map);\r\n            dispose(obj);\r\n        });\r\n        // dispose geometry\r\n        dispose(child.geometry);\r\n    });\r\n};\r\n\r\nexport const changeMaterialToBasic = (object, texturePath) => {\r\n    if (!object) return;\r\n    object.traverse(child => {\r\n        if (!child.isMesh || child.name === \"outline\") return;\r\n        // child is mesh and is not outline\r\n        const material = child.material;\r\n        let texture;\r\n        if (texturePath) {\r\n            texture = new THREE.TextureLoader().load(texturePath);\r\n        } else {\r\n            texture = Array.isArray(child.material)\r\n                ? material[0].map\r\n                : material.map;\r\n        }\r\n        // correct texture gamma\r\n        texture.encoding = THREE.sRGBEncoding;\r\n        // define new material\r\n        const newMaterial = new THREE.MeshBasicMaterial({\r\n            map: texture,\r\n            skinning: true,\r\n        });\r\n        // dispose old material\r\n        callbackOnPotentialArray(material, obj => {\r\n            if (texturePath && obj.map) obj.map.dispose();\r\n            obj.dispose();\r\n        });\r\n        // apply new material\r\n        if (Array.isArray(material)) {\r\n            child.material = new Array(material.length).fill(newMaterial);\r\n        } else {\r\n            child.material = newMaterial;\r\n        }\r\n    });\r\n};\r\n\r\nconst createOutlineMaterial = ({ size, color, opacity }) => {\r\n    const newMaterial = new THREE.MeshToonMaterial({\r\n        color,\r\n        opacity,\r\n        side: THREE.BackSide,\r\n        transparent: true,\r\n        skinning: true,\r\n    });\r\n    newMaterial.onBeforeCompile = shader => {\r\n        const token = \"#include <begin_vertex>\";\r\n        const customTransform = `\r\n            vec3 transformed = position + objectNormal*${size * 0.0005};\r\n        `;\r\n        shader.vertexShader = shader.vertexShader.replace(\r\n            token,\r\n            customTransform\r\n        );\r\n    };\r\n    return newMaterial;\r\n};\r\n\r\n// replace material of an object\r\nconst replaceMaterial = (object, newMaterial) => {\r\n    // dispose old material\r\n    callbackOnPotentialArray(object.material, obj => {\r\n        if (obj.map) obj.map.dispose();\r\n        obj.dispose();\r\n    });\r\n    // apply new material\r\n    if (Array.isArray(object.material)) {\r\n        object.material = new Array(object.material.length).fill(newMaterial);\r\n    } else {\r\n        object.material = newMaterial;\r\n    }\r\n};\r\n\r\n// change opacity of an object\r\nexport const changeOpacity = ({ material }, opacity) => {\r\n    callbackOnPotentialArray(material, obj => {\r\n        obj.opacity = opacity;\r\n    });\r\n};\r\n\r\n// update outline shader to change size\r\nconst updateOutlineShader = (material, size) => {\r\n    // Hacky way to force shader recompilation, needs fixing !!!!!!!!!!!!!!!!!!\r\n    material.fog = !material.fog;\r\n    material.needsUpdate = true;\r\n\r\n    material.onBeforeCompile = shader => {\r\n        const token = \"#include <begin_vertex>\";\r\n        const customTransform = `\r\n                vec3 transformed = position + objectNormal*${size * 0.0005};\r\n            `;\r\n        shader.vertexShader = shader.vertexShader.replace(\r\n            token,\r\n            customTransform\r\n        );\r\n    };\r\n    setTimeout(() => {\r\n        material.fog = !material.fog;\r\n        material.needsUpdate = true;\r\n    }, 100); // Sometimes doesn't work with 0 delay\r\n};\r\n\r\n// change size of outline\r\nexport const changeOutlineSize = ({ material }, size) => {\r\n    if (Array.isArray(material)) {\r\n        const updated = new Set();\r\n        material.forEach(m => {\r\n            if (updated.has(m.uuid)) return;\r\n\r\n            updateOutlineShader(m, size);\r\n            updated.add(m.uuid);\r\n        });\r\n    } else {\r\n        updateOutlineShader(material, size);\r\n    }\r\n};\r\n\r\n// Change color of outline\r\nexport const changeOutlineColor = ({ material }, color) => {\r\n    if (Array.isArray(material)) {\r\n        const updated = new Set();\r\n        material.forEach(m => {\r\n            if (updated.has(m.uuid)) return;\r\n\r\n            m.color = new THREE.Color(color);\r\n            updated.add(m.uuid);\r\n        });\r\n    } else {\r\n        material.color = new THREE.Color(color);\r\n    }\r\n};\r\n\r\n// Add outline to object and return reference to outlines\r\nexport const addOutline = (object, details) => {\r\n    if (!object) return;\r\n    const outlines = []; // return value\r\n    object.traverse(child => {\r\n        if (!child.isMesh) return;\r\n        // child is mesh\r\n        const outline = child.clone();\r\n        outline.name = \"outline\";\r\n        outline.visible = details.enable;\r\n\r\n        outlines.push(outline);\r\n        const newMaterial = createOutlineMaterial(details);\r\n        replaceMaterial(outline, newMaterial);\r\n\r\n        if (child.isSkinnedMesh) {\r\n            outline.bind(child.skeleton, child.bindMatrix);\r\n        }\r\n        child.parent.add(outline);\r\n    });\r\n    return outlines;\r\n};\r\n\r\nexport const applyFace = (object, faceTexture, faceOffset) => {\r\n    const faceTexturePath = `${fbxSource}/fbx/${faceTexture}/${faceTexture}.png`;\r\n    const texture = new THREE.TextureLoader().load(faceTexturePath);\r\n    texture.encoding = THREE.sRGBEncoding;\r\n    const faceMaterial = new THREE.MeshBasicMaterial({\r\n        map: texture,\r\n        skinning: true,\r\n    });\r\n\r\n    object.traverse(child => {\r\n        if (child.name === \"mBodyAll\" && child.geometry.groups.length === 3) {\r\n            const faceGroups = child.geometry.groups.filter(\r\n                k => k.count < 1000\r\n            );\r\n            if (faceGroups.length === 2) {\r\n                const materialIndexes = faceGroups.map(\r\n                    group => group.materialIndex\r\n                );\r\n                materialIndexes.forEach(\r\n                    i => (child.material[i] = faceMaterial)\r\n                );\r\n                if (faceOffset.x !== 0 || faceOffset.y !== 0) {\r\n                    const start = Math.min(\r\n                        faceGroups[0].start,\r\n                        faceGroups[1].start\r\n                    );\r\n                    const end = Math.max(\r\n                        faceGroups[0].start + faceGroups[0].count,\r\n                        faceGroups[1].start + faceGroups[1].count\r\n                    );\r\n\r\n                    const uv = child.geometry.attributes.uv;\r\n                    for (let i = start; i < end; i++) {\r\n                        const u = uv.getX(i) + 0.25 * faceOffset.x;\r\n                        const v = uv.getY(i) + 0.25 * faceOffset.y;\r\n                        uv.setXY(i, u, v);\r\n                    }\r\n                    uv.needsUpdate = true;\r\n                }\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\n// Chain Code is invalid if starts with the character \"+\"\r\nexport const analyzeChainCode = code => {\r\n    if (!code) return [\"\", \"\"];\r\n    const aniCodes = code.split(\">\");\r\n    const nAni = aniCodes.length;\r\n    const fileList = [];\r\n    const animationList = [];\r\n    for (let i = 0; i < nAni; i++) {\r\n        let timeScale = 1,\r\n            repetitions = 1,\r\n            fileIdx = null,\r\n            aniName = null,\r\n            fileName = null,\r\n            details,\r\n            currentAni = {};\r\n        const currentParts = aniCodes[i].split(\"+\");\r\n        const fromModelFile = currentParts.length === 1;\r\n        if (fromModelFile) {\r\n            details = currentParts[0];\r\n        } else {\r\n            [fileName, details] = currentParts;\r\n            fileIdx = fileList.length - 1;\r\n        }\r\n        if (fileName) {\r\n            fileIdx = fileList.length;\r\n            fileList.push(fileName);\r\n        }\r\n        if (details.includes(\"&\")) {\r\n            const [name, ...settings] = details.split(\"&\");\r\n            aniName = name;\r\n            for (let setting of settings) {\r\n                const [key, value] = setting.split(\"=\");\r\n                if (key === \"ts\") {\r\n                    timeScale = parseFloat(value);\r\n                }\r\n                if (key === \"r\") {\r\n                    repetitions = value === \"inf\" ? Infinity : parseInt(value);\r\n                }\r\n            }\r\n        } else {\r\n            aniName = details;\r\n        }\r\n        currentAni = {\r\n            fileIdx,\r\n            aniName,\r\n            timeScale,\r\n            repetitions,\r\n        };\r\n        animationList.push(currentAni);\r\n    }\r\n    return [fileList, animationList];\r\n};\r\n\r\nexport const chainCodeToList = (code, name) => {\r\n    const [fileList, animationList] = analyzeChainCode(code);\r\n    const length = animationList.length;\r\n    const output = animationList.map((ani, i) => {\r\n        const { fileIdx, aniName, timeScale, repetitions } = ani;\r\n        const partName = name.concat(length > 1 ? `#${i + 1}` : \"\");\r\n        return {\r\n            name: partName,\r\n            fileName: fileList[fileIdx],\r\n            aniName,\r\n            timeScale,\r\n            repetitions,\r\n            id: uuid(),\r\n        };\r\n    });\r\n    return output;\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <App />\r\n    </Router>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}