{"version":3,"sources":["MainPage/Sidebar/SidebarBody/AdvancedSettings/AdvancedSettingsGroup.js","MainPage/Sidebar/SidebarBody/AdvancedSettings/MaterialSettings.js"],"names":["SettingsGroup","children","openAtStart","title","titleButton","useToggleState","expand","toggleExpand","className","onClick","size","in","timeout","unmountOnExit","MaterialParamsSetting","lazy","MaterialSettings","openModal","materialType","useContext","SettingsContext","material","type","dispatch","DispatchContext","options","MATERIALS","map","mat","value","variant","event","stopPropagation","key","fullWidth","onChange","matType","target","fallback"],"mappings":"2NAwCeA,IA9Bf,YAA+E,IAAtDC,EAAqD,EAArDA,SAAqD,IAA3CC,mBAA2C,SAAtBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,YAAe,EAC3CC,YAAeH,GAD4B,mBACnEI,EADmE,KAC3DC,EAD2D,KAG1E,OACI,sBAAKC,UAAU,wBAAf,UACI,sBACIA,UAAU,+BACVC,QAASF,EAFb,UAII,cAAC,IAAD,CAAYG,KAAK,QAAjB,SACKJ,EACG,cAAC,IAAD,IAEA,cAAC,IAAD,MAGR,qBAAKE,UAAU,8BAAf,SAA8CL,IAC7CC,GACG,qBAAKI,UAAU,iCAAf,SACKJ,OAIb,cAAC,IAAD,CAAUO,GAAIL,EAAQM,QAAQ,OAAOC,eAAa,EAAlD,SACKZ,S,qHCvBXa,EAAwBC,gBAAK,kBAAM,wDAoE1BC,UAlEf,YAAuD,IAA3BC,EAA0B,EAA1BA,UAAWf,EAAe,EAAfA,YAEbgB,EAClBC,qBAAWC,KADXC,SAAYC,KAGVC,EAAWJ,qBAAWK,KAqBtBC,EAAUC,IAAUC,KAAI,SAAAC,GAAG,OAC7B,cAAC,IAAD,CAAUC,MAAOD,EAAjB,SACKA,GADsBA,MAKzBxB,EACF,cAAC,IAAD,CAAQ0B,QAAQ,YAAYrB,QA1BV,SAAAsB,GAClBA,EAAMC,kBAKNT,EAJe,CACXD,KAAM,QACNW,IAAK,cAsBT,mBAKJ,OACI,cAAC,IAAD,CACI9B,MAAM,WACNC,YAAaA,EACbF,YAAaA,EAHjB,SAKI,sBAAKM,UAAU,gCAAf,UACI,qBAAKA,UAAU,mCAAf,kBACA,8BACI,cAAC,IAAD,CACI0B,WAAS,EACTC,SAjCC,SAAAJ,GAAU,IACZK,EAAYL,EAAMM,OAAzBR,MAMRN,EALe,CACXD,KAAM,SACNW,IAAK,WACLJ,MAAO,CAAEP,KAAMc,MA6BHP,MAAOX,EAHX,SAKKO,MAGT,cAAC,WAAD,CAAUa,SAAU,0CAApB,SACI,cAACxB,EAAD,CACII,aAAcA,EACdD,UAAWA","file":"static/js/38.bbb8909e.chunk.js","sourcesContent":["import useToggleState from \"hooks/useToggleState\";\r\n\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\n\r\nimport \"./styles/AdvancedSettingsGroup.css\";\r\n\r\nfunction SettingsGroup({ children, openAtStart = false, title, titleButton }) {\r\n    const [expand, toggleExpand] = useToggleState(openAtStart);\r\n\r\n    return (\r\n        <div className=\"AdvancedSettingsGroup\">\r\n            <div\r\n                className=\"AdvancedSettingsGroup-header\"\r\n                onClick={toggleExpand}\r\n            >\r\n                <IconButton size=\"small\">\r\n                    {expand ? (\r\n                        <KeyboardArrowUpIcon />\r\n                    ) : (\r\n                        <KeyboardArrowDownIcon />\r\n                    )}\r\n                </IconButton>\r\n                <div className=\"AdvancedSettingsGroup-title\">{title}</div>\r\n                {titleButton && (\r\n                    <div className=\"AdvancedSettingsGroup-titleBtn\">\r\n                        {titleButton}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <Collapse in={expand} timeout=\"auto\" unmountOnExit>\r\n                {children}\r\n            </Collapse>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SettingsGroup;\r\n","import { useContext, lazy, Suspense } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport SettingsGroup from \"./AdvancedSettingsGroup\";\r\n\r\nimport { DispatchContext, SettingsContext } from \"context/SettingsContext\";\r\nimport \"./styles/AdvancedSettingsGroup.css\";\r\nimport { MATERIALS } from \"helpers/consts\";\r\n\r\nconst MaterialParamsSetting = lazy(() => import(\"./MaterialParamsSetting\"));\r\n\r\nfunction MaterialSettings({ openModal, openAtStart }) {\r\n    const {\r\n        material: { type: materialType },\r\n    } = useContext(SettingsContext);\r\n\r\n    const dispatch = useContext(DispatchContext);\r\n\r\n    const resetSettings = event => {\r\n        event.stopPropagation();\r\n        const action = {\r\n            type: \"reset\",\r\n            key: \"material\",\r\n        };\r\n        dispatch(action);\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const { value: matType } = event.target;\r\n        const action = {\r\n            type: \"update\",\r\n            key: \"material\",\r\n            value: { type: matType },\r\n        };\r\n        dispatch(action);\r\n    };\r\n\r\n    const options = MATERIALS.map(mat => (\r\n        <MenuItem value={mat} key={mat}>\r\n            {mat}\r\n        </MenuItem>\r\n    ));\r\n\r\n    const titleButton = (\r\n        <Button variant=\"contained\" onClick={resetSettings}>\r\n            Reset\r\n        </Button>\r\n    );\r\n\r\n    return (\r\n        <SettingsGroup\r\n            title=\"Material\"\r\n            titleButton={titleButton}\r\n            openAtStart={openAtStart}\r\n        >\r\n            <div className=\"AdvancedSettingsGroup-options\">\r\n                <div className=\"AdvancedSettingsGroup-optionName\">Type</div>\r\n                <div>\r\n                    <Select\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={materialType}\r\n                    >\r\n                        {options}\r\n                    </Select>\r\n                </div>\r\n                <Suspense fallback={<div>Loading</div>}>\r\n                    <MaterialParamsSetting\r\n                        materialType={materialType}\r\n                        openModal={openModal}\r\n                    />\r\n                </Suspense>\r\n            </div>\r\n        </SettingsGroup>\r\n    );\r\n}\r\n\r\nexport default MaterialSettings;\r\n"],"sourceRoot":""}