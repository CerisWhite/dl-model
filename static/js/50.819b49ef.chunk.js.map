{"version":3,"sources":["MainPage/Sidebar/Modal/ModalBody.js","MainPage/Dock/DockStyles.js","MainPage/Dock/Dock.js"],"names":["AdvSelect","lazy","DragonSelect","FaceSelect","WeaponSelect","AnimationSelect","NonHumanAni","ColorSelect","Share","ModalBody","mode","closeModal","handleSelect","docked","setDock","Body","includes","moveToDock","fallback","close","MAX_DOCK_WIDTH","useStyles","makeStyles","drawer","maxWidth","overflowY","drawerPaper","alignItems","display","flexDirection","justifyContent","width","Dock","classes","Drawer","className","variant","anchor","open","paper"],"mappings":"+HAEMA,EAAYC,gBAAK,kBAAM,kCACvBC,EAAeD,gBAAK,kBAAM,kCAC1BE,EAAaF,gBAAK,kBAAM,kCACxBG,EAAeH,gBAAK,kBAAM,kCAC1BI,EAAkBJ,gBAAK,kBAAM,wDAC7BK,EAAcL,gBAAK,kBAAM,yDACzBM,EAAcN,gBAAK,kBAAM,kCACzBO,EAAQP,gBAAK,kBAAM,6EAwDVQ,IAtDf,YAAyE,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,WAAYC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QACrDC,EAAO,KACX,OAAQL,GACJ,IAAK,MACL,IAAK,UACDK,EAAOf,EACP,MACJ,IAAK,SACDe,EAAOb,EACP,MACJ,IAAK,OACL,IAAK,MACL,IAAK,QACDa,EAAOZ,EACP,MACJ,IAAK,SACDY,EAAOX,EACP,MACJ,IAAK,YACDW,EAAOV,EACP,MACJ,IAAK,cACDU,EAAOT,EACP,MACJ,IAAK,aACDS,EAAOR,EACP,MACJ,IAAK,QACDQ,EAAOP,EACP,MACJ,QACIO,EAAOL,EAAKM,SAAS,KAAOT,EAAc,KAGlD,IAAMU,EACFH,GACA,WACIA,EAAQJ,EAAME,GACdD,KAGR,OACI,cAAC,WAAD,CAAUO,SAAU,0CAApB,SACI,cAACH,EAAD,CACIL,KAAMA,EACNG,OAAQA,EACRM,MAAOR,EACPC,aAAcA,EACdK,WAAYA,Q,sHCzDtBG,EAAiB,QAmBRC,EAjBGC,aAAW,iBAAO,CAChCC,OAAQ,CACJC,SAAUJ,EACVK,UAAW,UAEfC,YAAa,CACTC,WAAY,SACZH,SAAUJ,EACVQ,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChB,yBAA0B,CACtBC,MAAO,aCYJC,MAvBf,YAA8C,IAA9BtB,EAA6B,EAA7BA,KAAME,EAAuB,EAAvBA,aAAcO,EAAS,EAATA,MAC1Bc,EAAUZ,IAEhB,OACI,cAACa,EAAA,EAAD,CACIC,UAAWF,EAAQV,OACnBa,QAAQ,aACRC,OAAO,QACPC,OAAQ5B,EACRuB,QAAS,CACLM,MAAON,EAAQP,aANvB,SASI,cAACjB,EAAA,EAAD,CACIC,KAAMA,EACNG,QAAM,EACNF,WAAYQ,EACZP,aAAcA","file":"static/js/50.819b49ef.chunk.js","sourcesContent":["import { lazy, Suspense } from \"react\";\r\n\r\nconst AdvSelect = lazy(() => import(\"./AdvSelect\"));\r\nconst DragonSelect = lazy(() => import(\"./DragonSelect\"));\r\nconst FaceSelect = lazy(() => import(\"./FaceSelect\"));\r\nconst WeaponSelect = lazy(() => import(\"./WeaponSelect\"));\r\nconst AnimationSelect = lazy(() => import(\"./AnimationSelect\"));\r\nconst NonHumanAni = lazy(() => import(\"./NonHumanAni\"));\r\nconst ColorSelect = lazy(() => import(\"./ColorSelect\"));\r\nconst Share = lazy(() => import(\"./Share\"));\r\n\r\nfunction ModalBody({ mode, closeModal, handleSelect, docked, setDock }) {\r\n    let Body = null;\r\n    switch (mode) {\r\n        case \"adv\":\r\n        case \"texture\":\r\n            Body = AdvSelect;\r\n            break;\r\n        case \"dragon\":\r\n            Body = DragonSelect;\r\n            break;\r\n        case \"face\":\r\n        case \"eye\":\r\n        case \"mouth\":\r\n            Body = FaceSelect;\r\n            break;\r\n        case \"weapon\":\r\n            Body = WeaponSelect;\r\n            break;\r\n        case \"animation\":\r\n            Body = AnimationSelect;\r\n            break;\r\n        case \"nonHumanAni\":\r\n            Body = NonHumanAni;\r\n            break;\r\n        case \"background\":\r\n            Body = ColorSelect;\r\n            break;\r\n        case \"share\":\r\n            Body = Share;\r\n            break;\r\n        default:\r\n            Body = mode.includes(\"-\") ? ColorSelect : null;\r\n    }\r\n\r\n    const moveToDock =\r\n        setDock &&\r\n        function () {\r\n            setDock(mode, handleSelect);\r\n            closeModal();\r\n        };\r\n\r\n    return (\r\n        <Suspense fallback={<div>Loading</div>}>\r\n            <Body\r\n                mode={mode}\r\n                docked={docked}\r\n                close={closeModal}\r\n                handleSelect={handleSelect}\r\n                moveToDock={moveToDock}\r\n            />\r\n        </Suspense>\r\n    );\r\n}\r\n\r\nexport default ModalBody;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst MAX_DOCK_WIDTH = \"23rem\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    drawer: {\r\n        maxWidth: MAX_DOCK_WIDTH,\r\n        overflowY: \"scroll\",\r\n    },\r\n    drawerPaper: {\r\n        alignItems: \"center\",\r\n        maxWidth: MAX_DOCK_WIDTH,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        \"& .MuiDialogTitle-root\": {\r\n            width: \"100%\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Drawer from \"@material-ui/core/Drawer\";\r\nimport ModalBody from \"MainPage/Sidebar/Modal/ModalBody\";\r\n\r\nimport useStyles from \"./DockStyles\";\r\n\r\nfunction Dock({ mode, handleSelect, close }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Drawer\r\n            className={classes.drawer}\r\n            variant=\"persistent\"\r\n            anchor=\"right\"\r\n            open={!!mode}\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}\r\n        >\r\n            <ModalBody\r\n                mode={mode}\r\n                docked\r\n                closeModal={close}\r\n                handleSelect={handleSelect}\r\n            />\r\n        </Drawer>\r\n    );\r\n}\r\n\r\nexport default Dock;\r\n"],"sourceRoot":""}