{"version":3,"sources":["components/CustomDialog/CustomDialogStyles.js","components/CustomDialog/CustomDialog.js","MainPage/Sidebar/Modal/Modal.js","MainPage/Sidebar/Modal/NonHumanAni/NonHumanAni.js"],"names":["styles","dialogRoot","margin","padding","closeButton","position","right","top","color","dockButton","titleRoot","paddingBottom","display","justifyContent","DialogTop","withStyles","props","children","classes","other","onClose","disableTypography","className","DialogTitle","showDockBtn","onDock","Typography","variant","titleText","IconButton","aria-label","onClick","DialogContent","theme","root","spacing","MuiDialogContent","MuiDialogActions","Modal","mode","closeModal","handleSelect","setDock","createPortal","Dialog","maxWidth","open","scroll","PaperProps","ModalBody","document","getElementById","NonHumanAni","close","docked","moveToDock","dispatch","useContext","DispatchContext","SettingsContext","modelId","model","id","sidebarContent","app","useState","sourceId","setSourceId","modalMode","setModalMode","source","useRef","useEffect","getViewerType","current","portraitPath","process","slice","portrait","src","alt","chainMode","animations","dragonAni","updateSettings","key","value","type","aniHandler","aniCode","name","code","chainList","chainCodeToList","chain","handleAniSelect","event","currentTarget","dataset","aniButtons","map","Button","data-value","data-name","dividers"],"mappings":"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","file":"static/js/37.3a618301.chunk.js","sourcesContent":["const styles = {\r\n    dialogRoot: {\r\n        margin: 0,\r\n        padding: 0,\r\n    },\r\n    closeButton: {\r\n        position: \"absolute\",\r\n        right: \"0.25rem\",\r\n        top: \"0.5rem\",\r\n        color: \"rgba(0,0,0,0.8)\",\r\n    },\r\n    dockButton: {\r\n        position: \"absolute\",\r\n        right: \"2.3rem\",\r\n        top: \"0.5rem\",\r\n        color: \"rgba(0,0,0,0.8)\",\r\n    },\r\n    titleRoot: {\r\n        margin: 0,\r\n        padding: \"1rem\",\r\n        paddingBottom: 0,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n    },\r\n};\r\n\r\nexport default styles;\r\n","import { withStyles } from \"@material-ui/core/styles\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport Dock from \"@material-ui/icons/ArrowForwardIos\";\r\n\r\nimport styles from \"./CustomDialogStyles\";\r\n\r\nexport const DialogTop = withStyles(styles)(props => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle\r\n            disableTypography\r\n            className={classes.dialogRoot}\r\n            {...other}\r\n        >\r\n            {children}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nexport const DialogTitle = withStyles(styles)(props => {\r\n    const {\r\n        children,\r\n        classes,\r\n        onClose,\r\n        showDockBtn = false,\r\n        onDock,\r\n        ...other\r\n    } = props;\r\n    return (\r\n        <MuiDialogTitle\r\n            disableTypography\r\n            className={classes.titleRoot}\r\n            {...other}\r\n        >\r\n            <Typography variant=\"h6\" className={classes.titleText}>\r\n                {children}\r\n            </Typography>\r\n            {showDockBtn && (\r\n                <IconButton\r\n                    aria-label=\"dock\"\r\n                    className={classes.dockButton}\r\n                    onClick={onDock}\r\n                >\r\n                    <Dock />\r\n                </IconButton>\r\n            )}\r\n            <IconButton\r\n                aria-label=\"close\"\r\n                className={classes.closeButton}\r\n                onClick={onClose}\r\n            >\r\n                <Close />\r\n            </IconButton>\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nexport const DialogContent = withStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nexport const DialogActions = withStyles(theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n}))(MuiDialogActions);\r\n","import { createPortal } from \"react-dom\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nimport ModalBody from \"./ModalBody\";\r\n\r\nfunction Modal({ mode, closeModal, handleSelect, setDock = null }) {\r\n    return (\r\n        mode &&\r\n        createPortal(\r\n            <Dialog\r\n                maxWidth=\"lg\"\r\n                onClose={closeModal}\r\n                open={!!mode}\r\n                scroll=\"paper\"\r\n                PaperProps={{ classes: { root: \"Modal\" } }}\r\n            >\r\n                <ModalBody\r\n                    mode={mode}\r\n                    closeModal={closeModal}\r\n                    handleSelect={handleSelect}\r\n                    setDock={setDock}\r\n                />\r\n            </Dialog>,\r\n            document.getElementById(\"modal-root\")\r\n        )\r\n    );\r\n}\r\n\r\nexport default Modal;\r\n","import { useState, useEffect, useContext, useRef } from \"react\";\r\n\r\nimport { DispatchContext, SettingsContext } from \"context/SettingsContext\";\r\n\r\nimport { DialogContent, DialogTitle, DialogTop } from \"components/CustomDialog\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport dragonAni from \"data/aniDragon\";\r\nimport Modal from \"../../Modal\";\r\n\r\nimport { chainCodeToList } from \"helpers/viewerHelpers\";\r\nimport { getViewerType } from \"helpers/helpers\";\r\n\r\nimport \"./styles/NonHumanAni.css\";\r\n\r\nfunction NonHumanAni({ close, handleSelect, docked, moveToDock }) {\r\n    const dispatch = useContext(DispatchContext);\r\n    const {\r\n        model: { id: modelId },\r\n        app: { sidebarContent },\r\n    } = useContext(SettingsContext);\r\n\r\n    const [sourceId, setSourceId] = useState(modelId);\r\n    const [modalMode, setModalMode] = useState(\"\");\r\n\r\n    const source = useRef(modelId);\r\n\r\n    useEffect(() => {\r\n        if (getViewerType(modelId) !== \"dragon\") {\r\n            close();\r\n            return;\r\n        }\r\n        if (modelId !== source.current) {\r\n            source.current = modelId;\r\n            setSourceId(modelId);\r\n        }\r\n    }, [modelId, close]);\r\n\r\n    const portraitDir = \"dragonPortraits\";\r\n\r\n    const portraitPath = `${\r\n        process.env.PUBLIC_URL\r\n    }/img/${portraitDir}/${sourceId.slice?.(1)}.png`;\r\n\r\n    const portrait = <img src={portraitPath} alt=\"portrait\" />;\r\n\r\n    const chainMode = sidebarContent === \"chainMaker\";\r\n\r\n    const animations = dragonAni[sourceId];\r\n\r\n    const chooseSource = () => setModalMode(\"dragon\");\r\n    const closeModal = () => setModalMode(\"\");\r\n\r\n    const updateSettings = (key, value) => {\r\n        dispatch({ type: \"update\", key, value });\r\n    };\r\n\r\n    const defaultAniHandler = (aniCode, name) => {\r\n        // Set Animation\r\n        updateSettings(\"animation\", { code: aniCode });\r\n        // Reinitialize Chain Maker's chain\r\n        const chainList = chainCodeToList(aniCode, name);\r\n        updateSettings(\"chainMaker\", { chain: chainList });\r\n    };\r\n\r\n    const aniHandler = handleSelect || defaultAniHandler;\r\n\r\n    const handleAniSelect = event => {\r\n        const aniCode = event.currentTarget.dataset.value;\r\n        const name = event.currentTarget.dataset.name;\r\n\r\n        aniHandler(aniCode, name);\r\n        !docked && close();\r\n    };\r\n\r\n    const aniButtons = animations ? (\r\n        animations.map(({ name, code }) => (\r\n            <Button\r\n                key={code}\r\n                data-value={code}\r\n                data-name={name}\r\n                variant=\"contained\"\r\n                onClick={handleAniSelect}\r\n            >\r\n                {name}\r\n            </Button>\r\n        ))\r\n    ) : (\r\n        <div>No Animation</div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <DialogTop>\r\n                <DialogTitle\r\n                    showDockBtn={!docked && !chainMode}\r\n                    onDock={moveToDock}\r\n                    onClose={close}\r\n                >\r\n                    {chainMode ? \"Add Animation\" : \"Select an Animation\"}\r\n                </DialogTitle>\r\n                <div className=\"NonHumanAni-source\">\r\n                    {portrait}\r\n                    <Button variant=\"outlined\" onClick={chooseSource}>\r\n                        Change Source\r\n                    </Button>\r\n                </div>\r\n            </DialogTop>\r\n            <DialogContent dividers className=\"NonHumanAni-content\">\r\n                {aniButtons}\r\n            </DialogContent>\r\n            <Modal\r\n                mode={modalMode}\r\n                closeModal={closeModal}\r\n                handleSelect={setSourceId}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NonHumanAni;\r\n"],"sourceRoot":""}