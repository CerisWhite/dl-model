{"version":3,"sources":["components/Filters/GlowCheckbox.js","components/Filters/FilterGroup.js","components/Filters/Filters.js"],"names":["GlowCheckbox","props","group","filterName","handleToggle","checked","imgPath","process","className","onClick","src","alt","FilterGroup","groupName","filterNames","value","filters","map","filter","Filters","filterList","groupState","resetFilters","filterGroups","Object","keys"],"mappings":"gPAqBeA,MAnBf,SAAsBC,GAClB,IAAQC,EAA6CD,EAA7CC,MAAOC,EAAsCF,EAAtCE,WAAYC,EAA0BH,EAA1BG,aAAcC,EAAYJ,EAAZI,QACnCC,EAAO,UAAMC,YAAN,uBAA2CL,EAA3C,YAAoDC,EAApD,QACb,OACI,qBACIK,UAAU,eACV,aAAYN,EACZ,YAAWC,EACXM,QAASL,EAJb,SAMI,qBACII,UAAS,4BAAuBH,GAAW,WAC3CK,IAAKJ,EACLK,IAAG,UAAKT,EAAL,YAAcC,Q,OCElBS,MAdf,SAAqBX,GACjB,IAAQY,EAAgDZ,EAAhDY,UAAWC,EAAqCb,EAArCa,YAAaC,EAAwBd,EAAxBc,MAAOX,EAAiBH,EAAjBG,aACjCY,EAAUF,EAAYG,KAAI,SAAAC,GAAM,OAClC,cAAC,EAAD,CACIhB,MAAOW,EACPR,QAASU,EAAMG,GACff,WAAYe,EACZd,aAAcA,GAJlB,UAKYS,EALZ,YAKyBK,OAG7B,OAAO,qBAAKV,UAAU,cAAf,SAA8BQ,K,OCU1BG,MArBf,SAAiBlB,GACb,IAAQmB,EAAuDnB,EAAvDmB,WAAYC,EAA2CpB,EAA3CoB,WAAYjB,EAA+BH,EAA/BG,aAAckB,EAAiBrB,EAAjBqB,aACxCC,EAAeC,OAAOC,KAAKL,GAAYH,KAAI,SAAAf,GAAK,OAClD,cAAC,EAAD,CACIW,UAAWX,EACXY,YAAaU,OAAOC,KAAKJ,EAAWnB,IACpCa,MAAOM,EAAWnB,GAClBE,aAAcA,GACTF,MAGb,OACI,sBAAKM,UAAU,UAAf,UACKe,EACD,wBAAQf,UAAU,gBAAgBC,QAASa,EAA3C","file":"static/js/4.1549696f.chunk.js","sourcesContent":["import \"./styles/GlowCheckbox.css\";\r\n\r\nfunction GlowCheckbox(props) {\r\n    const { group, filterName, handleToggle, checked } = props;\r\n    const imgPath = `${process.env.PUBLIC_URL}/img/filter/${group}_${filterName}.png`;\r\n    return (\r\n        <div\r\n            className=\"GlowCheckbox\"\r\n            data-group={group}\r\n            data-name={filterName}\r\n            onClick={handleToggle}\r\n        >\r\n            <img\r\n                className={`GlowCheckbox-icon ${checked && \"checked\"}`}\r\n                src={imgPath}\r\n                alt={`${group}_${filterName}`}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GlowCheckbox;\r\n","import GlowCheckbox from \"./GlowCheckbox\";\r\nimport \"./styles/FilterGroup.css\";\r\n\r\nfunction FilterGroup(props) {\r\n    const { groupName, filterNames, value, handleToggle } = props;\r\n    const filters = filterNames.map(filter => (\r\n        <GlowCheckbox\r\n            group={groupName}\r\n            checked={value[filter]}\r\n            filterName={filter}\r\n            handleToggle={handleToggle}\r\n            key={`${groupName}_${filter}`}\r\n        />\r\n    ));\r\n    return <div className=\"FilterGroup\">{filters}</div>;\r\n}\r\n\r\nexport default FilterGroup;\r\n","import FilterGroup from \"./FilterGroup\";\r\nimport \"./styles/Filters.css\";\r\n\r\nfunction Filters(props) {\r\n    const { filterList, groupState, handleToggle, resetFilters } = props;\r\n    const filterGroups = Object.keys(filterList).map(group => (\r\n        <FilterGroup\r\n            groupName={group}\r\n            filterNames={Object.keys(groupState[group])}\r\n            value={groupState[group]}\r\n            handleToggle={handleToggle}\r\n            key={group}\r\n        />\r\n    ));\r\n    return (\r\n        <div className=\"Filters\">\r\n            {filterGroups}\r\n            <button className=\"Filters-reset\" onClick={resetFilters}>\r\n                Reset\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filters;\r\n"],"sourceRoot":""}