{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","components/CardGallery/styles/CharaCardStyles.js","components/CardGallery/CharaCard.js","components/CardGallery/CardGallery.js"],"names":["Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","component","Component","padding","paddingBottom","useStyles","makeStyles","width","position","maxWidth","contentVisibility","containIntrinsicSize","textAlign","margin","border","boxSizing","cursor","filter","content","bottom","left","backgroundColor","color","display","opacity","animation","title","lineHeight","icons","justifyContent","height","portrait","aspectRatio","rarityImg","maxHeight","AdvCard","id","rarity","element","weapon","onClick","portraitDir","eleIconPath","process","weaponIconPath","rarityImgPath","eleIcon","src","alt","weaponIcon","variant","Typography","gutterBottom","loading","CardGallery","list","onSelect","onCardClick","event","value","currentTarget","dataset","cards","map","chara","CharaCard","key"],"mappings":"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","file":"static/js/13.7ec57a58.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * If `true`, the card will use raised styling.\r\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"14rem\",\r\n        position: \"relative\",\r\n        maxWidth: \"47%\",\r\n        contentVisibility: \"auto\",\r\n        containIntrinsicSize: \"0 15rem\",\r\n        padding: 0,\r\n        textAlign: \"center\",\r\n        margin: \"0.3rem 0.1rem\",\r\n        border: \"2px solid rgba(0,0,0,0.1)\",\r\n        boxSizing: \"content-box\",\r\n        cursor: \"pointer\",\r\n        \"&:hover\": {\r\n            border: \"2px solid black\",\r\n            \"& $portrait\": {\r\n                filter: \"drop-shadow(0 0 1px black) drop-shadow(0 0 4px black)\",\r\n            },\r\n        },\r\n        \"& .MuiCardContent-root\": {\r\n            padding: \"0.1rem\",\r\n        },\r\n        \"&[data-value]:hover::after\": {\r\n            content: \"attr(data-value)\",\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            left: 0,\r\n            backgroundColor: \"rgba(0,0,0,0.5)\",\r\n            color: \"white\",\r\n            width: \"100%\",\r\n            display: \"inline-block\",\r\n            opacity: 0,\r\n            animation: \"$fadeIn 0.2s forwards ease-in 1s 1\",\r\n        },\r\n    },\r\n    title: {\r\n        margin: \"5px auto 2px auto\",\r\n        lineHeight: 1,\r\n    },\r\n    icons: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        \"& img\": {\r\n            width: \"1.5rem\",\r\n            height: \"1.5rem\",\r\n            margin: \"0.2rem 1rem 0 1rem\",\r\n        },\r\n    },\r\n    portrait: {\r\n        width: \"100%\",\r\n        aspectRatio: \"1 / 1\",\r\n        margin: \"0.2rem 0\",\r\n        filter: \"drop-shadow(0 0 1px black)\",\r\n    },\r\n    rarityImg: {\r\n        maxHeight: \"2rem\",\r\n        maxWidth: \"80%\",\r\n        margin: \"0 auto\",\r\n    },\r\n    \"@keyframes fadeIn\": {\r\n        \"0%\": { opacity: 0 },\r\n        \"100%\": { opacity: 1 },\r\n    },\r\n});\r\n\r\nexport default useStyles;\r\n","import Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport useStyles from \"./styles/CharaCardStyles\";\r\n\r\n/**\r\n * @callback onClickCallback\r\n * @param {React.MouseEvent<HTMLElement, MouseEvent>} event\r\n * @return {void}\r\n */\r\n/** A single card in card gallery\r\n * @param {Object} props\r\n * @param {ModelData['id']} props.id - model's ID\r\n * @param {ModelData['name']} props.name - model's name\r\n * @param {ModelData['title']} [props.title] - model's title\r\n * @param {ModelData['rarity']} [props.rarity] - model's rarity\r\n * @param {ModelData['element']} [props.element] - model's element\r\n * @param {ModelData['weapon']} [props.weapon] - model's weapon type\r\n * @param {onClickCallback} props.onClick - called when clicked\r\n * @param {string} props.portraitDir - directory of the card's portrait\r\n */\r\nfunction AdvCard(props) {\r\n    const { id, name, title, rarity, element, weapon, onClick, portraitDir } =\r\n        props;\r\n    const classes = useStyles();\r\n\r\n    const eleIconPath = `${process.env.PUBLIC_URL}/img/filter/element_${element}.png`;\r\n    const weaponIconPath = `${process.env.PUBLIC_URL}/img/filter/weapon_${weapon}.png`;\r\n    const rarityImgPath = `${process.env.PUBLIC_URL}/img/filter/card_r${rarity}.png`;\r\n    const portrait = `${process.env.PUBLIC_URL}/img/${portraitDir}/${id}.png`;\r\n\r\n    const eleIcon = element && <img src={eleIconPath} alt={element} />;\r\n    const weaponIcon = weapon && <img src={weaponIconPath} alt={weapon} />;\r\n    const rarityImg = rarity && (\r\n        <img className={classes.rarityImg} src={rarityImgPath} alt=\"rarity\" />\r\n    );\r\n\r\n    return (\r\n        <Card\r\n            className={classes.root}\r\n            data-value={id}\r\n            variant=\"outlined\"\r\n            onClick={onClick}\r\n        >\r\n            <CardContent>\r\n                <Typography\r\n                    className={classes.title}\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                >\r\n                    {title || <br />}\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                    {name}\r\n                </Typography>\r\n                <div className={classes.icons}>\r\n                    {eleIcon}\r\n                    {weaponIcon}\r\n                </div>\r\n                <img\r\n                    className={classes.portrait}\r\n                    src={portrait}\r\n                    alt={name}\r\n                    loading=\"lazy\"\r\n                />\r\n                {rarityImg}\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default AdvCard;\r\n","import CharaCard from \"./CharaCard\";\r\n\r\nimport \"./styles/CardGallery.css\";\r\n\r\n/**\r\n * @callback onSelectCallback - called when a card is clicked, with the card's ID as argument\r\n * @param {string} id\r\n */\r\n/** create a card gallery\r\n * @param {Object} props\r\n * @param {ModelData[]} props.list - list of gallery cards\r\n * @param {onSelectCallback} props.onSelect - called when a card is clicked, with the card's ID as argument\r\n * @param {string} props.portraitDir - directory of the cards' portraits\r\n */\r\nfunction CardGallery(props) {\r\n    const { list, onSelect, portraitDir } = props;\r\n\r\n    /**\r\n     * @param {React.MouseEvent<HTMLElement>} event\r\n     */\r\n    const onCardClick = event => {\r\n        const { value } = event.currentTarget.dataset;\r\n        onSelect(value);\r\n    };\r\n\r\n    const cards = list.map(chara => (\r\n        <CharaCard\r\n            {...chara}\r\n            key={chara.id}\r\n            onClick={onCardClick}\r\n            portraitDir={portraitDir}\r\n        />\r\n    ));\r\n\r\n    return <div className=\"CardGallery\">{cards}</div>;\r\n}\r\n\r\nexport default CardGallery;\r\n"],"sourceRoot":""}