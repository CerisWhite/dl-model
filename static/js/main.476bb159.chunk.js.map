{"version":3,"sources":["viewerHelpers.js","reducer/settingsReducer.js","context/SettingsContext.js","helpers.js","ModelViewer.js","Display.js","MainPage.js","App.js","data/face_offset.js","hooks/useToggleState.js","styles/MainPageStyles.js","styles/Rose-Petals.svg","consts.js","serviceWorker.js","index.js"],"names":["loadModel","url","Promise","resolve","FBXLoader","load","getModelPath","id","fbxSource","getTexturePath","analyzeWeaponCode","code","flipped","endsWith","weaponCode","substring","length","modelPath","texturePath","isSheath","disposeItem","item","disposedList","Set","needToDispose","object","has","uuid","notDisposed","dispose","add","disposeObject","traverse","child","isMesh","callbackOnPotentialArray","material","mat","map","geometry","createNewMaterial","materialType","params","matType","THREE","changeMaterial","target","name","checkParam","Array","isArray","every","forEach","i","texture","encoding","newMaterial","skinning","changeOpacity","opacity","obj","updateOutlineShader","size","fog","needsUpdate","onBeforeCompile","shader","customTransform","vertexShader","replace","setTimeout","changeOutlineSize","updated","m","changeOutlineColor","color","createOutline","outlines","outline","clone","visible","enable","push","fill","replaceMaterial","side","transparent","createOutlineMaterial","isSkinnedMesh","bind","skeleton","bindMatrix","parent","applyOffset","part","offset","groups","targetGroup","find","group","materialIndex","start","end","count","uv","attributes","u","getX","x","v","getY","y","setXY","applyEyeOffset","applyMouthOffset","applyFaceOffset","input","applyTexture","textureId","applyEyeTexture","applyMouthTexture","applyFaceTexture","analyzeChainCode","aniCodes","split","nAni","fileList","animationList","currentAni","timeScale","repetitions","fileIdx","aniName","fileName","details","currentParts","includes","settings","key","value","parseFloat","Infinity","parseInt","chainCodeToList","ani","concat","settingsReducer","state","action","type","subkey","currentValue","defaultSetting","defaultSettings","update","SettingsContext","createContext","DispatchContext","initAniChain","animation","initSettings","model","materialParams","scene","app","capture","chainMaker","chain","SettingsProvider","props","useReducer","dispatch","Provider","children","isBlade","startsWith","callback","setInitialSettings","faceTextureDefined","param","keycode","setValue","join","chainList","n","initKey","isBooleanValue","Boolean","generateChainCode","defaultMod","modList","ts","r","output","Object","keys","modKey","collectFilter","toggleState","collected","tmp","k","multiCondFilter","filters","filterKeys","filter","el","complementaryColor","hexColor","toString","slice","aniButtonsFromObject","handleSelect","groupName","style","maxWidth","variant","data-value","data-name","onClick","getStandbyCode","weapon","gender","WEAPON_CODE","GENDER_CODE","getVictoryCode","getDashAtkCode","getRollCode","getComboCode","comboLength","COMBO_LENGTH","result","getFSCode","fsAniLength","FS_LENGTH","getLobbyCode","ModelViewer","animate","frameId","requestAnimationFrame","dt","clock","getDelta","floor","rotateY","rotateSpeed","Math","PI","mixers","mixer","renderer","render","camera","init","models","modelInfo","main","weaponLeft","weaponRight","outlineParams","viewport","width","window","innerWidth","height","innerHeight","background","bgColor","floorGeometry","rotateX","floorMaterial","CAM_PARAMS","angle","near","far","cameraPosition","position","set","updateProjectionMatrix","controls","OrbitControls","mount","controlsPosition","light","intensity","rendererAA","antialias","alpha","outputEncoding","rendererNoAA","antiAliasing","canvas","domElement","setSize","appendChild","playNextAni","_aniIdx","mediaRecorder","stop","toggleCapture","newIdx","aniIdx","addAnimationChain","animationChain","a","setIsLoading","addEventListener","aniSettings","batchLoader","file","path","animations","all","animFiles","anim","initLoad","modelId","loadMain","loadWeaponR","loadWeaponL","attachWeapon","boneName","detachWeapon","remove","this","initPos","initRot","rotation","weaponInfo","weaponModel","faceTexture","faceOverride","faceNumber","face","faceOffsets","faceOffsetX","faceOffsetY","offsetFix","offsetFixBase","faceOffsetFixList","offsetFixOverride","aniCode","prevProps","aspect","chunks","videoStream","captureStream","MediaRecorder","mimeType","codec","ondataavailable","event","data","onstop","superBuffer","Blob","URL","createObjectURL","document","createElement","body","href","download","click","revokeObjectURL","currentSize","getSize","removeChild","faceOffset","faceTextureChanged","oldFaceNumber","currentOffset","oldOffset","dx","dy","faceOffsetFix","oldFaceOffsetFix","currentFaceOffsetFix","stopAllAction","copy","showOutline","outlineColor","outlineSize","outlineOpacity","cancelAnimationFrame","renderLists","ref","clipAction","setLoop","clampWhenFinished","time","play","PureComponent","AniControl","lazy","Display","useContext","initCameraPosition","showAniControl","useCallback","defaultCameraPosition","cameraPositions","isNaN","controlsPositions","className","fallback","ControlPanel","SideBar","MainPage","location","classes","useStyles","useState","currentMode","setCurrentMode","useToggleState","sidebarOpen","toggleSidebarOpen","controlOpen","toggleControlOpen","isLoading","initLoadDone","setInitLoadDone","showSettings","viewerRef","useRef","setViewport","useEffect","pathname","updateViewportSize","removeEventListener","current","clientHeight","clientWidth","loadingMsg","root","CssBaseline","mode","open","openSidebarButton","openControl","content","process","App","routeProps","c110018_02","c110370_01","c100015_04","c110267_01","c110050_02","c110291_01","c110354_01","c110345_01","c110266_01","c110365_01","c110346_01","c110366_01","c110299_02","c110360_01","c110307_01","c110322_01","c110356_01","c110300_01","c110344_01","c110053_03","c110368_01","c110367_01","c110003_02","c110270_02","c110341_03","initVal","setState","drawerWidth","DRAWER_WIDTH","drawerBG","DRAWER_BGCOLOR","makeStyles","theme","display","drawer","overflowY","drawerPaper","alignItems","backgroundColor","backgroundImage","bg","backgroundSize","backgroundPosition","marginBottom","padding","top","left","margin","borderRadius","transition","cursor","zIndex","justifyContent","fontSize","baseUrl","sideContent","supportedCodecs","ft","f","wr","wl","cam","showAC","AA","rot","cc","MATERIALS","Sword","Blade","Dagger","Axe","Lance","Bow","Wand","Staff","Manacaster","WEAPON_LIST","Male","Female","FILTERS","rarity","element","WEAPON_FILTERS","spFaceTextures","commonBG","green","black","grey","white","c","d","c100034_01","d210078_01","d210114_01","smith","face1","face2","face3","face4","face5","face6","face7","face8","face9","videoCodecs","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.476bb159.chunk.js","sourcesContent":["import * as THREE from \"three\";\r\nimport { fbxSource } from \"./App\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nimport { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\";\r\nimport { callbackOnPotentialArray, isSheath } from \"./helpers\";\r\n\r\nexport const loadModel = url => {\r\n    return (\r\n        url &&\r\n        new Promise(resolve => {\r\n            new FBXLoader().load(url, resolve);\r\n        })\r\n    );\r\n};\r\n\r\nexport const loadTexture = url => {\r\n    return (\r\n        url &&\r\n        new Promise(resolve => {\r\n            new THREE.TextureLoader().load(url, resolve);\r\n        })\r\n    );\r\n};\r\n\r\nexport const getModelPath = id => `${fbxSource}/fbx/${id}/${id}.fbx`;\r\n\r\nexport const getTexturePath = id => `${fbxSource}/fbx/${id}/${id}.png`;\r\n\r\nexport const analyzeWeaponCode = code => {\r\n    if (!code) return \"\";\r\n    const flipped = code.endsWith(\"b\");\r\n    const weaponCode = code.substring(0, code.length - 1);\r\n    const modelPath = getModelPath(weaponCode);\r\n    const texturePath = getTexturePath(weaponCode);\r\n\r\n    return {\r\n        modelPath,\r\n        texturePath,\r\n        flipped,\r\n        isSheath: isSheath(weaponCode),\r\n    };\r\n};\r\n\r\nexport const disposeItem = item => {\r\n    if (!item) return;\r\n\r\n    const disposedList = new Set();\r\n\r\n    const notDisposed = object => !disposedList.has(object.uuid);\r\n\r\n    const needToDispose = object => object && notDisposed(object);\r\n\r\n    const disposeObject = object => {\r\n        disposedList.add(object.uuid);\r\n        object.dispose();\r\n    };\r\n\r\n    const dispose = object => {\r\n        if (needToDispose(object)) disposeObject(object);\r\n    };\r\n\r\n    item.traverse(child => {\r\n        if (!child.isMesh) return;\r\n\r\n        // dispose material\r\n        callbackOnPotentialArray(child.material, mat => {\r\n            if (mat.map) dispose(mat.map);\r\n            dispose(mat);\r\n        });\r\n        // dispose geometry\r\n        dispose(child.geometry);\r\n    });\r\n};\r\n\r\nconst createNewMaterial = (materialType, params) => {\r\n    const matType = `Mesh${materialType}Material`;\r\n    return new THREE[matType](params);\r\n};\r\n\r\nexport const changeMaterial = ({\r\n    target,\r\n    materialType = \"Basic\",\r\n    texturePath,\r\n}) => {\r\n    if (!target) return;\r\n    target.traverse(child => {\r\n        if (!child.isMesh || child.name === \"outline\") return;\r\n\r\n        const checkParam = `isMesh${materialType}Material`;\r\n        const material = child.material;\r\n\r\n        if (Array.isArray(material)) {\r\n            if (material.every(mat => mat[checkParam]) && !texturePath) return;\r\n\r\n            material.forEach((mat, i) => {\r\n                const texture = texturePath\r\n                    ? new THREE.TextureLoader().load(texturePath)\r\n                    : material[i].map;\r\n\r\n                texture.encoding = THREE.sRGBEncoding;\r\n\r\n                const materialParams = {\r\n                    map: texture,\r\n                    skinning: true,\r\n                };\r\n                const newMaterial = createNewMaterial(\r\n                    materialType,\r\n                    materialParams\r\n                );\r\n                newMaterial.name = mat.name;\r\n\r\n                if (texturePath && material[i].map) {\r\n                    material[i].map.dispose();\r\n                }\r\n                material[i].dispose();\r\n                child.material[i] = newMaterial;\r\n            });\r\n        } else {\r\n            if (material[checkParam] && !texturePath) return;\r\n            const texture = texturePath\r\n                ? new THREE.TextureLoader().load(texturePath)\r\n                : material.map;\r\n\r\n            texture.encoding = THREE.sRGBEncoding;\r\n            const materialParams = {\r\n                map: texture,\r\n                skinning: true,\r\n            };\r\n            const newMaterial = createNewMaterial(materialType, materialParams);\r\n            newMaterial.name = material.name;\r\n\r\n            if (texturePath && material.map) {\r\n                material.map.dispose();\r\n            }\r\n            material.dispose();\r\n\r\n            child.material = newMaterial;\r\n        }\r\n    });\r\n};\r\n\r\nconst createOutlineMaterial = ({ size, color, opacity }) => {\r\n    const newMaterial = new THREE.MeshToonMaterial({\r\n        color,\r\n        opacity,\r\n        side: THREE.BackSide,\r\n        transparent: true,\r\n        skinning: true,\r\n    });\r\n    newMaterial.onBeforeCompile = shader => {\r\n        const token = \"#include <begin_vertex>\";\r\n        const customTransform = `\r\n            vec3 transformed = position + objectNormal*${size * 0.0005};\r\n        `;\r\n        shader.vertexShader = shader.vertexShader.replace(\r\n            token,\r\n            customTransform\r\n        );\r\n    };\r\n    return newMaterial;\r\n};\r\n\r\n// replace material of an object\r\nconst replaceMaterial = (object, newMaterial) => {\r\n    // dispose old material\r\n    callbackOnPotentialArray(object.material, obj => {\r\n        // obj.map?.dispose?.()\r\n        if (obj.map) obj.map.dispose();\r\n        obj.dispose();\r\n    });\r\n    // apply new material\r\n    if (Array.isArray(object.material)) {\r\n        object.material = new Array(object.material.length).fill(newMaterial);\r\n    } else {\r\n        object.material = newMaterial;\r\n    }\r\n};\r\n\r\n// change opacity of an object\r\nexport const changeOpacity = ({ material }, opacity) => {\r\n    callbackOnPotentialArray(material, obj => {\r\n        obj.opacity = opacity;\r\n    });\r\n};\r\n\r\n// update outline shader to change size\r\nconst updateOutlineShader = (material, size) => {\r\n    // Hacky way to force shader recompilation, needs fixing !!!!!!!!!!!!!!!!!!\r\n    material.fog = !material.fog;\r\n    material.needsUpdate = true;\r\n\r\n    material.onBeforeCompile = shader => {\r\n        const token = \"#include <begin_vertex>\";\r\n        const customTransform = `\r\n                vec3 transformed = position + objectNormal*${size * 0.0005};\r\n            `;\r\n        shader.vertexShader = shader.vertexShader.replace(\r\n            token,\r\n            customTransform\r\n        );\r\n    };\r\n    setTimeout(() => {\r\n        material.fog = !material.fog;\r\n        material.needsUpdate = true;\r\n    }, 100); // Sometimes doesn't work with 0 delay\r\n};\r\n\r\n// change size of outline\r\nexport const changeOutlineSize = ({ material }, size) => {\r\n    if (Array.isArray(material)) {\r\n        const updated = new Set();\r\n        material.forEach(m => {\r\n            if (updated.has(m.uuid)) return;\r\n\r\n            updateOutlineShader(m, size);\r\n            updated.add(m.uuid);\r\n        });\r\n    } else {\r\n        updateOutlineShader(material, size);\r\n    }\r\n};\r\n\r\n// Change color of outline\r\nexport const changeOutlineColor = ({ material }, color) => {\r\n    if (Array.isArray(material)) {\r\n        const updated = new Set();\r\n        material.forEach(m => {\r\n            if (updated.has(m.uuid)) return;\r\n\r\n            m.color = new THREE.Color(color);\r\n            updated.add(m.uuid);\r\n        });\r\n    } else {\r\n        material.color = new THREE.Color(color);\r\n    }\r\n};\r\n\r\n// Add outline to object and return reference to outlines\r\nexport const createOutline = (object, params) => {\r\n    if (!object) return;\r\n    const outlines = []; // return value\r\n    object.traverse(child => {\r\n        if (!child.isMesh) return;\r\n\r\n        const outline = child.clone();\r\n        outline.name = \"outline\";\r\n        outline.visible = params.enable;\r\n\r\n        outlines.push(outline);\r\n        const newMaterial = createOutlineMaterial(params);\r\n        replaceMaterial(outline, newMaterial);\r\n\r\n        if (child.isSkinnedMesh) {\r\n            outline.bind(child.skeleton, child.bindMatrix);\r\n        }\r\n        child.parent.add(outline);\r\n    });\r\n    return outlines;\r\n};\r\n\r\nconst applyOffset = part => ({ target, offset }) => {\r\n    target.traverse(child => {\r\n        if (child.name !== \"mBodyAll\" || child.geometry.groups.length !== 3)\r\n            return;\r\n\r\n        const targetGroup = child.geometry.groups.find(\r\n            group => child.material[group.materialIndex].name === `mt${part}CH`\r\n        );\r\n        if (!targetGroup) return;\r\n\r\n        const { start, count } = targetGroup;\r\n        const end = start + count;\r\n        const uv = child.geometry.attributes.uv;\r\n        for (let i = start; i < end; i++) {\r\n            const u = uv.getX(i) + 0.25 * offset.x;\r\n            const v = uv.getY(i) + 0.25 * offset.y;\r\n            uv.setXY(i, u, v);\r\n        }\r\n        uv.needsUpdate = true;\r\n    });\r\n};\r\n\r\nexport const applyEyeOffset = applyOffset(\"Eye\");\r\nexport const applyMouthOffset = applyOffset(\"Mouth\");\r\nexport const applyBodyOffset = applyOffset(\"BodyAll\");\r\n\r\nexport const applyFaceOffset = input => {\r\n    if (input.offset.x === 0 && input.offset.y === 0) return;\r\n    applyEyeOffset(input);\r\n    applyMouthOffset(input);\r\n};\r\n\r\nconst applyTexture = part => ({\r\n    target,\r\n    materialType = \"Basic\",\r\n    textureId,\r\n}) => {\r\n    const texturePath = getTexturePath(textureId);\r\n    const texture = new THREE.TextureLoader().load(texturePath);\r\n    texture.encoding = THREE.sRGBEncoding;\r\n\r\n    const materialParams = {\r\n        map: texture,\r\n        skinning: true,\r\n    };\r\n    const newMaterial = createNewMaterial(materialType, materialParams);\r\n    target.traverse(child => {\r\n        if (child.name !== \"mBodyAll\" || child.geometry.groups.length !== 3)\r\n            return;\r\n        const targetGroup = child.geometry.groups.find(\r\n            group => child.material[group.materialIndex].name === `mt${part}CH`\r\n        );\r\n        if (!targetGroup) return;\r\n\r\n        const { materialIndex } = targetGroup;\r\n        newMaterial.name = child.material[materialIndex].name;\r\n\r\n        child.material[materialIndex] = newMaterial;\r\n    });\r\n};\r\n\r\nexport const applyEyeTexture = applyTexture(\"Eye\");\r\nexport const applyMouthTexture = applyTexture(\"Mouth\");\r\nexport const applyBodyTexture = applyTexture(\"BodyAll\");\r\n\r\nexport const applyFaceTexture = input => {\r\n    applyEyeTexture(input);\r\n    applyMouthTexture(input);\r\n};\r\n\r\n// Chain Code is invalid if starts with the character \"+\"\r\nexport const analyzeChainCode = code => {\r\n    if (!code) return [\"\", \"\"];\r\n    const aniCodes = code.split(\">\");\r\n    const nAni = aniCodes.length;\r\n    const fileList = [];\r\n    const animationList = [];\r\n    for (let i = 0; i < nAni; i++) {\r\n        let timeScale = 1,\r\n            repetitions = 1,\r\n            fileIdx = null,\r\n            aniName = null,\r\n            fileName = null,\r\n            details,\r\n            currentAni = {};\r\n        const currentParts = aniCodes[i].split(\"+\");\r\n        const fromModelFile = currentParts.length === 1;\r\n        if (fromModelFile) {\r\n            details = currentParts[0];\r\n        } else {\r\n            [fileName, details] = currentParts;\r\n            fileIdx = fileList.length - 1;\r\n        }\r\n        if (fileName) {\r\n            fileIdx = fileList.length;\r\n            fileList.push(fileName);\r\n        }\r\n        if (details.includes(\"&\")) {\r\n            const [name, ...settings] = details.split(\"&\");\r\n            aniName = name;\r\n            for (let setting of settings) {\r\n                const [key, value] = setting.split(\"=\");\r\n                if (key === \"ts\") {\r\n                    timeScale = parseFloat(value);\r\n                }\r\n                if (key === \"r\") {\r\n                    repetitions = value === \"inf\" ? Infinity : parseInt(value);\r\n                }\r\n            }\r\n        } else {\r\n            aniName = details;\r\n        }\r\n        currentAni = {\r\n            fileIdx,\r\n            aniName,\r\n            timeScale,\r\n            repetitions,\r\n        };\r\n        animationList.push(currentAni);\r\n    }\r\n    return [fileList, animationList];\r\n};\r\n\r\nexport const chainCodeToList = (code, name) => {\r\n    const [fileList, animationList] = analyzeChainCode(code);\r\n    const length = animationList.length;\r\n    const output = animationList.map((ani, i) => {\r\n        const { fileIdx, aniName, timeScale, repetitions } = ani;\r\n        const partName = name.concat(length > 1 ? `#${i + 1}` : \"\");\r\n        return {\r\n            name: partName,\r\n            fileName: fileList[fileIdx],\r\n            aniName,\r\n            timeScale,\r\n            repetitions,\r\n            id: uuid(),\r\n        };\r\n    });\r\n    return output;\r\n};\r\n","import { defaultSettings } from \"../consts\";\r\n\r\nexport const settingsReducer = (state, action) => {\r\n    const { type, key, subkey, value } = action;\r\n    switch (type) {\r\n        case \"toggle\":\r\n            let currentValue;\r\n            if (subkey) {\r\n                currentValue = state[key][subkey][value];\r\n                return {\r\n                    ...state,\r\n                    [key]: {\r\n                        ...state[key],\r\n                        [subkey]: {\r\n                            ...state[key][subkey],\r\n                            [value]: !currentValue,\r\n                        },\r\n                    },\r\n                };\r\n            }\r\n            currentValue = state[key][value];\r\n            return {\r\n                ...state,\r\n                [key]: { ...state[key], [value]: !currentValue },\r\n            };\r\n        case \"reset\":\r\n            // reset values\r\n            // value = array of keys in settings[key] or settings[key][subkey] to be reset, null -> reset all\r\n            const defaultSetting = subkey\r\n                ? defaultSettings[key][subkey]\r\n                : defaultSettings[key];\r\n            // no value -> reset all\r\n            if (!value)\r\n                return subkey\r\n                    ? {\r\n                          ...state,\r\n                          [key]: {\r\n                              ...state[key],\r\n                              [subkey]: {\r\n                                  ...state[key][subkey],\r\n                                  ...defaultSetting,\r\n                              },\r\n                          },\r\n                      }\r\n                    : {\r\n                          ...state,\r\n                          [key]: { ...state[key], ...defaultSetting },\r\n                      };\r\n            // if value is defined, reset only the specified keys\r\n            const update = {};\r\n            value.forEach(v => {\r\n                update[v] = defaultSetting[v];\r\n            });\r\n            return subkey\r\n                ? {\r\n                      ...state,\r\n                      [key]: {\r\n                          ...state[key],\r\n                          [subkey]: { ...state[key][subkey], ...update },\r\n                      },\r\n                  }\r\n                : { ...state, [key]: { ...state[key], ...update } };\r\n        case \"load\":\r\n            // load preset values\r\n            return;\r\n        case \"update\":\r\n            // update state[key] or state[key][subkey] with values from value\r\n            return subkey\r\n                ? {\r\n                      ...state,\r\n                      [key]: {\r\n                          ...state[key],\r\n                          [subkey]: { ...state[key][subkey], ...value },\r\n                      },\r\n                  }\r\n                : { ...state, [key]: { ...state[key], ...value } };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { createContext, useReducer } from \"react\";\r\nimport { settingsReducer } from \"../reducer/settingsReducer\";\r\nimport { defaultSettings } from \"../consts\";\r\nimport { chainCodeToList } from \"../viewerHelpers\";\r\n\r\nexport const SettingsContext = createContext();\r\nexport const DispatchContext = createContext();\r\n\r\nconst initAniChain = chainCodeToList(defaultSettings.animation.code, \"init\");\r\n\r\nexport const initSettings = {\r\n    model: { ...defaultSettings.model },\r\n    materialParams: { ...defaultSettings.materialParams },\r\n    scene: { ...defaultSettings.scene },\r\n    animation: { ...defaultSettings.animation },\r\n    app: { ...defaultSettings.app },\r\n    outline: { ...defaultSettings.outline },\r\n    capture: { ...defaultSettings.capture },\r\n    chainMaker: { chain: initAniChain },\r\n};\r\n\r\nexport function SettingsProvider(props) {\r\n    const [settings, dispatch] = useReducer(settingsReducer, initSettings);\r\n\r\n    return (\r\n        <SettingsContext.Provider value={settings}>\r\n            <DispatchContext.Provider value={dispatch}>\r\n                {props.children}\r\n            </DispatchContext.Provider>\r\n        </SettingsContext.Provider>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\n\r\nimport { initSettings } from \"./context/SettingsContext\";\r\nimport {\r\n    initKey,\r\n    WEAPON_CODE,\r\n    GENDER_CODE,\r\n    COMBO_LENGTH,\r\n    FS_LENGTH,\r\n} from \"./consts\";\r\n\r\nimport { chainCodeToList } from \"./viewerHelpers\";\r\n\r\nexport const isBlade = code => code.startsWith(\"w302\");\r\n\r\nexport const isSheath = code => isBlade(code) && code.endsWith(\"02\");\r\n\r\n// if object is an array, apply callback on each element of object, otherwise, apply call back on the object\r\nexport const callbackOnPotentialArray = (object, callback) => {\r\n    if (Array.isArray(object)) {\r\n        object.forEach(child => callback(child));\r\n        return;\r\n    }\r\n    callback(object);\r\n};\r\n\r\nexport const setInitialSettings = params => {\r\n    if (params.length === 0) return;\r\n    let faceTextureDefined = false;\r\n    params.forEach(param => {\r\n        if (!param) return;\r\n\r\n        const [keycode, ...value] = param.split(\"=\"); // animation code can have \"=\" inside\r\n        // if no value given, skip\r\n        if (!value[0]) return;\r\n\r\n        let setValue = value.length === 1 ? value[0] : value.join(\"=\");\r\n\r\n        switch (keycode) {\r\n            case \"ft\":\r\n                faceTextureDefined = true;\r\n                break;\r\n            case \"cc\":\r\n                // initialize chain maker chain\r\n                const chainList = chainCodeToList(setValue, \"Animation\");\r\n                initSettings[\"chainMaker\"][\"chain\"] = chainList;\r\n                break;\r\n            case \"bg\":\r\n                if (setValue !== \"transparent\") {\r\n                    setValue = `#${setValue}`;\r\n                }\r\n                break;\r\n            case \"cam\": // parameters in form x, y, z\r\n                setValue = setValue.split(\",\").map(n => parseFloat(n));\r\n                break;\r\n            default:\r\n        }\r\n        const { group, key } = initKey[keycode];\r\n\r\n        const isBooleanValue = setValue === \"true\" || setValue === \"false\";\r\n\r\n        initSettings[group][key] = isBooleanValue\r\n            ? Boolean(setValue === \"true\")\r\n            : setValue;\r\n    });\r\n\r\n    initSettings[\"model\"][\"texture\"] = initSettings[\"model\"][\"id\"];\r\n\r\n    if (!faceTextureDefined) {\r\n        initSettings[\"model\"][\"faceTexture\"] = initSettings[\"model\"][\"id\"];\r\n    }\r\n};\r\n\r\nexport const generateChainCode = chain => {\r\n    const defaultMod = {\r\n        timeScale: 1,\r\n        repetitions: 1,\r\n    };\r\n    const modList = {\r\n        ts: \"timeScale\",\r\n        r: \"repetitions\",\r\n    };\r\n    const length = chain.length;\r\n    let output = \"\";\r\n    chain.forEach((ani, i) => {\r\n        const { fileName, aniName } = ani;\r\n        if (fileName) {\r\n            if (i === 0) {\r\n                output = output.concat(fileName);\r\n            } else {\r\n                output = output.concat(\r\n                    fileName !== chain[i - 1].fileName ? fileName : \"\"\r\n                );\r\n            }\r\n            output = output.concat(\"+\");\r\n        }\r\n        output = output.concat(aniName);\r\n        // Add modifiers\r\n        Object.keys(modList).forEach(modKey => {\r\n            const key = modList[modKey];\r\n            if (ani[key] !== defaultMod[key]) {\r\n                output = output.concat(`&${modKey}=${ani[key]}`);\r\n            }\r\n        });\r\n        if (i < length - 1) {\r\n            output = output.concat(\">\");\r\n        }\r\n    });\r\n    return output;\r\n};\r\n\r\nexport const collectFilter = toggleState => {\r\n    let collected = {};\r\n    Object.keys(toggleState).forEach(key => {\r\n        let tmp = [];\r\n        Object.keys(toggleState[key]).forEach(k => {\r\n            if (toggleState[key][k]) {\r\n                tmp.push(k);\r\n            }\r\n        });\r\n        collected[key] = tmp;\r\n    });\r\n    return collected;\r\n};\r\n\r\nexport const multiCondFilter = (input, filters) => {\r\n    const filterKeys = Object.keys(filters);\r\n\r\n    return input.filter(el => {\r\n        return filterKeys.every(key => {\r\n            if (!filters[key].length) return true;\r\n            return filters[key].includes(el[key]);\r\n        });\r\n    });\r\n};\r\n\r\nexport const complementaryColor = color => {\r\n    const hexColor = color.replace(\"#\", \"0x\");\r\n\r\n    return `#${(\"000000\" + (\"0xffffff\" ^ hexColor).toString(16)).slice(-6)}`;\r\n};\r\n\r\nexport const aniButtonsFromObject = (object, handleSelect, groupName) => {\r\n    if (!object) return null;\r\n    const style = { maxWidth: \"13.5rem\" };\r\n    return Object.keys(object).map(key => (\r\n        <Button\r\n            variant=\"contained\"\r\n            key={key}\r\n            data-value={object[key]}\r\n            data-name={`${groupName ? `${groupName} ` : \"\"}${key}`}\r\n            onClick={handleSelect}\r\n            style={style}\r\n        >\r\n            {key}\r\n        </Button>\r\n    ));\r\n};\r\n\r\n// Animation chain code generator\r\nexport const getStandbyCode = (weapon, gender) =>\r\n    `LOB_${WEAPON_CODE[weapon]}+${WEAPON_CODE[weapon]}_ONT_${GENDER_CODE[gender]}`;\r\n\r\nexport const getVictoryCode = weapon =>\r\n    `WIN_${WEAPON_CODE[weapon]}+${WEAPON_CODE[weapon]}_WIN_01>+${WEAPON_CODE[weapon]}_WIN_02`;\r\n\r\nexport const getDashAtkCode = weapon => `DAS+${WEAPON_CODE[weapon]}_DAS_02`;\r\n\r\nexport const getRollCode = weapon => `ROL+${WEAPON_CODE[weapon]}_ROL_01`;\r\n\r\nexport const getComboCode = weapon => {\r\n    const comboLength = COMBO_LENGTH[weapon];\r\n    const code = WEAPON_CODE[weapon];\r\n    let result = `CMB_${code}`;\r\n    // Weapon combo has 5 animations each\r\n    for (let i = 1; i <= comboLength; i++) {\r\n        result = result.concat(`+${code}_CMB_0${i}>`);\r\n    }\r\n    result = result.slice(0, -1); // Remove last '>' character\r\n    return result;\r\n};\r\n\r\n// Force Strike chain code\r\nexport const getFSCode = weapon => {\r\n    const fsAniLength = FS_LENGTH[weapon];\r\n    const code = WEAPON_CODE[weapon];\r\n    let result = `FS_${code}`;\r\n    // Weapon combo has 5 animations each\r\n    for (let i = 1; i <= fsAniLength; i++) {\r\n        result = result.concat(`+${code}_CHR_0${i}>`);\r\n    }\r\n    result = result.slice(0, -1); // Remove last '>' character\r\n    return result;\r\n};\r\n\r\n// Join Lobby chain code\r\nexport const getLobbyCode = (weapon, gender) => {\r\n    const code = WEAPON_CODE[weapon];\r\n    if (gender === \"Male\")\r\n        return `LOB_${code}+${code}_ONT_05&ts=-0.5>+${code}_ONT_02>+${code}_ONT_07>+${code}_ONT_08>+${code}_ONT_21`;\r\n    // Female\r\n    return `LOB_${code}+${code}_ONT_06&ts=-0.5>+${code}_ONT_04>+${code}_ONT_09>+${code}_ONT_10>+${code}_ONT_23`;\r\n};\r\n","import { PureComponent } from \"react\";\r\n\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nimport { fbxSource } from \"./App\";\r\nimport { CAM_PARAMS, faceOffsets } from \"./consts\";\r\nimport faceOffsetFixList from \"./data/face_offset\";\r\nimport {\r\n    getModelPath,\r\n    analyzeWeaponCode,\r\n    analyzeChainCode,\r\n    loadModel,\r\n    applyFaceTexture,\r\n    applyFaceOffset,\r\n    disposeItem,\r\n    createOutline,\r\n    changeMaterial,\r\n    changeOpacity,\r\n    changeOutlineSize,\r\n    changeOutlineColor,\r\n} from \"./viewerHelpers\";\r\n\r\nclass ModelViewer extends PureComponent {\r\n    animate = () => {\r\n        this.frameId = requestAnimationFrame(this.animate);\r\n        const dt = this.clock.getDelta();\r\n        // Rotate the floor\r\n        this.floor.rotateY((this.props.rotateSpeed * dt * Math.PI) / 2);\r\n\r\n        if (this.mixers.length > 0) {\r\n            this.mixers.forEach(mixer => mixer.update(dt));\r\n        }\r\n        this.renderer.render(this.scene, this.camera);\r\n    };\r\n\r\n    // set up initial scene\r\n    init = () => {\r\n        this.models = {};\r\n        this.modelInfo = {\r\n            main: this.props.model.id,\r\n            weaponLeft: analyzeWeaponCode(this.props.model.weaponLeft),\r\n            weaponRight: analyzeWeaponCode(this.props.model.weaponRight),\r\n        };\r\n\r\n        // save reference and specifications for outlines\r\n        this.outlines = {};\r\n        this.outlineParams = { ...this.props.outline };\r\n\r\n        // viewport\r\n        this.viewport = this.props.viewport || {\r\n            width: window.innerWidth,\r\n            height: window.innerHeight,\r\n        };\r\n\r\n        // mixers\r\n        this.mixers = [];\r\n\r\n        // clock\r\n        this.clock = new THREE.Clock();\r\n\r\n        // Scene\r\n        this.scene = new THREE.Scene();\r\n        this.scene.background =\r\n            this.props.bgColor !== \"transparent\"\r\n                ? new THREE.Color(this.props.bgColor)\r\n                : null;\r\n\r\n        // Create an invisible floor to add the models on (for auto rotate)\r\n        const floorGeometry = new THREE.PlaneBufferGeometry(0.1, 0.1);\r\n        floorGeometry.rotateX(Math.PI / 2);\r\n        const floorMaterial = new THREE.MeshBasicMaterial();\r\n        floorMaterial.visible = false;\r\n        this.floor = new THREE.Mesh(floorGeometry, floorMaterial);\r\n        this.scene.add(this.floor);\r\n\r\n        // Camera\r\n        this.camera = new THREE.PerspectiveCamera(\r\n            CAM_PARAMS.angle,\r\n            this.viewport.width / this.viewport.height,\r\n            CAM_PARAMS.near,\r\n            CAM_PARAMS.far\r\n        );\r\n        this.cameraPosition = this.props.cameraPosition || [2, 0, 10];\r\n        this.camera.position.set(...this.cameraPosition);\r\n        this.camera.updateProjectionMatrix();\r\n\r\n        // Controls\r\n        this.controls = new OrbitControls(this.camera, this.mount);\r\n        this.controlsPosition = this.props.controlsPosition || [0, 0, 0];\r\n        this.controls.target.set(...this.controlsPosition);\r\n        this.controls.update();\r\n\r\n        // Light\r\n        let light = new THREE.DirectionalLight(0xffffff);\r\n        light.position.set(0, 200, 100);\r\n        light.intensity = 0.5;\r\n        this.scene.add(light);\r\n        light = new THREE.AmbientLight(0xaaaaaa);\r\n        this.scene.add(light);\r\n\r\n        // Renderer\r\n        this.rendererAA = new THREE.WebGLRenderer({\r\n            antialias: true,\r\n            alpha: true,\r\n        });\r\n        this.rendererAA.outputEncoding = THREE.sRGBEncoding;\r\n\r\n        this.rendererNoAA = new THREE.WebGLRenderer({\r\n            antialias: false,\r\n            alpha: true,\r\n        });\r\n        this.rendererNoAA.outputEncoding = THREE.sRGBEncoding;\r\n\r\n        this.renderer = this.props.antiAliasing\r\n            ? this.rendererAA\r\n            : this.rendererNoAA;\r\n        this.canvas = this.renderer.domElement;\r\n        this.renderer.setSize(this.viewport.width, this.viewport.height);\r\n        this.mount.appendChild(this.canvas);\r\n\r\n        this.animate();\r\n    };\r\n\r\n    playNextAni = () => {\r\n        // if capturing and finished recording current chain, stop capturing and set capture flag back to false\r\n        if (this.props.capture.enable && this._aniIdx === this.nAni - 1) {\r\n            this.mediaRecorder.stop();\r\n            this.props.toggleCapture();\r\n        }\r\n        const newIdx = (this._aniIdx + 1) % this.nAni;\r\n        this.aniIdx = newIdx;\r\n    };\r\n\r\n    // add Animation Chain\r\n    addAnimationChain = async (object, animationChain, timeScale) => {\r\n        if (!animationChain) return;\r\n\r\n        const [fileList, animationList] = analyzeChainCode(animationChain);\r\n        this.nAni = animationList.length;\r\n\r\n        this.props.setIsLoading(true);\r\n\r\n        object.mixer = new THREE.AnimationMixer(object);\r\n        this.mixers.push(object.mixer);\r\n\r\n        this._aniIdx = 0;\r\n        object.mixer.timeScale = timeScale; // Global timeScale\r\n        object.mixer.addEventListener(\"finished\", this.playNextAni);\r\n        this.aniSettings = animationList.map(ani => ({\r\n            timeScale: ani.timeScale,\r\n            repetitions: ani.repetitions,\r\n        }));\r\n        const batchLoader = fileList.map(file => {\r\n            const path = `${fbxSource}/fbx/${file}.fbx`;\r\n            return loadModel(path);\r\n        });\r\n\r\n        const animations = [];\r\n        // load all animation files\r\n        const animFiles = await Promise.all(batchLoader);\r\n\r\n        animationList.forEach(anim => {\r\n            const { fileIdx, aniName } = anim;\r\n            const animation = aniName\r\n                ? animFiles[fileIdx].animations.find(\r\n                      ani => ani.name === aniName\r\n                  )\r\n                : animFiles[fileIdx].animations[0];\r\n            animations.push(animation);\r\n        });\r\n        this.animations = animations;\r\n        // play first animation\r\n        this.aniIdx = 0;\r\n        this.props.setIsLoading(false);\r\n    };\r\n\r\n    // this.aniIdx = n => play animation with index n\r\n    set aniIdx(newIdx) {\r\n        this._aniIdx = newIdx;\r\n        const anim = this.animations[newIdx];\r\n        const mixer = this.models.main.mixer;\r\n        mixer.stopAllAction();\r\n        const action = mixer.clipAction(anim);\r\n        const { timeScale, repetitions } = this.aniSettings[newIdx];\r\n\r\n        action.setLoop(THREE.LoopRepeat, repetitions);\r\n        action.clampWhenFinished = true;\r\n        action.timeScale = timeScale;\r\n        action.time = 0;\r\n        action.play();\r\n    }\r\n\r\n    // Promise to load all models at initialize\r\n    initLoad = () => {\r\n        const modelId = this.modelInfo.main;\r\n        const modelPath = getModelPath(modelId);\r\n        const loadMain = loadModel(modelPath);\r\n\r\n        const weaponRight = this.props.model.weaponRight\r\n            ? this.modelInfo.weaponRight.modelPath\r\n            : \"\";\r\n        const loadWeaponR = loadModel(weaponRight);\r\n\r\n        const weaponLeft = this.props.model.weaponLeft\r\n            ? this.modelInfo.weaponLeft.modelPath\r\n            : \"\";\r\n        const loadWeaponL = loadModel(weaponLeft);\r\n\r\n        return Promise.all([loadMain, loadWeaponR, loadWeaponL]);\r\n    };\r\n\r\n    attachWeapon = (weapon, side) => {\r\n        const boneName = `jWeapon${side[0]}`;\r\n        this.models.main.traverse(child => {\r\n            if (child.name === boneName && child.children.length === 0) {\r\n                child.add(weapon);\r\n            }\r\n        });\r\n    };\r\n\r\n    detachWeapon = side => {\r\n        const boneName = `jWeapon${side[0]}`;\r\n        this.models.main.traverse(child => {\r\n            if (child.children.length === 1 && child.name === boneName) {\r\n                if (child.children[0].type === \"Group\") {\r\n                    child.remove(this.models[`weapon${side}`]);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    async componentDidMount() {\r\n        this.init();\r\n        this.props.setIsLoading(true);\r\n\r\n        // Load the models\r\n        const [main, weaponRight, weaponLeft] = await this.initLoad();\r\n\r\n        // save references\r\n        this.models = {\r\n            main,\r\n            weaponRight,\r\n            weaponLeft,\r\n        };\r\n        // add outline to main model and save reference\r\n        this.outlines.main = createOutline(main, this.outlineParams);\r\n\r\n        // Save initial position and rotation\r\n        main.initPos = main.position.clone();\r\n        main.initRot = main.rotation.clone();\r\n\r\n        // change the material\r\n        const { materialType } = this.props.model;\r\n        changeMaterial({ target: main, materialType });\r\n\r\n        // process weapons\r\n        [\"Right\", \"Left\"].forEach(side => {\r\n            const key = `weapon${side}`;\r\n            // if weapon not specified, return\r\n            if (!this.props.model[key]) return;\r\n            // add weapon\r\n            const weaponInfo = this.modelInfo[key];\r\n            const weaponModel = this.models[key];\r\n            const { texturePath } = weaponInfo;\r\n            changeMaterial({\r\n                target: weaponModel,\r\n                materialType,\r\n                texturePath,\r\n            });\r\n            // flip weapon if needed\r\n            weaponModel.rotation.y += weaponInfo.flipped ? Math.PI : 0;\r\n            // add outline to weapon and save reference\r\n            this.outlines[key] = createOutline(weaponModel, this.outlineParams);\r\n            // attach weapon to main body\r\n            this.attachWeapon(this.models[`weapon${side}`], side);\r\n        });\r\n\r\n        // Apply face settings\r\n        const { texture, faceTexture } = this.props.model;\r\n        const faceOverride = texture !== faceTexture;\r\n        const faceNumber = `face${this.props.model.face}`;\r\n        const { x: faceOffsetX, y: faceOffsetY } = faceOffsets[faceNumber];\r\n        if (faceOffsetX !== 0 || faceOffsetY !== 0 || faceOverride) {\r\n            let offsetFix = { x: 0, y: 0 };\r\n            if (faceOverride) {\r\n                applyFaceTexture({\r\n                    target: main,\r\n                    materialType,\r\n                    textureId: faceTexture,\r\n                });\r\n\r\n                const offsetFixBase = faceOffsetFixList[texture] || {\r\n                    x: 0,\r\n                    y: 0,\r\n                };\r\n                const offsetFixOverride = faceOffsetFixList[faceTexture] || {\r\n                    x: 0,\r\n                    y: 0,\r\n                };\r\n                offsetFix = {\r\n                    x: offsetFixOverride.x - offsetFixBase.x,\r\n                    y: offsetFixOverride.y - offsetFixBase.y,\r\n                };\r\n            }\r\n            const offset = {\r\n                x: faceOffsetX + offsetFix.x,\r\n                y: faceOffsetY + offsetFix.y,\r\n            };\r\n            applyFaceOffset({ target: main, offset });\r\n        }\r\n\r\n        // Add character to scene\r\n        this.floor.add(main);\r\n        // main model loading finished\r\n        this.props.setIsLoading(false);\r\n\r\n        // Add animation\r\n        const { code: aniCode, timeScale } = this.props.animation;\r\n        this.addAnimationChain(main, aniCode, timeScale);\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        // console.log(\"component did update\");\r\n\r\n        // // print updated props to console\r\n        // Object.keys(prevProps).forEach(key => {\r\n        //     const oldValue = prevProps[key];\r\n        //     const currentValue = this.props[key];\r\n        //     const subkeys = Object.keys(oldValue);\r\n        //     if (subkeys.length === 0 || typeof oldValue === \"string\") {\r\n        //         if (oldValue !== currentValue) {\r\n        //             console.log(\r\n        //                 `${key}: ${JSON.stringify(\r\n        //                     oldValue\r\n        //                 )} to ${JSON.stringify(currentValue)}`\r\n        //             );\r\n        //         }\r\n        //     } else {\r\n        //         subkeys.forEach(subkey => {\r\n        //             if (oldValue[subkey] !== currentValue[subkey]) {\r\n        //                 console.log(\r\n        //                     `${key}.${subkey}: ${JSON.stringify(\r\n        //                         oldValue[subkey]\r\n        //                     )} to ${JSON.stringify(currentValue[subkey])}`\r\n        //                 );\r\n        //             }\r\n        //         });\r\n        //     }\r\n        // });\r\n\r\n        // Update viewport\r\n        const viewport = this.props.viewport;\r\n        if (\r\n            prevProps.viewport.width !== viewport.width ||\r\n            prevProps.viewport.height !== viewport.height\r\n        ) {\r\n            const { width, height } = viewport;\r\n            this.renderer.setSize(width, height);\r\n            this.camera.aspect = width / height;\r\n            this.camera.updateProjectionMatrix();\r\n        }\r\n\r\n        // Capture\r\n        if (this.props.capture.enable && !prevProps.capture.enable) {\r\n            this.chunks = [];\r\n            this.videoStream = this.canvas.captureStream(30);\r\n            if (!this.mediaRecorder) {\r\n                this.mediaRecorder = new MediaRecorder(this.videoStream, {\r\n                    mimeType: this.props.capture.codec,\r\n                });\r\n                this.mediaRecorder.ondataavailable = event =>\r\n                    this.chunks.push(event.data);\r\n                this.mediaRecorder.onstop = () => {\r\n                    this.props.setIsLoading(false);\r\n                    const superBuffer = new Blob(this.chunks, {\r\n                        type: \"video/webm\",\r\n                    });\r\n                    var url = URL.createObjectURL(superBuffer);\r\n                    var a = document.createElement(\"a\");\r\n                    document.body.appendChild(a);\r\n                    a.style = \"display: none\";\r\n                    a.href = url;\r\n                    a.download = \"animation.webm\";\r\n                    a.click();\r\n                    window.URL.revokeObjectURL(url);\r\n                };\r\n            }\r\n            // disable user input\r\n            this.props.setIsLoading(true);\r\n            // play first animation and start capturing\r\n            this.aniIdx = 0;\r\n            this.mediaRecorder.start();\r\n        }\r\n\r\n        // update anti aliasing setting\r\n        if (prevProps.antiAliasing !== this.props.antiAliasing) {\r\n            // get current viewport size\r\n            const currentSize = new THREE.Vector2();\r\n            this.renderer.getSize(currentSize);\r\n            // switch renderer\r\n            this.renderer = this.props.antiAliasing\r\n                ? this.rendererAA\r\n                : this.rendererNoAA;\r\n            this.renderer.setSize(currentSize.x, currentSize.y);\r\n            // remove old canvas\r\n            this.mount.removeChild(this.canvas);\r\n            // Add new canvas\r\n            this.canvas = this.renderer.domElement;\r\n            this.mount.appendChild(this.canvas);\r\n        }\r\n\r\n        // Update main model\r\n        const { texture, faceTexture } = this.props.model;\r\n        const faceNumber = `face${this.props.model.face}`;\r\n        const faceOffset = faceOffsets[faceNumber];\r\n        if (prevProps.model.id !== this.props.model.id) {\r\n            this.props.setIsLoading(true);\r\n            const modelPath = getModelPath(this.props.model.id);\r\n            // load new model\r\n            const model = await loadModel(modelPath);\r\n            const { materialType } = this.props.model;\r\n            changeMaterial({ target: model, materialType });\r\n            // add outline\r\n            this.outlines.main = createOutline(model, this.outlineParams);\r\n\r\n            // detach weapons from old model if they exist\r\n            [\"Right\", \"Left\"].forEach(side => {\r\n                const key = `weapon${side}`;\r\n                if (prevProps.model[key]) {\r\n                    this.detachWeapon(side);\r\n                }\r\n            });\r\n            // remove and dispose old model\r\n            this.floor.remove(this.models.main);\r\n            disposeItem(this.models.main);\r\n            // add reference\r\n            this.models.main = model;\r\n\r\n            // Save initial position and rotation\r\n            model.initPos = model.position.clone();\r\n            model.initRot = model.rotation.clone();\r\n\r\n            // Add new model to scene\r\n            this.floor.add(model);\r\n\r\n            // Apply face to new model\r\n            if (texture !== faceTexture) {\r\n                applyFaceTexture({\r\n                    target: model,\r\n                    materialType,\r\n                    textureId: faceTexture,\r\n                });\r\n            }\r\n\r\n            if (faceOffset.x !== 0 || faceOffset.y !== 0) {\r\n                applyFaceOffset({ target: model, offset: faceOffset });\r\n            }\r\n\r\n            // Attach weapons to new model\r\n            [\"Right\", \"Left\"].forEach(side => {\r\n                const key = `weapon${side}`;\r\n                const weaponModel = this.models[key];\r\n                // if no weapon, return\r\n                if (!weaponModel) return;\r\n\r\n                this.attachWeapon(weaponModel, side);\r\n                // add outline if not exist\r\n                if (!this.outlines[key]) {\r\n                    this.outlines[key] = createOutline(\r\n                        weaponModel,\r\n                        this.outlineParams\r\n                    );\r\n                }\r\n            });\r\n\r\n            // Add animation to new model\r\n            const { code: aniCode, timeScale } = this.props.animation;\r\n            this.addAnimationChain(model, aniCode, timeScale);\r\n\r\n            this.props.setIsLoading(false);\r\n        } else {\r\n            // Update face when main model not changed\r\n            const faceTextureChanged =\r\n                prevProps.model.faceTexture !== faceTexture;\r\n            const faceChanged = prevProps.model.face !== this.props.model.face;\r\n            if (faceChanged || faceTextureChanged) {\r\n                const oldFaceNumber = `face${prevProps.model.face}`;\r\n                const faceNumber = `face${this.props.model.face}`;\r\n\r\n                const currentOffset = faceOffsets[faceNumber];\r\n                const oldOffset = faceOffsets[oldFaceNumber];\r\n\r\n                const dx = currentOffset.x - oldOffset.x;\r\n                const dy = currentOffset.y - oldOffset.y;\r\n\r\n                let faceOffsetFix = { x: 0, y: 0 };\r\n                if (faceTextureChanged) {\r\n                    const { materialType } = this.props.model;\r\n                    applyFaceTexture({\r\n                        target: this.models.main,\r\n                        materialType,\r\n                        textureId: faceTexture,\r\n                    });\r\n                    const oldFaceOffsetFix = faceOffsetFixList[\r\n                        prevProps.model.faceTexture\r\n                    ] || { x: 0, y: 0 };\r\n\r\n                    const currentFaceOffsetFix = faceOffsetFixList[\r\n                        faceTexture\r\n                    ] || { x: 0, y: 0 };\r\n\r\n                    faceOffsetFix = {\r\n                        x: currentFaceOffsetFix.x - oldFaceOffsetFix.x,\r\n                        y: currentFaceOffsetFix.y - oldFaceOffsetFix.y,\r\n                    };\r\n                }\r\n                const offset = {\r\n                    x: dx + faceOffsetFix.x,\r\n                    y: dy + faceOffsetFix.y,\r\n                };\r\n\r\n                applyFaceOffset({ target: this.models.main, offset });\r\n            }\r\n        }\r\n\r\n        // Update Weapons\r\n        [\"Right\", \"Left\"].forEach(async side => {\r\n            const key = `weapon${side}`;\r\n            // if not changed, return\r\n            if (prevProps.model[key] === this.props.model[key]) return;\r\n            // Update weapon\r\n            this.detachWeapon(side); // remove old weapon\r\n            disposeItem(this.models[key]); // dispose old weapon\r\n            // if current weapon is empty (weapon removed)\r\n            if (!this.props.model[key]) {\r\n                this.models[key] = null;\r\n                this.modelInfo[key] = \"\";\r\n                // remove reference to outline\r\n                this.outlines[key] = null;\r\n                return;\r\n            }\r\n            // load new weapon\r\n            this.props.setIsLoading(true);\r\n\r\n            this.modelInfo[key] = analyzeWeaponCode(this.props.model[key]);\r\n            const { modelPath, texturePath } = this.modelInfo[key];\r\n\r\n            // load new model\r\n            const model = await loadModel(modelPath);\r\n            this.models[key] = model;\r\n\r\n            // process new weapon\r\n            const { materialType } = this.props.model;\r\n            changeMaterial({\r\n                target: this.models[key],\r\n                materialType,\r\n                texturePath,\r\n            });\r\n\r\n            if (this.modelInfo[key].flipped) {\r\n                this.models[key].rotation.y = Math.PI;\r\n            }\r\n            // add outline to new weapon\r\n            this.outlines[key] = createOutline(model, this.outlineParams);\r\n            // attach new weapon to main model\r\n            this.attachWeapon(model, side);\r\n\r\n            this.props.setIsLoading(false);\r\n        });\r\n\r\n        // Update material\r\n        if (prevProps.model.materialType !== this.props.model.materialType) {\r\n            const { materialType } = this.props.model;\r\n            changeMaterial({ target: this.models.main, materialType });\r\n        }\r\n\r\n        // Update animation\r\n        const { code: aniCode, timeScale } = this.props.animation;\r\n        if (prevProps.animation.code !== aniCode) {\r\n            if (prevProps.animation.code) {\r\n                this.models.main.mixer.stopAllAction();\r\n\r\n                // Reset position and rotation to initial value\r\n                const { initPos, initRot } = this.models.main;\r\n                this.models.main.position.copy(initPos);\r\n                this.models.main.rotation.copy(initRot);\r\n\r\n                this.mixers = [];\r\n                this.animations = [];\r\n            }\r\n            // Add new animation\r\n            this.addAnimationChain(this.models.main, aniCode, timeScale);\r\n        }\r\n        //Update timeScale\r\n        else if (prevProps.animation.timeScale !== timeScale) {\r\n            if (this.mixers.length > 0) {\r\n                this.mixers.forEach(mixer => (mixer.timeScale = timeScale));\r\n            }\r\n        }\r\n\r\n        // Update background color\r\n        if (prevProps.bgColor !== this.props.bgColor) {\r\n            this.scene.background =\r\n                this.props.bgColor !== \"transparent\"\r\n                    ? new THREE.Color(this.props.bgColor)\r\n                    : null;\r\n        }\r\n\r\n        // Update outline\r\n        const {\r\n            enable: showOutline,\r\n            color: outlineColor,\r\n            size: outlineSize,\r\n            opacity: outlineOpacity,\r\n        } = this.props.outline;\r\n        // Update outline visibility\r\n        if (prevProps.outline.enable !== showOutline) {\r\n            this.outlineParams.enable = showOutline;\r\n\r\n            Object.keys(this.outlines).forEach(key => {\r\n                if (!this.outlines[key]) return;\r\n                this.outlines[key].forEach(\r\n                    outline => (outline.visible = showOutline)\r\n                );\r\n            });\r\n        }\r\n\r\n        // Update outline size\r\n        if (prevProps.outline.size !== outlineSize) {\r\n            this.outlineParams.size = outlineSize;\r\n\r\n            Object.keys(this.outlines).forEach(key => {\r\n                if (!this.outlines[key]) return;\r\n                this.outlines[key].forEach(outline =>\r\n                    changeOutlineSize(outline, outlineSize)\r\n                );\r\n            });\r\n        }\r\n\r\n        // Update outline opacity\r\n        if (prevProps.outline.opacity !== outlineOpacity) {\r\n            this.outlineParams.opacity = outlineOpacity;\r\n\r\n            Object.keys(this.outlines).forEach(key => {\r\n                if (!this.outlines[key]) return;\r\n                this.outlines[key].forEach(outline =>\r\n                    changeOpacity(outline, outlineOpacity)\r\n                );\r\n            });\r\n        }\r\n\r\n        // Update outline color\r\n        if (prevProps.outline.color !== outlineColor) {\r\n            this.outlineParams.color = outlineColor;\r\n            Object.keys(this.outlines).forEach(key => {\r\n                if (!this.outlines[key]) return;\r\n                this.outlines[key].forEach(outline =>\r\n                    changeOutlineColor(outline, outlineColor)\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        cancelAnimationFrame(this.frameId);\r\n        disposeItem(this.scene);\r\n        this.mixers = null;\r\n        this.clock = null;\r\n        this.camera = null;\r\n        this.controls = null;\r\n        this.scene = null;\r\n        this.renderer = null;\r\n        this.rendererAA.renderLists.dispose();\r\n        this.rendererAA.dispose();\r\n        this.rendererAA = null;\r\n        this.rendererNoAA.renderLists.dispose();\r\n        this.rendererNoAA.dispose();\r\n        this.rendererNoAA = null;\r\n    }\r\n    render() {\r\n        return (\r\n            <div\r\n                ref={el => {\r\n                    this.mount = el;\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ModelViewer;\r\n","import { lazy, Suspense, useContext, useCallback } from \"react\";\r\n\r\nimport { SettingsContext, DispatchContext } from \"./context/SettingsContext\";\r\nimport ModelViewer from \"./ModelViewer\";\r\nimport \"./styles/Display.css\";\r\n\r\nimport { cameraPositions, controlsPositions } from \"./consts\";\r\n\r\nconst AniControl = lazy(() => import(\"./AniControl\"));\r\n\r\nfunction Display(props) {\r\n    const { viewport } = props;\r\n\r\n    const settings = useContext(SettingsContext);\r\n    const {\r\n        model: { id: modelId },\r\n        scene: { rotateSpeed, background: bgColor, initCameraPosition },\r\n        app: { showAniControl, antiAliasing },\r\n    } = settings;\r\n\r\n    const dispatch = useContext(DispatchContext);\r\n    const toggleCapture = useCallback(() => {\r\n        const action = {\r\n            type: \"toggle\",\r\n            key: \"capture\",\r\n            value: \"enable\",\r\n        };\r\n        dispatch(action);\r\n    }, [dispatch]);\r\n\r\n    const type = modelId[0];\r\n\r\n    const defaultCameraPosition = cameraPositions[modelId]\r\n        ? cameraPositions[modelId]\r\n        : cameraPositions[type];\r\n\r\n    const cameraPosition = initCameraPosition\r\n        ? initCameraPosition.map((n, i) =>\r\n              isNaN(n) ? defaultCameraPosition[i] : n\r\n          )\r\n        : defaultCameraPosition;\r\n\r\n    const controlsPosition = controlsPositions[modelId]\r\n        ? controlsPositions[modelId]\r\n        : controlsPositions[type];\r\n\r\n    return (\r\n        <div className=\"Display\">\r\n            {showAniControl && (\r\n                <div className=\"Display-AniControl\">\r\n                    <Suspense fallback={null}>\r\n                        <AniControl value={settings.animation.timeScale} />\r\n                    </Suspense>\r\n                </div>\r\n            )}\r\n            <ModelViewer\r\n                setIsLoading={props.setIsLoading}\r\n                capture={settings.capture}\r\n                toggleCapture={toggleCapture}\r\n                viewport={viewport}\r\n                cameraPosition={cameraPosition}\r\n                controlsPosition={controlsPosition}\r\n                model={settings.model}\r\n                outline={settings.outline}\r\n                animation={settings.animation}\r\n                rotateSpeed={rotateSpeed}\r\n                bgColor={bgColor}\r\n                antiAliasing={antiAliasing}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Display;\r\n","import { lazy, Suspense, useState, useRef, useEffect, useContext } from \"react\";\r\nimport useToggleState from \"./hooks/useToggleState\";\r\n\r\nimport Menu from \"@material-ui/icons/Menu\";\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport useStyles from \"./styles/MainPageStyles\";\r\n\r\nimport Display from \"./Display\";\r\nimport { SettingsContext } from \"./context/SettingsContext\";\r\nimport { setInitialSettings } from \"./helpers\";\r\n\r\nconst ControlPanel = lazy(() => import(\"./ControlPanel\"));\r\nconst SideBar = lazy(() => import(\"./SideBar\"));\r\n\r\nfunction MainPage({ location }) {\r\n    const classes = useStyles();\r\n\r\n    const [currentMode, setCurrentMode] = useState(\"model\");\r\n    const [sidebarOpen, toggleSidebarOpen] = useToggleState(true);\r\n    const [controlOpen, toggleControlOpen] = useToggleState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [initLoadDone, setInitLoadDone] = useState(false);\r\n    const {\r\n        app: { showSettings },\r\n    } = useContext(SettingsContext);\r\n\r\n    const viewerRef = useRef();\r\n    const [viewport, setViewport] = useState({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const params = location.pathname.split(\"/\");\r\n        setInitialSettings(params);\r\n        setInitLoadDone(true);\r\n\r\n        window.addEventListener(\"resize\", updateViewportSize);\r\n\r\n        return function () {\r\n            window.removeEventListener(\"resize\", updateViewportSize);\r\n        };\r\n    }, [location.pathname]);\r\n\r\n    const updateViewportSize = () => {\r\n        const height = viewerRef.current.clientHeight;\r\n        const width = viewerRef.current.clientWidth;\r\n        setViewport({ width, height });\r\n    };\r\n\r\n    const openControl = mode => {\r\n        toggleControlOpen();\r\n        setCurrentMode(mode);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isLoading && <div className={classes.loadingMsg}>Loading...</div>}\r\n            <div className={classes.root}>\r\n                <Suspense fallback={null}>\r\n                    <CssBaseline />\r\n                    <ControlPanel\r\n                        mode={currentMode}\r\n                        open={controlOpen}\r\n                        toggleControlOpen={toggleControlOpen}\r\n                    />\r\n                    {initLoadDone && showSettings && (\r\n                        <>\r\n                            <button\r\n                                onClick={toggleSidebarOpen}\r\n                                className={classes.openSidebarButton}\r\n                            >\r\n                                <Menu />\r\n                            </button>\r\n\r\n                            <SideBar\r\n                                toggleSidebarOpen={toggleSidebarOpen}\r\n                                open={sidebarOpen}\r\n                                openControl={openControl}\r\n                            />\r\n                        </>\r\n                    )}\r\n                </Suspense>\r\n                {initLoadDone && (\r\n                    <main ref={viewerRef} className={classes.content}>\r\n                        <Display\r\n                            setIsLoading={setIsLoading}\r\n                            viewport={viewport}\r\n                        />\r\n                    </main>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MainPage;\r\n","import { SettingsProvider } from \"./context/SettingsContext\";\r\n\r\nimport { Route, HashRouter } from \"react-router-dom\";\r\nimport MainPage from \"./MainPage\";\r\n\r\nimport \"./styles/App.css\";\r\n\r\nfunction App() {\r\n    return (\r\n        <SettingsProvider>\r\n            <HashRouter>\r\n                <Route render={routeProps => <MainPage {...routeProps} />} />\r\n            </HashRouter>\r\n        </SettingsProvider>\r\n    );\r\n}\r\n\r\nexport const fbxSource = process.env.PUBLIC_URL;\r\n\r\nexport default App;\r\n","const faceOffset = {\r\n    c110018_02: { x: 0.043, y: -0.0625 }, // Opera Karina\r\n    c110370_01: { x: 0.043, y: -0.0625 }, // Lapis\r\n    c100015_04: { x: 0.05, y: -0.08 }, // Chelle\r\n    c110267_01: { x: 0.08, y: -0.03 }, // Hawk\r\n    c110050_02: { x: 0.07, y: 0.13 }, // HBerserker\r\n    c110291_01: { x: 0.07, y: 0.14 }, // Marth\r\n    c110354_01: { x: 0.07, y: 0.01 }, // Mega Man\r\n    c110345_01: { x: 0.08, y: -0.13 }, // Mitsuhide\r\n    c110266_01: { x: 0.01, y: 0.03 }, // Naveed\r\n    c110365_01: { x: 0.043, y: -0.0625 }, // Nevin\r\n    c110346_01: { x: 0.07, y: 0.08 }, // Nobunaga\r\n    c110366_01: { x: 0.043, y: -0.0625 }, // Pinon\r\n    c110299_02: { x: 0.07, y: 0.08 }, // RXZ\r\n    c110360_01: { x: 0.07, y: 0.14 }, // Tiki\r\n    c110307_01: { x: 0.08, y: -0.03 }, // Victor\r\n    c110322_01: { x: 0.043, y: 0.08 }, // Zhu Bajie\r\n    c110356_01: { x: 0.07, y: 0.08 }, // Gauld\r\n    c110300_01: { x: 0.07, y: -0.1 }, // Pipple\r\n    c110344_01: { x: 0.07, y: -0.02 }, // Yuya\r\n    c110053_03: { x: 0.043, y: -0.0625 }, // INefi\r\n    c110368_01: { x: 0.043, y: -0.0625 }, // Meene\r\n    c110367_01: { x: 0.043, y: -0.0625 }, // Ilia\r\n    c110003_02: { x: 0.043, y: -0.0625 }, // Gun Joe\r\n    c110270_02: { x: 0.043, y: -0.0625 }, // HMelsa\r\n    c110341_03: { x: 0.043, y: -0.0625 }, // Hakasha\r\n};\r\nexport default faceOffset;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nfunction useToggleState(initVal = false) {\r\n    const [state, setState] = useState(initVal);\r\n    const toggleState = useCallback(() => {\r\n        setState(state => !state);\r\n    }, [setState]);\r\n    return [state, toggleState];\r\n}\r\n\r\nexport default useToggleState;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { DRAWER_WIDTH, DRAWER_BGCOLOR } from \"../consts\";\r\nimport bg from \"./Rose-Petals.svg\";\r\n\r\nconst drawerWidth = DRAWER_WIDTH;\r\nconst drawerBG = DRAWER_BGCOLOR;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"block\",\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        overflowY: \"scroll\",\r\n    },\r\n    drawerPaper: {\r\n        alignItems: \"center\",\r\n        backgroundColor: drawerBG,\r\n        backgroundImage: `url(${bg})`,\r\n        /* background by SVGBackgrounds.com */\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        width: drawerWidth,\r\n        \"& button\": {\r\n            marginBottom: \"0.2rem\",\r\n        },\r\n    },\r\n    content: {\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n        padding: 0,\r\n    },\r\n    openSidebarButton: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        margin: \"2rem\",\r\n        opacity: \"0.5\",\r\n        borderRadius: \"0.25rem\",\r\n        transition: \"0.5s all ease-in-out\",\r\n        cursor: \"pointer\",\r\n        \"&:hover\": {\r\n            opacity: \"1\",\r\n        },\r\n    },\r\n    loadingMsg: {\r\n        position: \"absolute\",\r\n        zIndex: \"9999\",\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        color: \"white\",\r\n        fontSize: \"x-large\",\r\n        backgroundColor: \"rgba(0,0,0,0.5)\",\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","export default __webpack_public_path__ + \"static/media/Rose-Petals.bc11ecc7.svg\";","export const DRAWER_WIDTH = \"15rem\";\r\nexport const DRAWER_BGCOLOR = \"#330000\";\r\n\r\nexport const baseUrl = \"https://dgk3593.github.io/dl-model/#/\";\r\n\r\nconst defaultAni = \"MWM_CMN+CMN_MWM_03\";\r\n\r\nexport const defaultSettings = {\r\n    model: {\r\n        materialType: \"Basic\",\r\n        id: \"c100001_01\",\r\n        texture: \"c100001_01\",\r\n        faceTexture: \"c100001_01\",\r\n        face: 2,\r\n        weaponRight: \"\",\r\n        weaponLeft: \"\",\r\n    },\r\n    materialParams: {},\r\n    scene: {\r\n        rotateSpeed: 0,\r\n        background: \"#cccccc\",\r\n        initCameraPosition: null,\r\n    },\r\n    animation: {\r\n        code: defaultAni,\r\n        timeScale: 1,\r\n    },\r\n    app: {\r\n        sideContent: \"settings\",\r\n        showSettings: true,\r\n        showAniControl: true,\r\n        antiAliasing: false,\r\n        capture: false,\r\n    },\r\n    outline: {\r\n        enable: true,\r\n        size: 5, // 1 -> 10\r\n        color: \"#000000\",\r\n        opacity: 1, // 0.1 -> 10%, 1-> 100%\r\n    },\r\n    capture: {\r\n        enable: false,\r\n        supportedCodecs: [],\r\n        codec: \"\",\r\n    },\r\n};\r\n\r\nexport const initKey = {\r\n    id: { group: \"model\", key: \"id\" },\r\n    ft: { group: \"model\", key: \"faceTexture\" },\r\n    f: { group: \"model\", key: \"face\" },\r\n    wr: { group: \"model\", key: \"weaponRight\" },\r\n    wl: { group: \"model\", key: \"weaponLeft\" },\r\n    bg: { group: \"scene\", key: \"background\" },\r\n    cam: { group: \"scene\", key: \"initCameraPosition\" },\r\n    ts: { group: \"animation\", key: \"timeScale\" },\r\n    showAC: { group: \"app\", key: \"showAniControl\" },\r\n    showSettings: { group: \"app\", key: \"showSettings\" },\r\n    showOutline: { group: \"outline\", key: \"enable\" },\r\n    AA: { group: \"app\", key: \"antiAliasing\" },\r\n    rot: { group: \"scene\", key: \"rotateSpeed\" },\r\n    cc: { group: \"animation\", key: \"code\" },\r\n};\r\n\r\nexport const MATERIALS = [\"Basic\", \"Toon\", \"Lambert\", \"Phong\", \"Standard\"];\r\n\r\nexport const MaterialExtraParams = {\r\n    Basic: [],\r\n    Toon: [\"emissive\", \"emissiveIntensity\", \"gradientMap\"],\r\n    Lambert: [\"emissive\", \"emissiveIntensity\"],\r\n    Phong: [\"emissive\", \"emissiveIntensity\", \"specular\", \"shininess\"],\r\n    Standard: [\"emissive\", \"emissiveIntensity\", \"metalness\", \"roughness\"],\r\n};\r\n\r\nexport const WEAPON_CODE = {\r\n    Sword: \"SWD\",\r\n    Blade: \"KAT\",\r\n    Dagger: \"DAG\",\r\n    Axe: \"AXE\",\r\n    Lance: \"LAN\",\r\n    Bow: \"BOW\",\r\n    Wand: \"ROD\",\r\n    Staff: \"CAN\",\r\n    Manacaster: \"GUN\",\r\n};\r\n\r\nexport const WEAPON_LIST = [\r\n    \"Sword\",\r\n    \"Blade\",\r\n    \"Dagger\",\r\n    \"Axe\",\r\n    \"Lance\",\r\n    \"Bow\",\r\n    \"Wand\",\r\n    \"Staff\",\r\n    \"Manacaster\",\r\n];\r\n\r\nexport const GENDER_CODE = {\r\n    Male: 21,\r\n    Female: 23,\r\n};\r\n\r\nexport const COMBO_LENGTH = {\r\n    Axe: 5,\r\n    Bow: 6,\r\n    Staff: 5,\r\n    Dagger: 6,\r\n    Blade: 5,\r\n    Lance: 5,\r\n    Wand: 5,\r\n    Sword: 5,\r\n};\r\n\r\nexport const FS_LENGTH = {\r\n    Axe: 3,\r\n    Bow: 3,\r\n    Staff: 5,\r\n    Dagger: 3,\r\n    Blade: 3,\r\n    Lance: 4,\r\n    Wand: 3,\r\n    Sword: 3,\r\n};\r\n\r\nexport const FILTERS = {\r\n    rarity: [\"3\", \"4\", \"5\"],\r\n    element: [\"Flame\", \"Water\", \"Wind\", \"Light\", \"Shadow\"],\r\n    weapon: [\r\n        \"Sword\",\r\n        \"Blade\",\r\n        \"Dagger\",\r\n        \"Axe\",\r\n        \"Lance\",\r\n        \"Bow\",\r\n        \"Wand\",\r\n        \"Staff\",\r\n        \"Manacaster\",\r\n    ],\r\n};\r\n\r\nexport const WEAPON_FILTERS = {\r\n    rarity: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\r\n    element: [\"Flame\", \"Water\", \"Wind\", \"Light\", \"Shadow\", \"None\"],\r\n    weapon: [\r\n        \"Sword\",\r\n        \"Blade\",\r\n        \"Dagger\",\r\n        \"Axe\",\r\n        \"Lance\",\r\n        \"Bow\",\r\n        \"Wand\",\r\n        \"Staff\",\r\n        \"Manacaster\",\r\n    ],\r\n};\r\n\r\nexport const spFaceTextures = {\r\n    c110300_01: \"ec110300_01\",\r\n};\r\n\r\nexport const commonBG = {\r\n    green: \"#00ff00\",\r\n    black: \"#000000\",\r\n    grey: \"#cccccc\",\r\n    white: \"#ffffff\",\r\n};\r\n\r\nexport const CAM_PARAMS = {\r\n    angle: 45,\r\n    far: 300,\r\n    near: 0.01,\r\n};\r\n\r\nexport const cameraPositions = {\r\n    c: [0, 0.5, 1.5],\r\n    d: [3, 0.5, 6],\r\n\r\n    c100034_01: [0, 0.5, 1.75],\r\n    d210078_01: [3, 3, 20],\r\n    d210114_01: [3, 3, 20],\r\n\r\n    smith: [1, 1, 2],\r\n};\r\n\r\nexport const controlsPositions = {\r\n    c: [0, 0.5, 0],\r\n    d: [0, 1, 0],\r\n\r\n    d210078_01: [0, 3, 0],\r\n    d210114_01: [0, 3, 0],\r\n\r\n    smith: [0, 0.5, 0],\r\n};\r\n\r\nexport const faceOffsets = {\r\n    face1: { x: 2, y: 1 },\r\n    face2: { x: 0, y: 0 },\r\n    face3: { x: 1, y: 0 },\r\n    face4: { x: 2, y: 0 },\r\n    face5: { x: 3, y: 0 },\r\n    face6: { x: 0, y: -1 },\r\n    face7: { x: 1, y: -1 },\r\n    face8: { x: 2, y: -1 },\r\n    face9: { x: 3, y: -1 },\r\n};\r\n\r\nexport const videoCodecs = [\r\n    \"video/webm;codecs=h264\",\r\n    \"video/webm;codecs=vp9\",\r\n    \"video/webm;codecs=vp8\",\r\n    \"video/webm\",\r\n];\r\n\r\nexport const asciiSet = [\r\n    \" .:-=+*#%@\",\r\n    \" .'`^\\\",:;Il!i~+_-?][}{1)(|/tfjrxnuvczXYUJCLQ0OZmwqpdbkhao*#MW&8%B@$\",\r\n];\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import ReactDOM from \"react-dom\";\r\nimport \"./styles/index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <App />\r\n    </Router>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}