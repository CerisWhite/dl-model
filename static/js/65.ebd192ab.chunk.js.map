{"version":3,"sources":["MainPage/Sidebar/SidebarBody/ChainMaker/ChainAniAdvanced.js"],"names":["ChainAniFace","lazy","ChainAniAdvanced","props","timeScale","repetitions","faceChanges","updateParams","openModal","viewerType","useContext","SettingsContext","app","handleParamChange","event","target","name","value","updateValue","updateFaceChanges","newFaceChanges","className","onChange","label","size","margin","variant","inputProps","type","step","includes","fallback","deleteFaceChange","id","currentTarget","filter","change","updateFaceChange","newFaceChange","map","addFaceChange","blankChange","nanoid","time","eyeIdx","mouthIdx"],"mappings":"+KAOMA,EAAeC,gBAAK,kBAAM,kCA+FjBC,UA7Ff,SAA0BC,GACtB,IACIC,EAKAD,EALAC,UACAC,EAIAF,EAJAE,YACAC,EAGAH,EAHAG,YACAC,EAEAJ,EAFAI,aACAC,EACAL,EADAK,UAIOC,EACPC,qBAAWC,KADXC,IAAOH,WAGLI,EAAoB,SAAAC,GACtB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACRC,EAAW,eAAMF,EAAOC,GAC9BV,EAAaW,IAGXC,EAAoB,SAAAC,GAEtBb,EADoB,CAAED,YAAac,KA4BvC,OACI,qCACI,sBAAKC,UAAU,kBAAf,UACI,cAAC,IAAD,CACIC,SAAUT,EACVU,MAAM,QACNC,KAAK,QACLC,OAAO,QACPC,QAAQ,WACRC,WAAY,CACRC,KAAM,SACNC,KAAM,IACNb,KAAM,aAEVC,MAAOb,IAEX,cAAC,IAAD,CACIkB,SAAUT,EACVU,MAAM,cACNC,KAAK,QACLC,OAAO,QACPC,QAAQ,WACRC,WAAY,CACRC,KAAM,SACNZ,KAAM,eAEVC,MAAOZ,OAId,CAAC,MAAO,UAAUyB,SAASrB,IACxB,cAAC,WAAD,CAAUsB,SAAU,KAApB,SACI,cAAC/B,EAAD,CACIQ,UAAWA,EACXF,YAAaA,EACb0B,iBA3DK,SAAAlB,GACrB,IAAQmB,EAAOnB,EAAMoB,cAAbD,GACFb,EAAiBd,EAAY6B,QAAO,SAAAC,GAAM,OAAIA,EAAOH,KAAOA,KAClEd,EAAkBC,IAyDFiB,iBAtDK,SAACJ,EAAIK,GAC1B,IAAMlB,EAAiBd,EAAYiC,KAAI,SAAAH,GAAM,OACzCA,EAAOH,KAAOA,EAAKK,EAAgBF,KAEvCjB,EAAkBC,IAmDFoB,cAhDE,WAClB,IAAMC,EAAc,CAChBR,GAAIS,cACJC,KAAM,GACNC,OAAQ,GACRC,SAAU,IAERzB,EAAc,sBAAOd,GAAP,CAAoBmC,IACxCtB,EAAkBC","file":"static/js/65.ebd192ab.chunk.js","sourcesContent":["import { useContext, lazy, Suspense } from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { SettingsContext } from \"context/SettingsContext\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nconst ChainAniFace = lazy(() => import(\"./ChainAniFace\"));\r\n\r\nfunction ChainAniAdvanced(props) {\r\n    const {\r\n        timeScale,\r\n        repetitions,\r\n        faceChanges,\r\n        updateParams,\r\n        openModal,\r\n    } = props;\r\n\r\n    const {\r\n        app: { viewerType },\r\n    } = useContext(SettingsContext);\r\n\r\n    const handleParamChange = event => {\r\n        const { name, value } = event.target;\r\n        const updateValue = { [name]: value };\r\n        updateParams(updateValue);\r\n    };\r\n\r\n    const updateFaceChanges = newFaceChanges => {\r\n        const updateValue = { faceChanges: newFaceChanges };\r\n        updateParams(updateValue);\r\n    };\r\n\r\n    const deleteFaceChange = event => {\r\n        const { id } = event.currentTarget;\r\n        const newFaceChanges = faceChanges.filter(change => change.id !== id);\r\n        updateFaceChanges(newFaceChanges);\r\n    };\r\n\r\n    const updateFaceChange = (id, newFaceChange) => {\r\n        const newFaceChanges = faceChanges.map(change =>\r\n            change.id === id ? newFaceChange : change\r\n        );\r\n        updateFaceChanges(newFaceChanges);\r\n    };\r\n\r\n    const addFaceChange = () => {\r\n        const blankChange = {\r\n            id: nanoid(),\r\n            time: \"\",\r\n            eyeIdx: \"\",\r\n            mouthIdx: \"\",\r\n        };\r\n        const newFaceChanges = [...faceChanges, blankChange];\r\n        updateFaceChanges(newFaceChanges);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"ChainAni-fields\">\r\n                <TextField\r\n                    onChange={handleParamChange}\r\n                    label=\"Speed\"\r\n                    size=\"small\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    inputProps={{\r\n                        type: \"number\",\r\n                        step: 0.25,\r\n                        name: \"timeScale\",\r\n                    }}\r\n                    value={timeScale}\r\n                />\r\n                <TextField\r\n                    onChange={handleParamChange}\r\n                    label=\"Repetitions\"\r\n                    size=\"small\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    inputProps={{\r\n                        type: \"number\",\r\n                        name: \"repetitions\",\r\n                    }}\r\n                    value={repetitions}\r\n                />\r\n            </div>\r\n\r\n            {[\"adv\", \"dragon\"].includes(viewerType) && (\r\n                <Suspense fallback={null}>\r\n                    <ChainAniFace\r\n                        openModal={openModal}\r\n                        faceChanges={faceChanges}\r\n                        deleteFaceChange={deleteFaceChange}\r\n                        updateFaceChange={updateFaceChange}\r\n                        addFaceChange={addFaceChange}\r\n                    />\r\n                </Suspense>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ChainAniAdvanced;\r\n"],"sourceRoot":""}