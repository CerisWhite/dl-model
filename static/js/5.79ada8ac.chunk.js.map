{"version":3,"sources":["../node_modules/three/examples/jsm/controls/OrbitControls.js","MainPage/Display/viewers/BaseViewer.js"],"names":["OrbitControls","object","domElement","undefined","console","warn","document","error","this","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","ownerDocument","onPointerMove","onPointerUp","onKeyDown","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","subVectors","handleTouchMovePan","handleTouchMoveDolly","pointerType","mouseAction","preventDefault","focus","window","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","addEventListener","onMouseDown","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","onMouseUp","stopPropagation","handleMouseWheel","needsUpdate","keyCode","handleKeyDown","handleTouchStartDollyPan","DOLLY_ROTATE","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","prototype","Object","create","EventDispatcher","constructor","MapControls","call","BaseViewer","disableInput","msg","props","setLoadingMsg","enableInput","initialize","a","initScene","materials","outlines","models","modelInfo","loadMainModel","afterMainModelLoad","viewport","width","innerWidth","height","innerHeight","clock","THREE","scene","bgColor","floor","createInvisibleFloor","camera","CAM_PARAMS","near","far","cameraPosition","controls","mount","controlsPosition","lights","addAllLights","loadedFX","Map","rendererAA","antialias","alpha","outputEncoding","rendererNoAA","AAEnabled","antiAliasing","_AA","renderer","finalRenderer","setSize","canvas","animate","modelId","model","id","main","modelPath","getModelPath","loadModel","basicMainProcessing","addLight","light","enable","params","newLight","createLight","push","forEach","removeLight","remove","removeAllLights","addToScene","initTexture","texture","defaultTexture","getDefaultTexture","split","source","name","textureSource","textureName","texturePath","fbxSource","mainModel","replaceTexture","oldTexture","removeEffects","materialType","matType","isBlade","analyzeWeaponCode","changeMaterial","forced","applyNewModelMat","outlineParams","outline","createOutline","updateViewer","prev","current","updateEnvironment","updateModel","otherUpdate","updateViewport","updateOutline","updateMaterial","material","updateLights","updateAscii","ascii","updateCamera","updateControl","AA","updateMainModel","aspect","disposeMainModel","disposeItem","replaceMainModel","beforeMainModelUpdate","afterMainModelUpdate","updateOutlineParams","values","flat","applyOutlineSettings","updatedKeys","filter","key","map","saveMaterialReference","getMaterial","matParams","updateMatParams","prevParams","useTexture","matTypeChanged","some","newCanvas","has","AsciiEffect","showAscii","charSet","color","get","effect","style","background","rotateFloor","dt","rotateY","everyAnimate","getDelta","frameId","requestAnimationFrame","render","app","finishedInit","log","getUpdated","value","oldValue","subkeys","JSON","stringify","subkey","cancelAnimationFrame","mixer","renderLists","ref","el","allParams","paramList","getParamsList","filterObject","oldCanvas","_canvas","removeChild","appendChild","PureComponent"],"mappings":"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","file":"static/js/5.79ada8ac.chunk.js","sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from '../../../build/three.module.js';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function ( object, domElement ) {\n\n\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\tthis.object = object;\n\tthis.domElement = domElement;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.05;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t// Touch fingers\n\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().invert();\n\n\t\tvar lastPosition = new Vector3();\n\t\tvar lastQuaternion = new Quaternion();\n\n\t\tvar twoPI = 2 * Math.PI;\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t} else {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t}\n\n\t\t\t// restrict theta to be between desired limits\n\n\t\t\tvar min = scope.minAzimuthAngle;\n\t\t\tvar max = scope.maxAzimuthAngle;\n\n\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t}\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\n\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove, false );\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp, false );\n\n\t\tscope.domElement.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = {\n\t\tNONE: - 1,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2,\n\t\tTOUCH_ROTATE: 3,\n\t\tTOUCH_PAN: 4,\n\t\tTOUCH_DOLLY_PAN: 5,\n\t\tTOUCH_DOLLY_ROTATE: 6\n\t};\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new Spherical();\n\tvar sphericalDelta = new Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new Vector2();\n\tvar rotateEnd = new Vector2();\n\tvar rotateDelta = new Vector2();\n\n\tvar panStart = new Vector2();\n\tvar panEnd = new Vector2();\n\tvar panDelta = new Vector2();\n\n\tvar dollyStart = new Vector2();\n\tvar dollyEnd = new Vector2();\n\tvar dollyDelta = new Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\tvar needsUpdate = false;\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\n\t\t}\n\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t}\n\n\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateEnd.set( x, y );\n\n\t\t}\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t}\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\tdollyOut( dollyDelta.y );\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t}\n\n\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t}\n\n\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onPointerDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseDown( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onPointerMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseMove( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onPointerUp( event ) {\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseUp( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onMouseDown( event ) {\n\n\t\t// Prevent the browser from scrolling.\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tvar mouseAction;\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase 0:\n\n\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\n\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tmouseAction = - 1;\n\n\t\t}\n\n\t\tswitch ( mouseAction ) {\n\n\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.PAN:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove, false );\n\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove, false );\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp, false );\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\n\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\t\tevent.stopPropagation();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'pointerdown', onPointerDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\tscope.domElement.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nOrbitControls.prototype = Object.create( EventDispatcher.prototype );\nOrbitControls.prototype.constructor = OrbitControls;\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nvar MapControls = function ( object, domElement ) {\n\n\tOrbitControls.call( this, object, domElement );\n\n\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\tthis.touches.ONE = TOUCH.PAN;\n\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n};\n\nMapControls.prototype = Object.create( EventDispatcher.prototype );\nMapControls.prototype.constructor = MapControls;\n\nexport { OrbitControls, MapControls };\n","/* \r\n################################################\r\n# Base Viewer that supports adding / updating:\r\n#    - 1 main model\r\n#    - auto rotate\r\n#    - viewport\r\n#    - material\r\n#    - background color\r\n#    - lighting\r\n#    - anti aliasing\r\n#    - ASCII mode\r\n################################################\r\n*/\r\n\r\nimport { PureComponent } from \"react\";\r\n\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nimport { CAM_PARAMS } from \"helpers/consts\";\r\nimport {\r\n    isBlade,\r\n    filterObject,\r\n    getUpdated,\r\n    getDefaultTexture,\r\n} from \"helpers/helpers\";\r\nimport {\r\n    createInvisibleFloor,\r\n    createLight,\r\n    analyzeWeaponCode,\r\n    getModelPath,\r\n    loadModel,\r\n    getMaterial,\r\n    disposeItem,\r\n    createOutline,\r\n    applyOutlineSettings,\r\n    getParamsList,\r\n    changeMaterial,\r\n    updateMatParams,\r\n    removeEffects,\r\n    replaceTexture,\r\n} from \"helpers/viewerHelpers\";\r\nimport { fbxSource } from \"App\";\r\n\r\nclass BaseViewer extends PureComponent {\r\n    async componentDidMount() {\r\n        window.app = this;\r\n\r\n        // const { fbx2json } = await import(\"helpers/fbx2json\");\r\n        // await fbx2json();\r\n\r\n        // const { getDragonFaceData } = await import(\"helpers/getDragonFaceData\");\r\n        // await getDragonFaceData();\r\n\r\n        await this.initialize();\r\n        this.finishedInit = true;\r\n    }\r\n\r\n    componentDidUpdate(prev) {\r\n        if (!this.finishedInit) return;\r\n        const current = this.props;\r\n\r\n        // print updated props to console\r\n        console.log(\"Updated\");\r\n        const updated = getUpdated(prev, current);\r\n        updated.forEach(([key, value]) => {\r\n            const oldValue = prev[key];\r\n            const subkeys = Object.keys(value);\r\n            if (subkeys.length === 0 || typeof value === \"string\") {\r\n                console.log(\r\n                    `${key}: ${JSON.stringify(oldValue)} to ${JSON.stringify(\r\n                        value\r\n                    )}`\r\n                );\r\n            } else {\r\n                subkeys.forEach(subkey => {\r\n                    if (oldValue[subkey] !== value[subkey]) {\r\n                        console.log(\r\n                            `${key}.${subkey}: ${JSON.stringify(\r\n                                oldValue[subkey]\r\n                            )} to ${JSON.stringify(value[subkey])}`\r\n                        );\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        this.updateViewer(prev, current);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        cancelAnimationFrame(this.frameId);\r\n        disposeItem(this.scene);\r\n        this.mixer = null;\r\n        this.clock = null;\r\n        this.camera = null;\r\n        this.controls = null;\r\n        this.scene = null;\r\n        this.renderer = null;\r\n        this.rendererAA.renderLists.dispose();\r\n        this.rendererAA.dispose();\r\n        this.rendererAA = null;\r\n        this.rendererNoAA.renderLists.dispose();\r\n        this.rendererNoAA.dispose();\r\n        this.rendererNoAA = null;\r\n    }\r\n\r\n    disableInput = msg => this.props.setLoadingMsg(msg || \"Loading\");\r\n\r\n    enableInput = () => this.props.setLoadingMsg(\"\");\r\n\r\n    initialize = async () => {\r\n        this.disableInput();\r\n\r\n        this.initScene();\r\n\r\n        this.materials = [];\r\n        this.outlines = {};\r\n        this.models = {};\r\n        this.modelInfo = {};\r\n        await this.loadMainModel();\r\n        await this.afterMainModelLoad?.();\r\n\r\n        this.enableInput();\r\n    };\r\n\r\n    initScene = () => {\r\n        // viewport\r\n        this.viewport = this.props.viewport || {\r\n            width: window.innerWidth,\r\n            height: window.innerHeight,\r\n        };\r\n\r\n        // clock\r\n        this.clock = new THREE.Clock();\r\n\r\n        // Scene\r\n        this.scene = new THREE.Scene();\r\n        this.bgColor = this.props.bgColor;\r\n\r\n        // Floor for auto rotate\r\n        this.floor = createInvisibleFloor();\r\n        this.scene.add(this.floor);\r\n\r\n        // Camera\r\n        this.camera = new THREE.PerspectiveCamera(\r\n            CAM_PARAMS.angle,\r\n            this.viewport.width / this.viewport.height,\r\n            CAM_PARAMS.near,\r\n            CAM_PARAMS.far\r\n        );\r\n        this.cameraPosition = this.props.cameraPosition || [2, 0, 10];\r\n        this.camera.position.set(...this.cameraPosition);\r\n        this.camera.updateProjectionMatrix();\r\n\r\n        // Controls\r\n        this.controls = new OrbitControls(this.camera, this.mount);\r\n        this.controlsPosition = this.props.controlsPosition || [0, 0, 0];\r\n        this.controls.target.set(...this.controlsPosition);\r\n        this.controls.update();\r\n\r\n        // Light\r\n        const { lights } = this.props;\r\n        this.addAllLights(lights);\r\n\r\n        // effects\r\n        this.loadedFX = new Map();\r\n\r\n        // Renderer\r\n        this.rendererAA = new THREE.WebGLRenderer({\r\n            antialias: true,\r\n            alpha: true,\r\n        });\r\n        this.rendererAA.outputEncoding = THREE.sRGBEncoding;\r\n\r\n        this.rendererNoAA = new THREE.WebGLRenderer({\r\n            antialias: false,\r\n            alpha: true,\r\n        });\r\n        this.rendererNoAA.outputEncoding = THREE.sRGBEncoding;\r\n\r\n        const AAEnabled = this.props.antiAliasing;\r\n        this._AA = AAEnabled;\r\n\r\n        this.renderer = AAEnabled ? this.rendererAA : this.rendererNoAA;\r\n\r\n        this.finalRenderer = this.renderer;\r\n        const { width, height } = this.props.viewport;\r\n        this.finalRenderer.setSize(width, height);\r\n\r\n        const canvas = this.finalRenderer.domElement;\r\n        this.canvas = canvas;\r\n\r\n        this.animate();\r\n    };\r\n\r\n    loadMainModel = async () => {\r\n        const modelId = this.props.model.id;\r\n        this.modelInfo.main = modelId;\r\n\r\n        const modelPath = getModelPath(modelId);\r\n        const model = await loadModel(modelPath);\r\n        this.models.main = model;\r\n\r\n        await this.basicMainProcessing(model);\r\n        return;\r\n    };\r\n\r\n    set AA(enabled) {\r\n        if (enabled === this._AA) return;\r\n\r\n        this._AA = enabled;\r\n        this.renderer = enabled ? this.rendererAA : this.rendererNoAA;\r\n        const { width, height } = this.viewport;\r\n        this.renderer.setSize(width, height);\r\n\r\n        if (this.props.ascii.enable) return;\r\n\r\n        this.finalRenderer = this.renderer;\r\n\r\n        const newCanvas = this.renderer.domElement;\r\n        this.canvas = newCanvas;\r\n    }\r\n\r\n    addLight = light => {\r\n        const { id, enable, ...params } = light;\r\n        if (!enable) return;\r\n\r\n        const newLight = createLight(params);\r\n\r\n        this.scene.add(newLight);\r\n        this.lights.push(newLight);\r\n    };\r\n\r\n    addAllLights = lights => {\r\n        this.lights = [];\r\n        lights.forEach(this.addLight);\r\n    };\r\n\r\n    removeLight = light => this.scene.remove(light);\r\n\r\n    removeAllLights = () => this.lights.forEach(this.removeLight);\r\n\r\n    addToScene = model => this.floor.add(model);\r\n\r\n    initTexture = async () => {\r\n        const { id: modelId, texture } = this.props.model;\r\n        if (!texture || texture === \">\") return;\r\n\r\n        const defaultTexture = getDefaultTexture(modelId);\r\n        const [source, name] = texture.split(\">\");\r\n        const textureSource = source || modelId;\r\n        const textureName = name || getDefaultTexture(textureSource);\r\n\r\n        const texturePath = `${fbxSource}/fbx/${textureSource}/${textureName}.png`;\r\n        const mainModel = this.models.main;\r\n        await replaceTexture(mainModel, {\r\n            oldTexture: defaultTexture,\r\n            texturePath,\r\n        });\r\n    };\r\n\r\n    basicMainProcessing = async () => {\r\n        const model = this.models.main;\r\n\r\n        removeEffects(model);\r\n\r\n        const materialType = this.matType;\r\n        const modelId = this.props.model.id;\r\n        if (isBlade(modelId)) {\r\n            const { texturePath } = analyzeWeaponCode(`${modelId}n`);\r\n            changeMaterial(model, { materialType, texturePath });\r\n        } else {\r\n            changeMaterial(model, { materialType, forced: true });\r\n        }\r\n\r\n        await this.initTexture();\r\n\r\n        this.applyNewModelMat(model);\r\n\r\n        const outlineParams = this.props.outline;\r\n        this.outlines.main = createOutline(model, outlineParams);\r\n\r\n        this.addToScene(model);\r\n    };\r\n\r\n    updateViewer = (prev, current) => {\r\n        this.updateEnvironment(prev, current);\r\n        this.updateModel(prev, current);\r\n        this.otherUpdate?.(prev, current);\r\n    };\r\n\r\n    updateEnvironment = (prev, current) => {\r\n        this.updateViewport(prev.viewport, current.viewport);\r\n        this.updateOutline(prev.outline, current.outline);\r\n        this.updateMaterial(prev.material, current.material);\r\n        this.updateLights(prev.lights, current.lights);\r\n        this.updateAscii(prev.ascii, current.ascii);\r\n        this.updateCamera(prev.cameraPosition, current.cameraPosition);\r\n        this.updateControl(prev.controlsPosition, current.controlsPosition);\r\n\r\n        // Update background color\r\n        if (prev.bgColor !== current.bgColor) {\r\n            this.bgColor = current.bgColor;\r\n        }\r\n\r\n        this.AA = current.antiAliasing;\r\n    };\r\n\r\n    updateModel = (prev, current) => {\r\n        this.updateMainModel(prev.model, current.model);\r\n    };\r\n\r\n    updateViewport = (prev, current) => {\r\n        const { width, height } = current;\r\n        if (prev.width === width && prev.height === height) return;\r\n\r\n        this.viewport.width = width;\r\n        this.viewport.height = height;\r\n\r\n        this.finalRenderer.setSize(width, height);\r\n        this.camera.aspect = width / height;\r\n        this.camera.updateProjectionMatrix();\r\n    };\r\n\r\n    disposeMainModel = () => {\r\n        const mainModel = this.models.main;\r\n        this.floor.remove(mainModel);\r\n        disposeItem(mainModel);\r\n    };\r\n\r\n    replaceMainModel = async () => {\r\n        this.disableInput();\r\n\r\n        this.disposeMainModel();\r\n        await this.loadMainModel();\r\n        this.applyNewModelMat(this.models.main);\r\n\r\n        this.enableInput();\r\n    };\r\n\r\n    updateMainModel = async (prev, current) => {\r\n        const modelId = current.id;\r\n        const mainUpdated = prev.id !== modelId;\r\n        if (!mainUpdated) return;\r\n\r\n        this.beforeMainModelUpdate?.();\r\n        await this.replaceMainModel();\r\n        this.afterMainModelUpdate?.();\r\n    };\r\n\r\n    updateOutlineParams = update => {\r\n        const outlines = Object.values(this.outlines).flat();\r\n        outlines.forEach(outline => {\r\n            applyOutlineSettings(outline, update);\r\n        });\r\n    };\r\n\r\n    updateOutline = (prev, current) => {\r\n        if (prev === current) return;\r\n\r\n        const updatedKeys = Object.keys(current).filter(\r\n            key => prev[key] !== current[key]\r\n        );\r\n        if (updatedKeys.length === 0) return;\r\n\r\n        const update = new Map(updatedKeys.map(key => [key, current[key]]));\r\n        this.updateOutlineParams(update);\r\n    };\r\n\r\n    saveMaterialReference = () => {\r\n        const mainModel = this.models.main;\r\n        this.materials = getMaterial(mainModel);\r\n    };\r\n\r\n    get matParams() {\r\n        const { type: materialType, ...allParams } = this.props.material;\r\n        const paramList = getParamsList(materialType);\r\n        return filterObject(allParams, paramList);\r\n    }\r\n\r\n    get matType() {\r\n        return this.props.material.type;\r\n    }\r\n\r\n    applyNewModelMat = model => {\r\n        const params = this.matParams;\r\n        const defaultParams = { useTexture: true };\r\n        updateMatParams(model, { prevParams: defaultParams, params });\r\n    };\r\n\r\n    updateMaterial = (prev, current) => {\r\n        if (prev === current) return;\r\n\r\n        const materialType = this.matType;\r\n        const mainModel = this.models.main;\r\n\r\n        const matTypeChanged = prev.type !== materialType;\r\n        if (matTypeChanged) {\r\n            changeMaterial(this.models.main, { materialType });\r\n        }\r\n\r\n        const prevParams = matTypeChanged\r\n            ? { useTexture: prev.useTexture }\r\n            : prev;\r\n        const params = this.matParams;\r\n        updateMatParams(mainModel, { prevParams, params });\r\n    };\r\n\r\n    updateLights = (prev, current) => {\r\n        if (prev !== current) {\r\n            this.removeAllLights();\r\n            this.addAllLights(current);\r\n        }\r\n    };\r\n\r\n    updateAscii = async (prev, current) => {\r\n        const updated = Object.keys(prev).some(\r\n            key => prev[key] !== current[key]\r\n        );\r\n        if (!updated) return;\r\n\r\n        const { enable } = current;\r\n        if (!enable) {\r\n            this.finalRenderer = this.renderer;\r\n            const newCanvas = this.renderer.domElement;\r\n            this.canvas = newCanvas;\r\n            return;\r\n        }\r\n\r\n        if (!this.loadedFX.has(\"ascii\")) {\r\n            const { AsciiEffect } = await import(\r\n                \"three/examples/jsm/effects/AsciiEffect\"\r\n            );\r\n            this.loadedFX.set(\"ascii\", AsciiEffect);\r\n            this.showAscii();\r\n        } else this.showAscii();\r\n\r\n        this.finalRenderer.setSize(this.viewport.width, this.viewport.height);\r\n    };\r\n\r\n    showAscii = () => {\r\n        const { charSet, color, bgColor, invert } = this.props.ascii;\r\n        const AsciiEffect = this.loadedFX.get(\"ascii\");\r\n\r\n        this.effect = new AsciiEffect(this.renderer, charSet, { invert });\r\n\r\n        const { width, height } = this.viewport;\r\n        this.effect.setSize(width, height);\r\n\r\n        const newCanvas = this.effect.domElement;\r\n        newCanvas.style.color = color;\r\n        newCanvas.style.background = bgColor;\r\n        this.canvas = newCanvas;\r\n\r\n        this.finalRenderer = this.effect;\r\n    };\r\n\r\n    updateCamera = (prev, current) => {\r\n        if (prev === current) return;\r\n\r\n        this.camera.position.set(...current);\r\n        this.camera.updateProjectionMatrix();\r\n    };\r\n\r\n    updateControl = (prev, current) => {\r\n        if (prev === current) return;\r\n\r\n        this.controls.target.set(...current);\r\n        this.controls.update();\r\n    };\r\n\r\n    set bgColor(color) {\r\n        this.scene.background =\r\n            color !== \"transparent\" ? new THREE.Color(color) : null;\r\n    }\r\n\r\n    set canvas(canvas) {\r\n        const oldCanvas = this._canvas;\r\n        oldCanvas && this.mount.removeChild(oldCanvas);\r\n        this.mount.appendChild(canvas);\r\n        this._canvas = canvas;\r\n    }\r\n\r\n    get canvas() {\r\n        return this._canvas;\r\n    }\r\n\r\n    rotateFloor = dt => {\r\n        const { rotateSpeed } = this.props;\r\n        if (!rotateSpeed) return;\r\n\r\n        const angle = (rotateSpeed * dt * Math.PI) / 2;\r\n        this.floor.rotateY(angle);\r\n    };\r\n\r\n    everyAnimate = () => {\r\n        const dt = this.clock.getDelta();\r\n        this.rotateFloor(dt);\r\n    };\r\n\r\n    animate = () => {\r\n        this.frameId = requestAnimationFrame(this.animate);\r\n\r\n        this.everyAnimate();\r\n\r\n        this.finalRenderer.render(this.scene, this.camera);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                ref={el => {\r\n                    this.mount = el;\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default BaseViewer;\r\n"],"sourceRoot":""}