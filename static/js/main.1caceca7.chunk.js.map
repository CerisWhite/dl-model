{"version":3,"sources":["serviceWorker.js","index.js","reducer/settingsReducer.js","context/SettingsContext.js","data/animationDragon.js","helpers.js","Display.js","MainPage.js","App.js","viewerHelpers.js","shader/outlineFragShader.js","shader/outlineVertShader.js","hooks/useToggleState.js","data/face_offset.js","styles/MainPageStyles.js","styles/Rose-Petals.svg","consts.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","settingsReducer","state","action","type","key","subkey","value","currentValue","defaultSetting","defaultSettings","update","forEach","v","SettingsContext","createContext","DispatchContext","initSettings","chainMaker","chain","chainCodeToList","animation","code","SettingsProvider","props","useReducer","settings","dispatch","Provider","children","Object","keys","scene","lights","map","light","dragonAni","d210016_01","name","d210128_01","d210001_01","d210002_01","d210003_01","d210004_01","d210005_01","d210006_01","d210007_01","d210008_01","d210011_01","d210012_01","d210013_01","d210014_01","d210015_01","d210021_01","d210022_01","d210023_01","d210050_01","d210075_01","d210089_01","d210090_01","d210058_01","d210059_01","d210060_01","d210061_01","d210062_01","d210063_01","d210064_01","d210065_01","d210066_01","d210067_01","d210068_01","d210069_01","d210070_01","isBlade","startsWith","isCharaWithAni","modelId","endsWith","incompatibleModels","has","isDragon","getViewerType","getDefaultAni","getDefaultFace","callbackOnEach","list","callback","Array","isArray","child","setInitialSettings","params","length","defined","Set","param","split","keycode","setValue","join","add","chainList","n","parseFloat","initKey","group","isBooleanValue","generateChainCode","output","ani","i","fileName","aniName","faceChanges","concat","modCode","generateAniModCode","faceCode","generateFaceCode","aniModList","modKey","defaultValue","change","time","eyeIdx","mouthIdx","collectFilter","toggleState","collected","tmp","k","push","multiCondFilter","input","filters","filterKeys","filter","el","every","includes","getTextColor","color","rgb","hex","result","exec","r","parseInt","g","b","hexToRgb","aniButtonsFromObject","object","handleSelect","groupName","style","maxWidth","Button","variant","data-value","data-name","onClick","getStandbyCode","weapon","gender","WEAPON_CODE","GENDER_CODE","getVictoryCode","getDashAtkCode","getRollCode","getComboCode","comboLength","COMBO_LENGTH","slice","getFSCode","fsAniLength","FS_LENGTH","getLobbyCode","AniControl","lazy","viewers","base","chara","dragon","defaultFace","DEFAULT_FACE_IDX","DEFAULT_DRAGON_FACE_IDX","Display","activeViewer","useRef","viewport","useContext","model","id","rotateSpeed","bgColor","background","initCameraPosition","app","showAniControl","antiAliasing","toggleCapture","useCallback","modelType","defaultCameraPosition","cameraPositions","cameraPosition","isNaN","controlsPosition","controlsPositions","resetAni","defaultAni","resetFace","defaultIdx","useEffect","newViewerType","current","viewerType","ModelViewer","className","fallback","timeScale","setIsLoading","capture","materialParams","outline","ascii","ControlPanel","SideBar","MainPage","classes","useStyles","useState","currentMode","setCurrentMode","useToggleState","sidebarOpen","toggleSidebarOpen","controlOpen","toggleControlOpen","isLoading","initLoadDone","setInitLoadDone","showSettings","viewerRef","width","innerWidth","height","innerHeight","setViewport","pathname","addEventListener","updateViewportSize","removeEventListener","clientHeight","clientWidth","loadingMsg","root","CssBaseline","mode","open","openSidebarButton","openControl","handler","ref","content","fbxSource","process","routeProps","loadModel","url","Promise","resolve","FBXLoader","load","createInvisibleFloor","floorGeometry","THREE","rotateX","Math","PI","floorMaterial","visible","getMeshes","getOutline","meshes","traverse","isMesh","unshift","getMaterial","flatMap","mesh","material","filterObject","filtered","entries","fromEntries","getModelPath","getTexturePath","analyzeWeaponCode","flipped","weaponCode","substring","modelPath","texturePath","disposeItem","item","disposedList","needToDispose","uuid","notDisposed","dispose","disposeObject","mat","backupMap","geometry","getParamsList","matType","matCommonParams","matExtraParams","getDragonEye","eyes","nameRegex","test","getDragonMouth","mouths","removeEffects","createNewMaterial","materialType","changeMaterial","target","forced","materials","flat","matIsArray","checkParam","some","texture","encoding","newMaterial","skinning","createOutline","outlines","skip","word","clone","createOutlineMaterial","replaceMaterial","enable","isSkinnedMesh","bind","skeleton","bindMatrix","parent","size","opacity","uniforms","tyle","side","transparent","fragmentShader","vertexShader","applyOutlineSettings","fill","calculateTextureOffset","currentTexture","prevTexture","offset","x","y","prevOffset","textureOffsets","currentOffset","calculateIdxOffset","currentIdx","prevIdx","idxOffsets","applyOffset","part","groups","targetGroup","find","materialIndex","start","end","count","uv","attributes","u","getX","getY","setXY","needsUpdate","applyEyeOffset","applyMouthOffset","applyTexture","textureId","applyEyeTexture","applyMouthTexture","analyzeChainCode","aniCodes","nAni","fileList","animationList","currentAni","repetitions","fileIdx","details","currentParts","Infinity","faceMod","processFaceChanges","sorted","sort","timeStamps","simplified","assign","getFaceChangesArray","_","others","getUpdated","prev","applyMaterialParam","needsUpdateParams","nTones","newMap","colors","Uint8Array","minFilter","magFilter","generateMipmaps","createGradientMap","gradientMap","isColor","matColorParams","updateMatParams","prevParams","initVal","setState","faceOffset","c110296_02","c100004_17","c110371_01","c110350_02","c110340_02","c110018_02","c110370_01","c100015_04","c110342_01","c110267_01","c110050_02","c110291_01","c110354_01","c110345_01","c110266_01","c110365_01","c110346_01","c110366_01","c110299_02","c110360_01","c110307_01","c110322_01","c110356_01","c110300_01","c110344_01","c110053_03","c110368_01","c110367_01","c110003_02","c110270_02","c110341_03","drawerWidth","DRAWER_WIDTH","drawerBG","DRAWER_BGCOLOR","makeStyles","theme","display","drawer","overflowY","drawerPaper","alignItems","backgroundColor","backgroundImage","bg","backgroundSize","backgroundPosition","marginBottom","padding","position","top","left","margin","borderRadius","transition","cursor","zIndex","justifyContent","fontSize","baseUrl","matParamsDetails","wireframe","default","useTexture","flatShading","emissive","min","max","step","emissiveIntensity","specular","metalness","roughness","shininess","options","defaultMatParams","asciiSet","eyeTexture","mouthTexture","weaponRight","weaponLeft","lightId","intensity","sideContent","supportedCodecs","codec","charSet","invert","et","ei","mt","mi","wr","wl","cam","ts","showAC","showOutline","AA","rot","cc","MATERIALS","Basic","Toon","Lambert","Phong","Standard","Sword","Blade","Dagger","Axe","Lance","Bow","Wand","Staff","Manacaster","WEAPON_LIST","Male","Female","FILTERS","rarity","element","WEAPON_FILTERS","spFaceTextures","commonBG","green","black","grey","white","CAM_PARAMS","angle","far","near","c","d","w","e","h","o","c100034_01","d210078_01","d210114_01","h0010001","h0010001_02","h0040101","r0070401","r0080401","smith","face1","face2","face3","face4","face5","face6","face7","face8","face9","videoCodecs"],"mappings":"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","file":"static/js/main.1caceca7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import ReactDOM from \"react-dom\";\r\nimport \"./styles/index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <App />\r\n    </Router>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { defaultSettings } from \"../consts\";\r\n\r\nexport const settingsReducer = (state, action) => {\r\n    const { type, key, subkey, value } = action;\r\n    switch (type) {\r\n        case \"toggle\":\r\n            let currentValue;\r\n            if (subkey) {\r\n                currentValue = state[key][subkey][value];\r\n                return {\r\n                    ...state,\r\n                    [key]: {\r\n                        ...state[key],\r\n                        [subkey]: {\r\n                            ...state[key][subkey],\r\n                            [value]: !currentValue,\r\n                        },\r\n                    },\r\n                };\r\n            }\r\n            currentValue = state[key][value];\r\n            return {\r\n                ...state,\r\n                [key]: { ...state[key], [value]: !currentValue },\r\n            };\r\n        case \"reset\":\r\n            // reset values\r\n            // value = array of keys in settings[key] or settings[key][subkey] to be reset, null -> reset all\r\n            const defaultSetting = subkey\r\n                ? defaultSettings[key][subkey]\r\n                : defaultSettings[key];\r\n            // no value -> reset all\r\n            if (!value)\r\n                return subkey\r\n                    ? {\r\n                          ...state,\r\n                          [key]: {\r\n                              ...state[key],\r\n                              [subkey]: {\r\n                                  ...state[key][subkey],\r\n                                  ...defaultSetting,\r\n                              },\r\n                          },\r\n                      }\r\n                    : {\r\n                          ...state,\r\n                          [key]: { ...state[key], ...defaultSetting },\r\n                      };\r\n            // if value is defined, reset only the specified keys\r\n            const update = {};\r\n            value.forEach(v => {\r\n                update[v] = defaultSetting[v];\r\n            });\r\n            return subkey\r\n                ? {\r\n                      ...state,\r\n                      [key]: {\r\n                          ...state[key],\r\n                          [subkey]: { ...state[key][subkey], ...update },\r\n                      },\r\n                  }\r\n                : { ...state, [key]: { ...state[key], ...update } };\r\n        case \"load\":\r\n            // load preset values\r\n            return;\r\n        case \"update\":\r\n            // update state[key] or state[key][subkey] with values from value\r\n            return subkey\r\n                ? {\r\n                      ...state,\r\n                      [key]: {\r\n                          ...state[key],\r\n                          [subkey]: { ...state[key][subkey], ...value },\r\n                      },\r\n                  }\r\n                : { ...state, [key]: { ...state[key], ...value } };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { createContext, useReducer } from \"react\";\r\nimport { settingsReducer } from \"../reducer/settingsReducer\";\r\nimport { defaultSettings } from \"../consts\";\r\nimport { chainCodeToList } from \"../viewerHelpers\";\r\n\r\nexport const SettingsContext = createContext();\r\nexport const DispatchContext = createContext();\r\n\r\nconst initAniChain = chainCodeToList(defaultSettings.animation.code, \"init\");\r\n\r\nconst initSettings = { chainMaker: { chain: initAniChain } };\r\nObject.keys(defaultSettings).forEach(\r\n    key => (initSettings[key] = { ...defaultSettings[key] })\r\n);\r\ninitSettings.scene.lights = defaultSettings.scene.lights.map(light => ({\r\n    ...light,\r\n}));\r\n\r\nexport { initSettings };\r\n\r\nexport function SettingsProvider(props) {\r\n    const [settings, dispatch] = useReducer(settingsReducer, initSettings);\r\n\r\n    return (\r\n        <SettingsContext.Provider value={settings}>\r\n            <DispatchContext.Provider value={dispatch}>\r\n                {props.children}\r\n            </DispatchContext.Provider>\r\n        </SettingsContext.Provider>\r\n    );\r\n}\r\n","const dragonAni = {\r\n    d210016_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210016_01+DC_d210016_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210016_01+DC_d210016_01_90_04\" },\r\n    ],\r\n    d210128_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210128_01+DC_d210128_01_90_01\" },\r\n        { name: \"Give Back Gifts\", code: \"DC_d210128_01+DC_d210128_01_90_03\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210128_01+DC_d210128_01_90_04\" },\r\n    ],\r\n    d210001_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210001_01+DC_d210001_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210001_01+DC_d210001_01_90_04\" },\r\n    ],\r\n    d210002_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210002_01+DC_d210002_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210002_01+DC_d210002_01_90_04\" },\r\n    ],\r\n    d210003_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210003_01+DC_d210003_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210003_01+DC_d210003_01_90_04\" },\r\n    ],\r\n    d210004_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210004_01+DC_d210004_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210004_01+DC_d210004_01_90_04\" },\r\n    ],\r\n    d210005_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210005_01+DC_d210005_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210005_01+DC_d210005_01_90_04\" },\r\n    ],\r\n    d210006_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210006_01+DC_d210006_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210006_01+DC_d210006_01_90_04\" },\r\n    ],\r\n    d210007_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210007_01+DC_d210007_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210007_01+DC_d210007_01_90_04\" },\r\n    ],\r\n    d210008_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210008_01+DC_d210008_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210008_01+DC_d210008_01_90_04\" },\r\n    ],\r\n    d210011_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210011_01+DC_d210011_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210011_01+DC_d210011_01_90_04\" },\r\n    ],\r\n    d210012_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210012_01+DC_d210012_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210012_01+DC_d210012_01_90_04\" },\r\n    ],\r\n    d210013_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210013_01+DC_d210013_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210013_01+DC_d210013_01_90_04\" },\r\n    ],\r\n    d210014_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210014_01+DC_d210014_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210014_01+DC_d210014_01_90_04\" },\r\n    ],\r\n    d210015_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210015_01+DC_d210015_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210015_01+DC_d210015_01_90_04\" },\r\n    ],\r\n    d210021_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210021_01+DC_d210021_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210021_01+DC_d210021_01_90_04\" },\r\n    ],\r\n    d210022_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210022_01+DC_d210022_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210022_01+DC_d210022_01_90_04\" },\r\n    ],\r\n    d210023_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210023_01+DC_d210023_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210023_01+DC_d210023_01_90_04\" },\r\n    ],\r\n    d210050_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210050_01+DC_d210050_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210050_01+DC_d210050_01_90_04\" },\r\n    ],\r\n    d210075_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210075_01+DC_d210075_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210075_01+DC_d210075_01_90_04\" },\r\n    ],\r\n    d210089_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210022_01+DC_d210022_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210022_01+DC_d210022_01_90_04\" },\r\n    ],\r\n    d210090_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210022_01+DC_d210022_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210022_01+DC_d210022_01_90_04\" },\r\n    ],\r\n    d210058_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210011_01+DC_d210011_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210011_01+DC_d210011_01_90_04\" },\r\n    ],\r\n    d210059_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210021_01+DC_d210021_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210021_01+DC_d210021_01_90_04\" },\r\n    ],\r\n    d210060_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210021_01+DC_d210021_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210021_01+DC_d210021_01_90_04\" },\r\n    ],\r\n    d210061_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210021_01+DC_d210021_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210021_01+DC_d210021_01_90_04\" },\r\n    ],\r\n    d210062_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210021_01+DC_d210021_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210021_01+DC_d210021_01_90_04\" },\r\n    ],\r\n    d210063_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210022_01+DC_d210022_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210022_01+DC_d210022_01_90_04\" },\r\n    ],\r\n    d210064_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210022_01+DC_d210022_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210022_01+DC_d210022_01_90_04\" },\r\n    ],\r\n    d210065_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210022_01+DC_d210022_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210022_01+DC_d210022_01_90_04\" },\r\n    ],\r\n    d210066_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210022_01+DC_d210022_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210022_01+DC_d210022_01_90_04\" },\r\n    ],\r\n    d210067_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210023_01+DC_d210023_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210023_01+DC_d210023_01_90_04\" },\r\n    ],\r\n    d210068_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210023_01+DC_d210023_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210023_01+DC_d210023_01_90_04\" },\r\n    ],\r\n    d210069_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210023_01+DC_d210023_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210023_01+DC_d210023_01_90_04\" },\r\n    ],\r\n    d210070_01: [\r\n        { name: \"Dragon's Roost\", code: \"DC_d210023_01+DC_d210023_01_90_01\" },\r\n        { name: \"Receive Gift\", code: \"DC_d210023_01+DC_d210023_01_90_04\" },\r\n    ],\r\n};\r\n\r\nexport default dragonAni;\r\n","import Button from \"@material-ui/core/Button\";\r\n\r\nimport { initSettings } from \"./context/SettingsContext\";\r\nimport {\r\n    initKey,\r\n    WEAPON_CODE,\r\n    GENDER_CODE,\r\n    COMBO_LENGTH,\r\n    FS_LENGTH,\r\n    aniModList,\r\n    incompatibleModels,\r\n} from \"./consts\";\r\n\r\nimport { chainCodeToList } from \"./viewerHelpers\";\r\nimport dragonAni from \"./data/animationDragon\";\r\n\r\nexport const isBlade = code => code.startsWith(\"w302\");\r\n\r\nexport const isSheath = code => isBlade(code) && code.endsWith(\"02\");\r\n\r\nexport const isIncompatible = modelId =>\r\n    !modelId.startsWith(\"c\") ||\r\n    modelId.endsWith(\"_h\") ||\r\n    incompatibleModels.has(modelId);\r\n\r\nconst isCharaWithAni = modelId =>\r\n    modelId.startsWith(\"c\") &&\r\n    !modelId.endsWith(\"_h\") &&\r\n    !incompatibleModels.has(modelId);\r\n\r\nconst isDragon = modelId => modelId.startsWith(\"d\") || modelId === \"smith\";\r\n\r\nexport const getViewerType = modelId => {\r\n    if (isDragon(modelId)) return \"dragon\";\r\n\r\n    if (isCharaWithAni(modelId)) return \"chara\";\r\n\r\n    return \"base\";\r\n};\r\n\r\nexport const getDefaultAni = modelId => {\r\n    if (isDragon(modelId)) return dragonAni[modelId]?.[0].code;\r\n\r\n    if (isCharaWithAni(modelId)) return \"MWM_CMN+CMN_MWM_03\";\r\n\r\n    return \"\";\r\n};\r\n\r\nconst getDefaultFace = modelId => {\r\n    if (isDragon(modelId)) return 1;\r\n\r\n    return 2;\r\n};\r\n\r\nexport const callbackOnEach = (list, callback) => {\r\n    if (Array.isArray(list)) {\r\n        list.forEach(child => callback(child));\r\n        return;\r\n    }\r\n    callback(list);\r\n};\r\n\r\nexport const setInitialSettings = params => {\r\n    if (params.length === 0) return;\r\n    const defined = new Set();\r\n    params.forEach(param => {\r\n        if (!param) return;\r\n\r\n        const [keycode, ...value] = param.split(\"=\"); // animation code can have \"=\" inside\r\n        // if no value given, skip\r\n        if (!value[0]) return;\r\n\r\n        let setValue = value.length === 1 ? value[0] : value.join(\"=\");\r\n\r\n        switch (keycode) {\r\n            case \"et\":\r\n                defined.add(\"eyeTexture\");\r\n                break;\r\n            case \"mt\":\r\n                defined.add(\"mouthTexture\");\r\n                break;\r\n            case \"ei\":\r\n                defined.add(\"eyeIdx\");\r\n                break;\r\n            case \"mi\":\r\n                defined.add(\"mouthIdx\");\r\n                break;\r\n            case \"cc\":\r\n                defined.add(\"animation\");\r\n                // initialize chain maker chain\r\n                const chainList = chainCodeToList(setValue, \"Animation\");\r\n                initSettings[\"chainMaker\"][\"chain\"] = chainList;\r\n                break;\r\n            case \"bg\":\r\n                if (setValue !== \"transparent\") {\r\n                    setValue = `#${setValue}`;\r\n                }\r\n                break;\r\n            case \"cam\": // parameters in form x, y, z\r\n                setValue = setValue.split(\",\").map(n => parseFloat(n));\r\n                break;\r\n            default:\r\n        }\r\n        const { group, key } = initKey[keycode];\r\n\r\n        const isBooleanValue = setValue === \"true\" || setValue === \"false\";\r\n\r\n        initSettings[group][key] = isBooleanValue\r\n            ? Boolean(setValue === \"true\")\r\n            : setValue;\r\n    });\r\n\r\n    const modelId = initSettings[\"model\"][\"id\"];\r\n    initSettings[\"model\"][\"texture\"] = modelId;\r\n\r\n    if (!defined.has(\"eyeTexture\")) {\r\n        initSettings[\"model\"][\"eyeTexture\"] = modelId;\r\n    }\r\n    if (!defined.has(\"mouthTexture\")) {\r\n        initSettings[\"model\"][\"mouthTexture\"] = modelId;\r\n    }\r\n    if (!defined.has(\"eyeIdx\")) {\r\n        initSettings[\"model\"][\"eyeIdx\"] = getDefaultFace(modelId);\r\n    }\r\n    if (!defined.has(\"mouthIdx\")) {\r\n        initSettings[\"model\"][\"mouthIdx\"] = getDefaultFace(modelId);\r\n    }\r\n    if (!defined.has(\"animation\")) {\r\n        initSettings[\"animation\"][\"code\"] = getDefaultAni(modelId);\r\n    }\r\n};\r\n\r\nexport const generateChainCode = chain => {\r\n    const length = chain.length;\r\n    let output = \"\";\r\n    chain.forEach((ani, i) => {\r\n        const { fileName, aniName, faceChanges } = ani;\r\n        if (fileName) {\r\n            if (i === 0) {\r\n                output = output.concat(fileName);\r\n            } else {\r\n                output = output.concat(\r\n                    fileName !== chain[i - 1].fileName ? fileName : \"\"\r\n                );\r\n            }\r\n            output = output.concat(\"+\");\r\n        }\r\n        output = output.concat(aniName);\r\n\r\n        // Add modifiers\r\n        const modCode = generateAniModCode(ani);\r\n        output = output.concat(modCode);\r\n        const faceCode = generateFaceCode(faceChanges);\r\n        output = output.concat(faceCode);\r\n\r\n        if (i < length - 1) {\r\n            output = output.concat(\">\");\r\n        }\r\n    });\r\n    return output;\r\n};\r\n\r\nconst generateAniModCode = ani => {\r\n    let output = \"\";\r\n    Object.keys(aniModList).forEach(modKey => {\r\n        const { key, defaultValue } = aniModList[modKey];\r\n        if (ani[key] !== defaultValue) {\r\n            output = output.concat(`&${modKey}=${ani[key]}`);\r\n        }\r\n    });\r\n    return output;\r\n};\r\n\r\nconst generateFaceCode = faceChanges => {\r\n    if (!faceChanges) return \"\";\r\n    let output = \"\";\r\n    faceChanges.forEach(change => {\r\n        const { time, eyeIdx, mouthIdx } = change;\r\n        if (!time) return;\r\n        if (eyeIdx) {\r\n            output = output.concat(`&e-${time}=${eyeIdx}`);\r\n        }\r\n        if (mouthIdx) {\r\n            output = output.concat(`&m-${time}=${mouthIdx}`);\r\n        }\r\n    });\r\n    return output;\r\n};\r\n\r\nexport const collectFilter = toggleState => {\r\n    let collected = {};\r\n    Object.keys(toggleState).forEach(key => {\r\n        let tmp = [];\r\n        Object.keys(toggleState[key]).forEach(k => {\r\n            if (toggleState[key][k]) {\r\n                tmp.push(k);\r\n            }\r\n        });\r\n        collected[key] = tmp;\r\n    });\r\n    return collected;\r\n};\r\n\r\nexport const multiCondFilter = (input, filters) => {\r\n    const filterKeys = Object.keys(filters);\r\n\r\n    return input.filter(el => {\r\n        return filterKeys.every(key => {\r\n            if (!filters[key].length) return true;\r\n            return filters[key].includes(el[key]);\r\n        });\r\n    });\r\n};\r\n\r\nexport const complementaryColor = color => {\r\n    const hexColor = color.replace(\"#\", \"0x\");\r\n\r\n    return `#${(\"000000\" + (\"0xffffff\" ^ hexColor).toString(16)).slice(-6)}`;\r\n};\r\n\r\nconst hexToRgb = hex => {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result\r\n        ? {\r\n              r: parseInt(result[1], 16),\r\n              g: parseInt(result[2], 16),\r\n              b: parseInt(result[3], 16),\r\n          }\r\n        : null;\r\n};\r\n\r\nexport const getBrightness = ({ r, g, b }) =>\r\n    (r * 299 + g * 587 + b * 114) / 1000;\r\n\r\nexport const getTextColor = color => {\r\n    const rgb = hexToRgb(color);\r\n    return getBrightness(rgb) > 128 ? \"#000000\" : \"#ffffff\";\r\n};\r\n\r\nexport const aniButtonsFromObject = (object, handleSelect, groupName) => {\r\n    if (!object) return null;\r\n    const style = { maxWidth: \"13.5rem\" };\r\n    return Object.keys(object).map(key => (\r\n        <Button\r\n            variant=\"contained\"\r\n            key={key}\r\n            data-value={object[key]}\r\n            data-name={`${groupName ? `${groupName} ` : \"\"}${key}`}\r\n            onClick={handleSelect}\r\n            style={style}\r\n        >\r\n            {key}\r\n        </Button>\r\n    ));\r\n};\r\n\r\n// Animation chain code generator\r\nexport const getStandbyCode = (weapon, gender) =>\r\n    `LOB_${WEAPON_CODE[weapon]}+${WEAPON_CODE[weapon]}_ONT_${GENDER_CODE[gender]}`;\r\n\r\nexport const getVictoryCode = weapon =>\r\n    `WIN_${WEAPON_CODE[weapon]}+${WEAPON_CODE[weapon]}_WIN_01>+${WEAPON_CODE[weapon]}_WIN_02`;\r\n\r\nexport const getDashAtkCode = weapon => `DAS+${WEAPON_CODE[weapon]}_DAS_02`;\r\n\r\nexport const getRollCode = weapon => `ROL+${WEAPON_CODE[weapon]}_ROL_01`;\r\n\r\nexport const getComboCode = weapon => {\r\n    const comboLength = COMBO_LENGTH[weapon];\r\n    const code = WEAPON_CODE[weapon];\r\n    let result = `CMB_${code}`;\r\n    for (let i = 1; i <= comboLength; i++) {\r\n        result = result.concat(`+${code}_CMB_0${i}>`);\r\n    }\r\n    result = result.slice(0, -1); // Remove last '>' character\r\n    return result;\r\n};\r\n\r\n// Force Strike chain code\r\nexport const getFSCode = weapon => {\r\n    const fsAniLength = FS_LENGTH[weapon];\r\n    const code = WEAPON_CODE[weapon];\r\n    let result = `FS_${code}`;\r\n    // Weapon combo has 5 animations each\r\n    for (let i = 1; i <= fsAniLength; i++) {\r\n        result = result.concat(`+${code}_CHR_0${i}>`);\r\n    }\r\n    result = result.slice(0, -1); // Remove last '>' character\r\n    return result;\r\n};\r\n\r\n// Join Lobby chain code\r\nexport const getLobbyCode = (weapon, gender) => {\r\n    const code = WEAPON_CODE[weapon];\r\n    if (gender === \"Male\")\r\n        return `LOB_${code}+${code}_ONT_05&ts=-0.5>+${code}_ONT_02>+${code}_ONT_07>+${code}_ONT_08>+${code}_ONT_21`;\r\n    // Female\r\n    return `LOB_${code}+${code}_ONT_06&ts=-0.5>+${code}_ONT_04>+${code}_ONT_09>+${code}_ONT_10>+${code}_ONT_23`;\r\n};\r\n","import {\r\n    lazy,\r\n    Suspense,\r\n    useRef,\r\n    useEffect,\r\n    useContext,\r\n    useCallback,\r\n} from \"react\";\r\n\r\nimport { SettingsContext, DispatchContext } from \"./context/SettingsContext\";\r\nimport \"./styles/Display.css\";\r\n\r\nimport { getTextColor, getViewerType, getDefaultAni } from \"./helpers\";\r\nimport {\r\n    cameraPositions,\r\n    controlsPositions,\r\n    DEFAULT_FACE_IDX,\r\n    DEFAULT_DRAGON_FACE_IDX,\r\n} from \"./consts\";\r\n\r\nconst AniControl = lazy(() => import(\"./AniControl\"));\r\nconst BaseViewer = lazy(() => import(\"./BaseViewer\"));\r\nconst CharaViewer = lazy(() => import(\"./CharaViewer\"));\r\nconst DragonViewer = lazy(() => import(\"./DragonViewer\"));\r\n\r\nconst viewers = { base: BaseViewer, chara: CharaViewer, dragon: DragonViewer };\r\nconst defaultFace = {\r\n    chara: DEFAULT_FACE_IDX,\r\n    dragon: DEFAULT_DRAGON_FACE_IDX,\r\n};\r\n\r\nfunction Display(props) {\r\n    const activeViewer = useRef(\"\");\r\n    const { viewport } = props;\r\n\r\n    const settings = useContext(SettingsContext);\r\n    const {\r\n        model: { id: modelId },\r\n        scene: { rotateSpeed, background: bgColor, initCameraPosition, lights },\r\n        app: { showAniControl, antiAliasing },\r\n    } = settings;\r\n\r\n    const dispatch = useContext(DispatchContext);\r\n    const toggleCapture = useCallback(() => {\r\n        const action = {\r\n            type: \"toggle\",\r\n            key: \"capture\",\r\n            value: \"enable\",\r\n        };\r\n        dispatch(action);\r\n    }, [dispatch]);\r\n\r\n    const modelType = modelId[0];\r\n\r\n    const defaultCameraPosition =\r\n        cameraPositions[modelId] || cameraPositions[modelType];\r\n\r\n    const cameraPosition = initCameraPosition\r\n        ? initCameraPosition.map((n, i) =>\r\n              isNaN(n) ? defaultCameraPosition[i] : n\r\n          )\r\n        : defaultCameraPosition;\r\n\r\n    const controlsPosition =\r\n        controlsPositions[modelId] || controlsPositions[modelType];\r\n\r\n    const resetAni = useCallback(\r\n        id => {\r\n            const defaultAni = getDefaultAni(id);\r\n            const action = {\r\n                type: \"update\",\r\n                key: \"animation\",\r\n                value: { code: defaultAni },\r\n            };\r\n            dispatch(action);\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const resetFace = useCallback(\r\n        type => {\r\n            const defaultIdx = defaultFace[type] || 1;\r\n            const action = {\r\n                type: \"update\",\r\n                key: \"model\",\r\n                value: { eyeIdx: defaultIdx, mouthIdx: defaultIdx },\r\n            };\r\n            dispatch(action);\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const newViewerType = getViewerType(modelId);\r\n        if (activeViewer.current === newViewerType) return;\r\n\r\n        if (activeViewer.current) {\r\n            resetFace(newViewerType);\r\n            resetAni(modelId);\r\n        }\r\n        activeViewer.current = newViewerType;\r\n    }, [modelId, resetAni, resetFace]);\r\n\r\n    const viewerType = getViewerType(modelId);\r\n    const ModelViewer = viewers[viewerType];\r\n\r\n    return (\r\n        <div className=\"Display\">\r\n            {showAniControl && (\r\n                <div\r\n                    className=\"Display-AniControl\"\r\n                    style={{ color: getTextColor(bgColor) }}\r\n                >\r\n                    <Suspense fallback={null}>\r\n                        <AniControl value={settings.animation.timeScale} />\r\n                    </Suspense>\r\n                </div>\r\n            )}\r\n            <Suspense fallback={null}>\r\n                <ModelViewer\r\n                    setIsLoading={props.setIsLoading}\r\n                    capture={settings.capture}\r\n                    toggleCapture={toggleCapture}\r\n                    viewport={viewport}\r\n                    cameraPosition={cameraPosition}\r\n                    controlsPosition={controlsPosition}\r\n                    model={settings.model}\r\n                    materialParams={settings.materialParams}\r\n                    outline={settings.outline}\r\n                    animation={settings.animation}\r\n                    rotateSpeed={rotateSpeed}\r\n                    lights={lights}\r\n                    bgColor={bgColor}\r\n                    antiAliasing={antiAliasing}\r\n                    ascii={settings.ascii}\r\n                />\r\n            </Suspense>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Display;\r\n","import { lazy, Suspense, useState, useRef, useEffect, useContext } from \"react\";\r\nimport useToggleState from \"./hooks/useToggleState\";\r\n\r\nimport Menu from \"@material-ui/icons/Menu\";\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport useStyles from \"./styles/MainPageStyles\";\r\n\r\nimport Display from \"./Display\";\r\nimport { SettingsContext } from \"./context/SettingsContext\";\r\nimport { setInitialSettings } from \"./helpers\";\r\n\r\nconst ControlPanel = lazy(() => import(\"./ControlPanel\"));\r\nconst SideBar = lazy(() => import(\"./SideBar\"));\r\n\r\nfunction MainPage({ location }) {\r\n    const classes = useStyles();\r\n\r\n    const [currentMode, setCurrentMode] = useState(\"model\");\r\n    const [sidebarOpen, toggleSidebarOpen] = useToggleState(true);\r\n    const [controlOpen, toggleControlOpen] = useToggleState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [initLoadDone, setInitLoadDone] = useState(false);\r\n    const handleSelect = useRef(null);\r\n    const {\r\n        app: { showSettings },\r\n    } = useContext(SettingsContext);\r\n\r\n    const viewerRef = useRef();\r\n    const [viewport, setViewport] = useState({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const params = location.pathname.split(\"/\");\r\n        setInitialSettings(params);\r\n        setInitLoadDone(true);\r\n\r\n        window.addEventListener(\"resize\", updateViewportSize);\r\n\r\n        return function () {\r\n            window.removeEventListener(\"resize\", updateViewportSize);\r\n        };\r\n    }, [location.pathname]);\r\n\r\n    const updateViewportSize = () => {\r\n        const height = viewerRef.current.clientHeight;\r\n        const width = viewerRef.current.clientWidth;\r\n        setViewport({ width, height });\r\n    };\r\n\r\n    const openControl = (mode, handler) => {\r\n        setCurrentMode(mode);\r\n        handleSelect.current = handler;\r\n        toggleControlOpen();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isLoading && <div className={classes.loadingMsg}>Loading...</div>}\r\n            <div className={classes.root}>\r\n                <Suspense fallback={null}>\r\n                    <CssBaseline />\r\n                    <ControlPanel\r\n                        mode={currentMode}\r\n                        handleSelect={handleSelect.current}\r\n                        open={controlOpen}\r\n                        toggleControlOpen={toggleControlOpen}\r\n                    />\r\n                    {initLoadDone && showSettings && (\r\n                        <>\r\n                            <button\r\n                                onClick={toggleSidebarOpen}\r\n                                className={classes.openSidebarButton}\r\n                            >\r\n                                <Menu />\r\n                            </button>\r\n\r\n                            <SideBar\r\n                                toggleSidebarOpen={toggleSidebarOpen}\r\n                                open={sidebarOpen}\r\n                                openControl={openControl}\r\n                            />\r\n                        </>\r\n                    )}\r\n                </Suspense>\r\n                {initLoadDone && (\r\n                    <main ref={viewerRef} className={classes.content}>\r\n                        <Display\r\n                            setIsLoading={setIsLoading}\r\n                            viewport={viewport}\r\n                        />\r\n                    </main>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MainPage;\r\n","import { SettingsProvider } from \"./context/SettingsContext\";\r\n\r\nimport { Route, HashRouter } from \"react-router-dom\";\r\nimport MainPage from \"./MainPage\";\r\n\r\nimport \"./styles/App.css\";\r\n\r\nfunction App() {\r\n    return (\r\n        <SettingsProvider>\r\n            <HashRouter>\r\n                <Route render={routeProps => <MainPage {...routeProps} />} />\r\n            </HashRouter>\r\n        </SettingsProvider>\r\n    );\r\n}\r\n\r\nexport const fbxSource = process.env.PUBLIC_URL;\r\n\r\nexport default App;\r\n","import * as THREE from \"three\";\r\nimport { fbxSource } from \"./App\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nimport { idxOffsets } from \"./consts\";\r\nimport textureOffsets from \"./data/face_offset\";\r\n\r\nimport { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\";\r\nimport { callbackOnEach } from \"./helpers\";\r\nimport {\r\n    matCommonParams,\r\n    matExtraParams,\r\n    matColorParams,\r\n    needsUpdateParams,\r\n} from \"./consts\";\r\n\r\nimport outlineFragShader from \"./shader/outlineFragShader\";\r\nimport outlineVertShader from \"./shader/outlineVertShader\";\r\n\r\nexport const loadModel = url => {\r\n    return (\r\n        url &&\r\n        new Promise(resolve => {\r\n            new FBXLoader().load(url, resolve);\r\n        })\r\n    );\r\n};\r\n\r\nexport const loadTexture = url => {\r\n    return (\r\n        url &&\r\n        new Promise(resolve => {\r\n            new THREE.TextureLoader().load(url, resolve);\r\n        })\r\n    );\r\n};\r\n\r\nexport const createInvisibleFloor = () => {\r\n    const floorGeometry = new THREE.PlaneBufferGeometry(0.1, 0.1);\r\n    floorGeometry.rotateX(Math.PI / 2);\r\n    const floorMaterial = new THREE.MeshBasicMaterial();\r\n    floorMaterial.visible = false;\r\n    return new THREE.Mesh(floorGeometry, floorMaterial);\r\n};\r\n\r\nconst getMeshes = (object, getOutline = false) => {\r\n    if (!object) return [];\r\n\r\n    const meshes = [];\r\n    object.traverse(child => {\r\n        if (!child.isMesh) return;\r\n        if (!getOutline && child.name === \"outline\") return;\r\n\r\n        meshes.unshift(child);\r\n    });\r\n    return meshes;\r\n};\r\n\r\nexport const getMaterial = object => {\r\n    if (!object) return [];\r\n\r\n    const meshes = getMeshes(object);\r\n    const materials = meshes.flatMap(mesh => mesh.material);\r\n    return materials;\r\n};\r\n\r\nexport const filterObject = (object, keys) => {\r\n    const entries = Object.entries(object);\r\n    const filtered = entries.filter(([key, _]) => keys.includes(key));\r\n    return Object.fromEntries(filtered);\r\n};\r\n\r\nexport const getModelPath = id => `${fbxSource}/fbx/${id}/${id}.fbx`;\r\n\r\nexport const getTexturePath = id => `${fbxSource}/fbx/${id}/${id}.png`;\r\n\r\nexport const analyzeWeaponCode = code => {\r\n    if (!code) return \"\";\r\n    const flipped = code.endsWith(\"b\");\r\n    const weaponCode = code.substring(0, code.length - 1);\r\n    const modelPath = getModelPath(weaponCode);\r\n    const texturePath = getTexturePath(weaponCode);\r\n\r\n    return { modelPath, texturePath, flipped };\r\n};\r\n\r\nexport const disposeItem = item => {\r\n    if (!item) return;\r\n\r\n    const disposedList = new Set();\r\n\r\n    const notDisposed = object => !disposedList.has(object.uuid);\r\n\r\n    const needToDispose = object => object && notDisposed(object);\r\n\r\n    const disposeObject = object => {\r\n        disposedList.add(object.uuid);\r\n        object.dispose();\r\n    };\r\n    const dispose = object => {\r\n        if (needToDispose(object)) disposeObject(object);\r\n    };\r\n    const disposeMaterial = object => {\r\n        callbackOnEach(object.material, mat => {\r\n            dispose(mat.map);\r\n            dispose(mat.backupMap);\r\n            dispose(mat);\r\n        });\r\n    };\r\n\r\n    const meshes = getMeshes(item, true);\r\n    meshes.forEach(mesh => {\r\n        disposeMaterial(mesh);\r\n        dispose(mesh.geometry);\r\n    });\r\n};\r\n\r\nexport const getParamsList = matType => [\r\n    ...matCommonParams,\r\n    ...matExtraParams[matType],\r\n];\r\n\r\nexport const isDragon = modelId =>\r\n    modelId.startsWith(\"d\") || modelId === \"smith\";\r\n\r\n// Hide all eye and mouth that's not mEye_01 or mMouth_01\r\nexport const initDragonFace = model => {\r\n    const nameRegex = /m[A-Z].*_[0-9]/m;\r\n    model.traverse(child => {\r\n        if (!child.isMesh) return;\r\n\r\n        const { name } = child;\r\n        if (nameRegex.test(name)) {\r\n            child.visible = name.includes(\"01\");\r\n        }\r\n    });\r\n};\r\n\r\nexport const getDragonEye = model => {\r\n    const eyes = [];\r\n    const nameRegex = /mEye_[0-9]/m;\r\n    model.traverse(child => {\r\n        if (!child.isMesh) return;\r\n\r\n        const { name } = child;\r\n        if (nameRegex.test(name)) {\r\n            eyes.push(child);\r\n        }\r\n    });\r\n    return eyes;\r\n};\r\n\r\nexport const getDragonMouth = model => {\r\n    const mouths = [];\r\n    const nameRegex = /mMouth_[0-9]/m;\r\n    model.traverse(child => {\r\n        if (!child.isMesh) return;\r\n\r\n        const { name } = child;\r\n        if (nameRegex.test(name)) {\r\n            mouths.push(child);\r\n        }\r\n    });\r\n    return mouths;\r\n};\r\n\r\nexport const removeEffects = model => {\r\n    const meshes = getMeshes(model);\r\n    meshes.forEach(mesh => (mesh.visible = !mesh.name.includes(\"Effect\")));\r\n};\r\n\r\nconst createNewMaterial = (materialType, params) => {\r\n    const matType = `Mesh${materialType}Material`;\r\n    return new THREE[matType](params);\r\n};\r\n\r\nexport const changeMaterial = (\r\n    target,\r\n    { materialType, texturePath, forced = false }\r\n) => {\r\n    if (!target) return;\r\n\r\n    const meshes = getMeshes(target);\r\n    meshes.forEach(mesh => {\r\n        const materials = [mesh.material].flat();\r\n        const matIsArray = Array.isArray(mesh.material);\r\n\r\n        if (!forced && !texturePath) {\r\n            const checkParam = `isMesh${materialType}Material`;\r\n            const needToChange = materials.some(mat => !mat[checkParam]);\r\n            if (!needToChange) return;\r\n        }\r\n\r\n        materials.forEach((mat, i) => {\r\n            const texture = texturePath\r\n                ? new THREE.TextureLoader().load(texturePath)\r\n                : materials[i].map;\r\n\r\n            if (texturePath) texture.encoding = THREE.sRGBEncoding;\r\n\r\n            const initParams = {\r\n                map: texture,\r\n                skinning: true,\r\n            };\r\n            const newMaterial = createNewMaterial(materialType, initParams);\r\n            newMaterial.name = mat.name;\r\n            if (mat.backupMap) newMaterial.backupMap = mat.backupMap;\r\n\r\n            if (texturePath) {\r\n                mat.map?.dispose?.();\r\n                mat.backupMap?.dispose?.();\r\n            }\r\n            mat.dispose();\r\n\r\n            if (matIsArray) {\r\n                mesh.material[i] = newMaterial;\r\n            } else {\r\n                mesh.material = newMaterial;\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n// Add outline to object and return reference to outlines\r\nexport const createOutline = (object, params) => {\r\n    if (!object) return;\r\n\r\n    const outlines = []; // return value\r\n\r\n    const skip = [\"Eye\", \"Mouth\", \"Effect\"];\r\n    const meshes = getMeshes(object);\r\n    meshes.forEach(mesh => {\r\n        const { name } = mesh;\r\n        if (skip.some(word => name.includes(word))) return;\r\n\r\n        const outline = mesh.clone();\r\n        outlines.push(outline);\r\n\r\n        const newMaterial = createOutlineMaterial(params);\r\n        replaceMaterial(outline, newMaterial);\r\n        outline.visible = params.enable;\r\n        outline.name = \"outline\";\r\n\r\n        if (mesh.isSkinnedMesh) {\r\n            outline.bind(mesh.skeleton, mesh.bindMatrix);\r\n        }\r\n        mesh.parent.add(outline);\r\n    });\r\n    return outlines;\r\n};\r\n\r\nconst createOutlineMaterial = ({ size, color, opacity }) => {\r\n    const uniforms = {\r\n        size: { type: \"float\", value: size },\r\n        color: { tyle: \"vec3\", value: new THREE.Color(color) },\r\n        opacity: { type: \"float\", value: opacity },\r\n    };\r\n\r\n    const material = new THREE.ShaderMaterial({\r\n        skinning: true,\r\n        side: THREE.BackSide,\r\n        transparent: true,\r\n        uniforms,\r\n        fragmentShader: outlineFragShader,\r\n        vertexShader: outlineVertShader,\r\n    });\r\n    return material;\r\n};\r\n\r\nexport const applyOutlineSettings = (outline, settings) => {\r\n    if (!outline || !settings) return;\r\n\r\n    const { material } = outline;\r\n    settings.forEach((value, key) => {\r\n        switch (key) {\r\n            case \"enable\":\r\n                outline.visible = value;\r\n                break;\r\n            case \"color\":\r\n                callbackOnEach(\r\n                    material,\r\n                    mat => (mat.uniforms.color.value = new THREE.Color(value))\r\n                );\r\n                break;\r\n            default:\r\n                callbackOnEach(\r\n                    material,\r\n                    mat => (mat.uniforms[key].value = value)\r\n                );\r\n        }\r\n    });\r\n};\r\n\r\n// replace material of an object\r\nconst replaceMaterial = (object, newMaterial) => {\r\n    const { material } = object;\r\n    // dispose old material\r\n    callbackOnEach(material, mat => {\r\n        mat.map.dispose?.();\r\n        mat.backupMap?.dispose?.();\r\n        mat.dispose();\r\n    });\r\n    // apply new material\r\n    const matIsArray = Array.isArray(object.material);\r\n    object.material = matIsArray\r\n        ? new Array(object.material.length).fill(newMaterial)\r\n        : newMaterial;\r\n};\r\n\r\nexport const calculateTextureOffset = (currentTexture, prevTexture) => {\r\n    const offset = { x: 0, y: 0 };\r\n    if (currentTexture !== prevTexture) {\r\n        const prevOffset = textureOffsets[prevTexture] || { x: 0, y: 0 };\r\n        const currentOffset = textureOffsets[currentTexture] || { x: 0, y: 0 };\r\n\r\n        offset.x = currentOffset.x - prevOffset.x;\r\n        offset.y = currentOffset.y - prevOffset.y;\r\n    }\r\n    return offset;\r\n};\r\n\r\nexport const calculateIdxOffset = (currentIdx, prevIdx) => {\r\n    const offset = { x: 0, y: 0 };\r\n    if (currentIdx !== prevIdx) {\r\n        const prevOffset = idxOffsets[`face${prevIdx}`];\r\n        const currentOffset = idxOffsets[`face${currentIdx}`];\r\n\r\n        offset.x = currentOffset.x - prevOffset.x;\r\n        offset.y = currentOffset.y - prevOffset.y;\r\n    }\r\n    return offset;\r\n};\r\n\r\nconst applyOffset = part => (target, offset) => {\r\n    target.traverse(child => {\r\n        if (child.name !== \"mBodyAll\" || child.geometry.groups.length !== 3)\r\n            return;\r\n\r\n        const targetGroup = child.geometry.groups.find(\r\n            group => child.material[group.materialIndex].name === `mt${part}CH`\r\n        );\r\n        if (!targetGroup) return;\r\n\r\n        const { start, count } = targetGroup;\r\n        const end = start + count;\r\n        const uv = child.geometry.attributes.uv;\r\n        for (let i = start; i < end; i++) {\r\n            const u = uv.getX(i) + 0.25 * offset.x;\r\n            const v = uv.getY(i) + 0.25 * offset.y;\r\n            uv.setXY(i, u, v);\r\n        }\r\n        uv.needsUpdate = true;\r\n    });\r\n};\r\n\r\nexport const applyEyeOffset = applyOffset(\"Eye\");\r\nexport const applyMouthOffset = applyOffset(\"Mouth\");\r\n// export const applyBodyOffset = applyOffset(\"BodyAll\");\r\n\r\nconst applyTexture = part => (target, { materialType, textureId }) => {\r\n    const texturePath = getTexturePath(textureId);\r\n    const texture = new THREE.TextureLoader().load(texturePath);\r\n    texture.encoding = THREE.sRGBEncoding;\r\n\r\n    const materialParams = {\r\n        map: texture,\r\n        skinning: true,\r\n    };\r\n    const newMaterial = createNewMaterial(materialType, materialParams);\r\n    target.traverse(child => {\r\n        if (child.name !== \"mBodyAll\" || child.geometry.groups.length !== 3)\r\n            return;\r\n        const targetGroup = child.geometry.groups.find(\r\n            group => child.material[group.materialIndex].name === `mt${part}CH`\r\n        );\r\n        if (!targetGroup) return;\r\n\r\n        const { materialIndex } = targetGroup;\r\n        newMaterial.name = child.material[materialIndex].name;\r\n\r\n        child.material[materialIndex] = newMaterial;\r\n    });\r\n};\r\n\r\nexport const applyEyeTexture = applyTexture(\"Eye\");\r\nexport const applyMouthTexture = applyTexture(\"Mouth\");\r\n// export const applyBodyTexture = applyTexture(\"BodyAll\");\r\n\r\n// Chain Code is invalid if starts with the character \"+\"\r\nexport const analyzeChainCode = code => {\r\n    if (!code) return [\"\", \"\"];\r\n    const aniCodes = code.split(\">\");\r\n    const nAni = aniCodes.length;\r\n    const fileList = [];\r\n    const animationList = [];\r\n    for (let i = 0; i < nAni; i++) {\r\n        let timeScale = 1,\r\n            repetitions = 1,\r\n            fileIdx = null,\r\n            aniName = null,\r\n            fileName = null,\r\n            details,\r\n            currentAni = {},\r\n            faceChanges = [];\r\n        const currentParts = aniCodes[i].split(\"+\");\r\n        const fromModelFile = currentParts.length === 1;\r\n        if (fromModelFile) {\r\n            details = currentParts[0];\r\n        } else {\r\n            [fileName, details] = currentParts;\r\n            fileIdx = fileList.length - 1;\r\n        }\r\n        if (fileName) {\r\n            fileIdx = fileList.length;\r\n            fileList.push(fileName);\r\n        }\r\n        if (details.includes(\"&\")) {\r\n            const [name, ...settings] = details.split(\"&\");\r\n            aniName = name;\r\n            for (let setting of settings) {\r\n                const [key, value] = setting.split(\"=\");\r\n                if (key === \"ts\") {\r\n                    timeScale = parseFloat(value);\r\n                }\r\n                if (key === \"r\") {\r\n                    repetitions = value === \"inf\" ? Infinity : parseInt(value);\r\n                }\r\n                if (key.includes(\"-\")) {\r\n                    const [part, time] = key.split(\"-\");\r\n                    const faceMod = { time: parseFloat(time) };\r\n                    const indexName = `${part === \"e\" ? \"eye\" : \"mouth\"}Idx`;\r\n                    faceMod[indexName] = value;\r\n                    faceChanges.push(faceMod);\r\n                }\r\n            }\r\n        } else {\r\n            aniName = details;\r\n        }\r\n        currentAni = {\r\n            fileIdx,\r\n            aniName,\r\n            timeScale,\r\n            repetitions,\r\n            faceChanges: processFaceChanges(faceChanges),\r\n        };\r\n        animationList.push(currentAni);\r\n    }\r\n    return [fileList, animationList];\r\n};\r\n\r\nexport const processFaceChanges = faceChanges => {\r\n    if (!faceChanges.length) return faceChanges;\r\n\r\n    const sorted = faceChanges.sort(change => change.time);\r\n    const timeStamps = new Set(faceChanges.map(change => change.time));\r\n    if (faceChanges.length === timeStamps.size) {\r\n        sorted.forEach(change => {\r\n            change.id = uuid();\r\n        });\r\n        return sorted;\r\n    }\r\n\r\n    const simplified = [];\r\n    timeStamps.forEach(time => {\r\n        let output = { time, id: uuid(), eyeIdx: \"\", mouthIdx: \"\" };\r\n        const changes = sorted.filter(change => change.time === time);\r\n        changes.forEach(change => (output = Object.assign(output, change)));\r\n        simplified.push(output);\r\n    });\r\n    return simplified;\r\n};\r\n\r\nexport const getFaceChangesArray = (faceChanges, repetitions) => {\r\n    if (!faceChanges) return [];\r\n    if (repetitions === 1) return [...faceChanges];\r\n    // [0, 100, 200,...]\r\n    const timeOffset = new Array(repetitions).fill().map((_, i) => i * 100);\r\n\r\n    const offsetFaceChanges = offset =>\r\n        faceChanges.map(({ time, id, ...others }) => ({\r\n            ...others,\r\n            time: time + offset,\r\n        }));\r\n\r\n    return timeOffset.flatMap(offsetFaceChanges);\r\n};\r\n\r\nexport const chainCodeToList = (code, name) => {\r\n    const [fileList, animationList] = analyzeChainCode(code);\r\n    const length = animationList.length;\r\n    const output = animationList.map((ani, i) => {\r\n        const { fileIdx, aniName, timeScale, repetitions, faceChanges } = ani;\r\n        const partName = name.concat(length > 1 ? `#${i + 1}` : \"\");\r\n        const listItem = {\r\n            name: partName,\r\n            fileName: fileList[fileIdx],\r\n            aniName,\r\n            timeScale,\r\n            repetitions,\r\n            faceChanges,\r\n            id: uuid(),\r\n        };\r\n        return listItem;\r\n    });\r\n    return output;\r\n};\r\n\r\nexport const createGradientMap = nTones => {\r\n    const colors = new Uint8Array(nTones).map((_, i) => (i * 256) / nTones);\r\n    const map = new THREE.DataTexture(colors, nTones, 1, THREE.LuminanceFormat);\r\n    map.minFilter = THREE.NearestFilter;\r\n    map.magFilter = THREE.NearestFilter;\r\n    map.generateMipmaps = false;\r\n\r\n    return map;\r\n};\r\n\r\nexport const getUpdated = (prev, current) => {\r\n    const updated = Object.entries(current).filter(\r\n        ([key, value]) => value !== prev[key]\r\n    );\r\n    return updated;\r\n};\r\n\r\nexport const applyMaterialParam = (materials, [key, value]) => {\r\n    let handler;\r\n    const needsUpdate = needsUpdateParams.includes(key);\r\n    switch (key) {\r\n        case \"gradientMap\":\r\n            const nTones = parseInt(value);\r\n            const newMap = nTones ? createGradientMap(nTones) : null;\r\n            handler = mat => (mat.gradientMap = newMap);\r\n            break;\r\n        case \"useTexture\":\r\n            handler = value\r\n                ? mat => {\r\n                      mat.map = mat.backupMap;\r\n                      mat.backupMap = null;\r\n                  }\r\n                : mat => {\r\n                      mat.backupMap = mat.map;\r\n                      mat.map = null;\r\n                  };\r\n            break;\r\n        default:\r\n            const isColor = matColorParams.includes(key);\r\n            handler = mat =>\r\n                (mat[key] = isColor ? new THREE.Color(value) : value);\r\n    }\r\n\r\n    materials.forEach(mat => {\r\n        handler(mat);\r\n        mat.needsUpdate = needsUpdate;\r\n    });\r\n};\r\n\r\nexport const updateMatParams = (model, { prevParams = {}, params }) => {\r\n    const materials = getMaterial(model);\r\n    const updated = getUpdated(prevParams, params);\r\n    updated.forEach(update => {\r\n        applyMaterialParam(materials, update);\r\n    });\r\n};\r\n","const outlineFragShader = `#define OUTLINE\r\nuniform float opacity;\r\nuniform vec3 color;\r\nvoid main() {\r\n\tgl_FragColor = vec4( color, opacity );\r\n}`;\r\n\r\nexport default outlineFragShader;\r\n","const outlineVertShader = `#define OUTLINE\r\nuniform float size;\r\nvarying vec3 vViewPosition;\r\n#include <common>\r\n#include <color_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\nvoid main() {\r\n\t#include <color_vertex>\r\n\t#include <beginnormal_vertex>\r\n\t#include <morphnormal_vertex>\r\n\t#include <skinbase_vertex>\r\n\t#include <skinnormal_vertex>\r\n\t#include <defaultnormal_vertex>\r\n\t\r\n    vec3 transformed = position + objectNormal*0.0005*size;\r\n        \r\n\t#include <skinning_vertex>\r\n\t#include <project_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\tvViewPosition = - mvPosition.xyz;\r\n\t#include <worldpos_vertex>\r\n}`;\r\n\r\nexport default outlineVertShader;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nfunction useToggleState(initVal = false) {\r\n    const [state, setState] = useState(initVal);\r\n    const toggleState = useCallback(() => {\r\n        setState(state => !state);\r\n    }, [setState]);\r\n    return [state, toggleState];\r\n}\r\n\r\nexport default useToggleState;\r\n","const faceOffset = {\r\n    c110296_02: { x: 0.043, y: -0.0625 }, // Forager Mitsuba\r\n    c100004_17: { x: 0.043, y: -0.0625 }, // Forager Cleo\r\n    c110371_01: { x: 0.043, y: -0.0625 }, // Pecorine\r\n    c110350_02: { x: 0.043, y: -0.0625 }, // Formal Joachim\r\n    c110340_02: { x: 0.043, y: -0.0625 }, // Formal Noelle\r\n    c110018_02: { x: 0.043, y: -0.0625 }, // Opera Karina\r\n    c110370_01: { x: 0.043, y: -0.0625 }, // Lapis\r\n    c100015_04: { x: 0.05, y: -0.08 }, // Chelle\r\n    c110342_01: { x: 0, y: -0.02 }, // Chelsea\r\n    c110267_01: { x: 0.08, y: -0.03 }, // Hawk\r\n    c110050_02: { x: 0.07, y: 0.13 }, // HBerserker\r\n    c110291_01: { x: 0.07, y: 0.14 }, // Marth\r\n    c110354_01: { x: 0.07, y: 0.01 }, // Mega Man\r\n    c110345_01: { x: 0.08, y: 0.15 }, // Mitsuhide\r\n    c110266_01: { x: 0.01, y: 0.03 }, // Naveed\r\n    c110365_01: { x: 0.043, y: -0.0625 }, // Nevin\r\n    c110346_01: { x: 0.07, y: 0.08 }, // Nobunaga\r\n    c110366_01: { x: 0.043, y: -0.0625 }, // Pinon\r\n    c110299_02: { x: 0.07, y: 0.08 }, // RXZ\r\n    c110360_01: { x: 0.07, y: 0.14 }, // Tiki\r\n    c110307_01: { x: 0.08, y: -0.03 }, // Victor\r\n    c110322_01: { x: 0.043, y: 0.08 }, // Zhu Bajie\r\n    c110356_01: { x: 0.07, y: 0.08 }, // Gauld\r\n    c110300_01: { x: 0.07, y: -0.1 }, // Pipple\r\n    c110344_01: { x: 0.07, y: -0.02 }, // Yuya\r\n    c110053_03: { x: 0.043, y: -0.0625 }, // INefi\r\n    c110368_01: { x: 0.043, y: -0.0625 }, // Meene\r\n    c110367_01: { x: 0.043, y: -0.0625 }, // Ilia\r\n    c110003_02: { x: 0.043, y: -0.0625 }, // Gun Joe\r\n    c110270_02: { x: 0.043, y: -0.0625 }, // HMelsa\r\n    c110341_03: { x: 0.043, y: -0.0625 }, // Hakasha\r\n};\r\nexport default faceOffset;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { DRAWER_WIDTH, DRAWER_BGCOLOR } from \"../consts\";\r\nimport bg from \"./Rose-Petals.svg\";\r\n\r\nconst drawerWidth = DRAWER_WIDTH;\r\nconst drawerBG = DRAWER_BGCOLOR;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"block\",\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        overflowY: \"scroll\",\r\n    },\r\n    drawerPaper: {\r\n        alignItems: \"center\",\r\n        backgroundColor: drawerBG,\r\n        backgroundImage: `url(${bg})`,\r\n        /* background by SVGBackgrounds.com */\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        width: drawerWidth,\r\n        \"& button\": {\r\n            marginBottom: \"0.2rem\",\r\n        },\r\n    },\r\n    content: {\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n        padding: 0,\r\n    },\r\n    openSidebarButton: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        margin: \"2rem\",\r\n        opacity: \"0.5\",\r\n        borderRadius: \"0.25rem\",\r\n        transition: \"0.5s all ease-in-out\",\r\n        backgroundColor: \"#cccccc\",\r\n        cursor: \"pointer\",\r\n        \"&:hover\": {\r\n            opacity: \"1\",\r\n        },\r\n    },\r\n    loadingMsg: {\r\n        position: \"absolute\",\r\n        zIndex: \"9999\",\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        color: \"white\",\r\n        fontSize: \"x-large\",\r\n        backgroundColor: \"rgba(0,0,0,0.5)\",\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","export default __webpack_public_path__ + \"static/media/Rose-Petals.bc11ecc7.svg\";","export const DRAWER_WIDTH = \"16rem\";\r\nexport const DRAWER_BGCOLOR = \"#330000\";\r\n\r\nexport const DEFAULT_FACE_IDX = \"2\";\r\nexport const DEFAULT_DRAGON_FACE_IDX = \"1\";\r\n\r\nexport const baseUrl = \"https://dgk3593.github.io/dl-model/#/\";\r\n\r\nconst defaultAni = \"MWM_CMN+CMN_MWM_03\";\r\n\r\nexport const matParamsDetails = {\r\n    wireframe: {\r\n        name: \"Wireframe\",\r\n        type: \"boolean\",\r\n        default: false,\r\n    },\r\n    useTexture: {\r\n        name: \"Texture\",\r\n        type: \"boolean\",\r\n        default: true,\r\n    },\r\n    transparent: {\r\n        name: \"Transparent\",\r\n        type: \"boolean\",\r\n        default: false,\r\n    },\r\n    flatShading: {\r\n        name: \"Flat Shading\",\r\n        type: \"boolean\",\r\n        default: false,\r\n    },\r\n    color: {\r\n        name: \"Color\",\r\n        type: \"color\",\r\n        default: \"#ffffff\",\r\n    },\r\n    emissive: {\r\n        name: \"Emissive\",\r\n        type: \"color\",\r\n        default: \"#000000\",\r\n    },\r\n    opacity: {\r\n        name: \"Opacity\",\r\n        type: \"percentage\",\r\n        default: 1,\r\n        min: 0,\r\n        max: 1,\r\n        step: 0.05,\r\n    },\r\n    emissiveIntensity: {\r\n        name: \"Emissive Intensity\",\r\n        type: \"percentage\",\r\n        default: 1,\r\n        min: 0,\r\n        max: 1,\r\n        step: 0.05,\r\n    },\r\n    specular: {\r\n        name: \"Specular\",\r\n        type: \"color\",\r\n        default: \"#111111\",\r\n    },\r\n    metalness: {\r\n        name: \"Metalness\",\r\n        type: \"percentage\",\r\n        default: 0,\r\n        min: 0,\r\n        max: 1,\r\n        step: 0.05,\r\n    },\r\n    roughness: {\r\n        name: \"Roughness\",\r\n        type: \"percentage\",\r\n        default: 1,\r\n        min: 0,\r\n        max: 1,\r\n        step: 0.05,\r\n    },\r\n    shininess: {\r\n        name: \"Shininess\",\r\n        type: \"number\",\r\n        default: 30,\r\n        min: 1,\r\n        max: 100,\r\n        step: 1,\r\n    },\r\n    gradientMap: {\r\n        name: \"Gradient Map\",\r\n        type: \"select\",\r\n        default: \"none\",\r\n        options: [\"none\", \"2 Tones\", \"3 Tones\", \"4 Tones\", \"5 Tones\"],\r\n    },\r\n};\r\n\r\nexport const matDirectSetParams = [\r\n    \"transparent\",\r\n    \"opacity\",\r\n    \"wireframe\",\r\n    \"emissiveIntensity\",\r\n    \"metalness\",\r\n    \"roughness\",\r\n    \"shininess\",\r\n];\r\n\r\nexport const matColorParams = [\"color\", \"emissive\", \"specular\"];\r\n\r\nconst defaultMatParams = {};\r\nObject.keys(matParamsDetails).forEach(key => {\r\n    defaultMatParams[key] = matParamsDetails[key].default;\r\n});\r\n\r\nexport const needsUpdateParams = [\"gradientMap\", \"flatShading\", \"useTexture\"];\r\n\r\nconst defaultLights = [\r\n    {\r\n        lightId: \"0\",\r\n        type: \"Ambient\",\r\n        color: \"#444444\",\r\n        enable: true,\r\n        intensity: 1,\r\n    },\r\n    {\r\n        lightId: \"1\",\r\n        type: \"Directional\",\r\n        color: \"#ffffff\",\r\n        enable: true,\r\n        position: [50, 0, 100],\r\n        intensity: 0.8,\r\n    },\r\n];\r\n\r\nexport const asciiSet = [\r\n    \" .:-=+*#%@\",\r\n    \" .'`^\\\",:;Il!i~+_-?][}{1)(|/tfjrxnuvczXYUJCLQ0OZmwqpdbkhao*#MW&8%B@$\",\r\n];\r\n\r\nexport const defaultSettings = {\r\n    model: {\r\n        materialType: \"Basic\",\r\n        id: \"c100001_01\",\r\n        texture: \"c100001_01\",\r\n        eyeTexture: \"c100001_01\",\r\n        eyeIdx: 2,\r\n        mouthTexture: \"c100001_01\",\r\n        mouthIdx: 2,\r\n        weaponRight: \"\",\r\n        weaponLeft: \"\",\r\n    },\r\n    materialParams: { ...defaultMatParams },\r\n    scene: {\r\n        rotateSpeed: 0,\r\n        background: \"#cccccc\",\r\n        initCameraPosition: null,\r\n        lights: defaultLights,\r\n    },\r\n    animation: {\r\n        code: defaultAni,\r\n        timeScale: 1,\r\n    },\r\n    app: {\r\n        sideContent: \"settings\",\r\n        showSettings: true,\r\n        showAniControl: true,\r\n        antiAliasing: false,\r\n    },\r\n    outline: {\r\n        enable: true,\r\n        size: 5, // 1 -> 10\r\n        color: \"#000000\",\r\n        opacity: 1, // 0.1 -> 10%, 1-> 100%\r\n    },\r\n    capture: {\r\n        enable: false,\r\n        supportedCodecs: [],\r\n        codec: \"\",\r\n    },\r\n    ascii: {\r\n        enable: false,\r\n        charSet: asciiSet[1],\r\n        invert: false,\r\n        color: \"#00ff00\",\r\n        bgColor: \"#000000\",\r\n    },\r\n};\r\n\r\nexport const initKey = {\r\n    id: { group: \"model\", key: \"id\" },\r\n    et: { group: \"model\", key: \"eyeTexture\" },\r\n    ei: { group: \"model\", key: \"eyeIdx\" },\r\n    mt: { group: \"model\", key: \"mouthTexture\" },\r\n    mi: { group: \"model\", key: \"mouthIdx\" },\r\n    wr: { group: \"model\", key: \"weaponRight\" },\r\n    wl: { group: \"model\", key: \"weaponLeft\" },\r\n    bg: { group: \"scene\", key: \"background\" },\r\n    cam: { group: \"scene\", key: \"initCameraPosition\" },\r\n    ts: { group: \"animation\", key: \"timeScale\" },\r\n    showAC: { group: \"app\", key: \"showAniControl\" },\r\n    showSettings: { group: \"app\", key: \"showSettings\" },\r\n    showOutline: { group: \"outline\", key: \"enable\" },\r\n    AA: { group: \"app\", key: \"antiAliasing\" },\r\n    rot: { group: \"scene\", key: \"rotateSpeed\" },\r\n    cc: { group: \"animation\", key: \"code\" },\r\n};\r\n\r\nexport const MATERIALS = [\"Basic\", \"Toon\", \"Lambert\", \"Phong\", \"Standard\"];\r\n\r\nexport const matCommonParams = [\r\n    \"transparent\",\r\n    \"opacity\",\r\n    \"wireframe\",\r\n    \"useTexture\",\r\n    \"color\",\r\n];\r\n\r\nexport const matExtraParams = {\r\n    Basic: [],\r\n    Toon: [\"emissive\", \"emissiveIntensity\", \"gradientMap\"],\r\n    Lambert: [\"emissive\", \"emissiveIntensity\"],\r\n    Phong: [\r\n        \"emissive\",\r\n        \"emissiveIntensity\",\r\n        \"specular\",\r\n        \"shininess\",\r\n        \"flatShading\",\r\n    ],\r\n    Standard: [\r\n        \"emissive\",\r\n        \"emissiveIntensity\",\r\n        \"metalness\",\r\n        \"roughness\",\r\n        \"flatShading\",\r\n    ],\r\n};\r\n\r\nexport const WEAPON_CODE = {\r\n    Sword: \"SWD\",\r\n    Blade: \"KAT\",\r\n    Dagger: \"DAG\",\r\n    Axe: \"AXE\",\r\n    Lance: \"LAN\",\r\n    Bow: \"BOW\",\r\n    Wand: \"ROD\",\r\n    Staff: \"CAN\",\r\n    Manacaster: \"GUN\",\r\n};\r\n\r\nexport const WEAPON_LIST = [\r\n    \"Sword\",\r\n    \"Blade\",\r\n    \"Dagger\",\r\n    \"Axe\",\r\n    \"Lance\",\r\n    \"Bow\",\r\n    \"Wand\",\r\n    \"Staff\",\r\n    \"Manacaster\",\r\n];\r\n\r\nexport const GENDER_CODE = {\r\n    Male: 21,\r\n    Female: 23,\r\n};\r\n\r\nexport const COMBO_LENGTH = {\r\n    Axe: 5,\r\n    Bow: 6,\r\n    Staff: 5,\r\n    Dagger: 6,\r\n    Blade: 5,\r\n    Lance: 5,\r\n    Wand: 5,\r\n    Sword: 5,\r\n};\r\n\r\nexport const FS_LENGTH = {\r\n    Axe: 3,\r\n    Bow: 3,\r\n    Staff: 5,\r\n    Dagger: 3,\r\n    Blade: 3,\r\n    Lance: 4,\r\n    Wand: 3,\r\n    Sword: 3,\r\n};\r\n\r\nexport const FILTERS = {\r\n    rarity: [\"3\", \"4\", \"5\"],\r\n    element: [\"Flame\", \"Water\", \"Wind\", \"Light\", \"Shadow\"],\r\n    weapon: [\r\n        \"Sword\",\r\n        \"Blade\",\r\n        \"Dagger\",\r\n        \"Axe\",\r\n        \"Lance\",\r\n        \"Bow\",\r\n        \"Wand\",\r\n        \"Staff\",\r\n        \"Manacaster\",\r\n    ],\r\n};\r\n\r\nexport const WEAPON_FILTERS = {\r\n    rarity: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\r\n    element: [\"Flame\", \"Water\", \"Wind\", \"Light\", \"Shadow\", \"None\"],\r\n    weapon: [\r\n        \"Sword\",\r\n        \"Blade\",\r\n        \"Dagger\",\r\n        \"Axe\",\r\n        \"Lance\",\r\n        \"Bow\",\r\n        \"Wand\",\r\n        \"Staff\",\r\n        \"Manacaster\",\r\n    ],\r\n};\r\n\r\nexport const spFaceTextures = {\r\n    c110300_01: \"ec110300_01\",\r\n};\r\n\r\nexport const incompatibleModels = new Set([\r\n    \"c100007_01\",\r\n    \"c100007_05\",\r\n    \"c100007_09\",\r\n    \"c100034_01\",\r\n    \"c100036_01\",\r\n    \"c100037_01\",\r\n    \"c100041_01\",\r\n]);\r\n\r\nexport const commonBG = {\r\n    green: \"#00ff00\",\r\n    black: \"#000000\",\r\n    grey: \"#cccccc\",\r\n    white: \"#ffffff\",\r\n};\r\n\r\nexport const CAM_PARAMS = {\r\n    angle: 45,\r\n    far: 300,\r\n    near: 0.01,\r\n};\r\n\r\nexport const cameraPositions = {\r\n    c: [0, 0.5, 1.5],\r\n    d: [0, 1.5, 6],\r\n    w: [2, 0, 0],\r\n    b: [1, 0.5, 6],\r\n    e: [1, 1, 4],\r\n    h: [1, 0.5, 3],\r\n    o: [0, 0.5, 8],\r\n    r: [3, 3, 20],\r\n\r\n    c100034_01: [0, 0.5, 1.75],\r\n    d210001_01: [0, 1, 4],\r\n    d210002_01: [0, 1, 4],\r\n    d210003_01: [0, 1, 4],\r\n    d210004_01: [0, 1, 4],\r\n    d210005_01: [0, 1, 4],\r\n    d210078_01: [3, 3, 20],\r\n    d210128_01: [0, 0.5, 1.5], // Puppy\r\n    d210114_01: [3, 3, 20],\r\n    h0010001: [6, 0.5, 8],\r\n    h0010001_02: [2, 0, 0],\r\n    h0040101: [1, 0.5, 4],\r\n    r0070401: [30, 30, 100],\r\n    r0080401: [1, 2, 5],\r\n\r\n    smith: [1, 1, 2],\r\n};\r\n\r\nexport const controlsPositions = {\r\n    c: [0, 0.5, 0],\r\n    d: [0, 1.5, 0],\r\n    w: [0, 0, 0],\r\n    b: [0, 1, 0],\r\n    e: [0, 0.5, 0],\r\n    h: [0, 1, 0],\r\n    o: [0, 0, 0],\r\n    r: [0, 3, 0],\r\n\r\n    d210001_01: [0, 1, 0],\r\n    d210002_01: [0, 1, 0],\r\n    d210003_01: [0, 1, 0],\r\n    d210004_01: [0, 1, 0],\r\n    d210005_01: [0, 1, 0],\r\n    d210078_01: [0, 3, 0],\r\n    d210128_01: [0, 0.5, 0], // Puppy\r\n    d210114_01: [0, 3, 0],\r\n    h0010001_02: [0, 3, 0],\r\n    r0070401: [0, 20, 0],\r\n    r0080401: [0, 2, 0],\r\n\r\n    smith: [0, 0.5, 0],\r\n};\r\n\r\nexport const idxOffsets = {\r\n    face1: { x: 2, y: 1 },\r\n    face2: { x: 0, y: 0 },\r\n    face3: { x: 1, y: 0 },\r\n    face4: { x: 2, y: 0 },\r\n    face5: { x: 3, y: 0 },\r\n    face6: { x: 0, y: -1 },\r\n    face7: { x: 1, y: -1 },\r\n    face8: { x: 2, y: -1 },\r\n    face9: { x: 3, y: -1 },\r\n};\r\n\r\nexport const aniModList = {\r\n    ts: { key: \"timeScale\", defaultValue: 1 },\r\n    r: { key: \"repetitions\", defaultValue: 1 },\r\n};\r\n\r\nexport const videoCodecs = [\r\n    \"video/webm;codecs=h264\",\r\n    \"video/webm;codecs=vp9\",\r\n    \"video/webm;codecs=vp8\",\r\n    \"video/webm\",\r\n];\r\n"],"sourceRoot":""}