{"version":3,"sources":["components/CustomDialog/CustomDialogStyles.js","components/CustomDialog/CustomDialog.js","MainPage/Sidebar/Modal/Modal.js","helpers/async/getNonHumanAniList.js","MainPage/Sidebar/Modal/NonHumanAni/NonHumanAni.js"],"names":["styles","dialogRoot","margin","padding","closeButton","position","right","top","color","dockButton","titleRoot","paddingBottom","display","justifyContent","DialogTop","withStyles","props","children","classes","other","onClose","disableTypography","className","DialogTitle","showDockBtn","onDock","Typography","variant","titleText","IconButton","aria-label","onClick","DialogContent","theme","root","spacing","MuiDialogContent","MuiDialogActions","ModalBody","lazy","Modal","mode","closeModal","handleSelect","setDock","createPortal","Dialog","maxWidth","open","scroll","PaperProps","fallback","document","getElementById","getNonHumanAniList","sourceId","a","startsWith","data","default","NonHumanAni","close","docked","moveToDock","dispatch","useContext","DispatchContext","SettingsContext","modelId","model","id","sidebarContent","app","useState","setSourceId","modalMode","setModalMode","aniList","setAniList","listLoading","setListLoading","source","useRef","useEffect","viewerType","getViewerType","includes","current","getAniList","list","sourceIsNotDragon","portraitDir","portraitName","slice","portraitPath","process","portrait","src","alt","chainMode","updateSettings","key","value","type","aniHandler","aniCode","name","code","chainList","chainCodeToList","chain","handleAniSelect","event","currentTarget","dataset","aniButtons","map","Button","data-value","data-name","dividers"],"mappings":"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","file":"static/js/50.7a716e52.chunk.js","sourcesContent":["const styles = {\r\n    dialogRoot: {\r\n        margin: 0,\r\n        padding: 0,\r\n    },\r\n    closeButton: {\r\n        position: \"absolute\",\r\n        right: \"0.25rem\",\r\n        top: \"0.5rem\",\r\n        color: \"rgba(0,0,0,0.8)\",\r\n    },\r\n    dockButton: {\r\n        position: \"absolute\",\r\n        right: \"2.3rem\",\r\n        top: \"0.5rem\",\r\n        color: \"rgba(0,0,0,0.8)\",\r\n    },\r\n    titleRoot: {\r\n        margin: 0,\r\n        padding: \"1rem\",\r\n        paddingBottom: 0,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n    },\r\n};\r\n\r\nexport default styles;\r\n","import { withStyles } from \"@material-ui/core/styles\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport Dock from \"@material-ui/icons/ArrowForwardIos\";\r\n\r\nimport styles from \"./CustomDialogStyles\";\r\n\r\nexport const DialogTop = withStyles(styles)(props => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle\r\n            disableTypography\r\n            className={classes.dialogRoot}\r\n            {...other}\r\n        >\r\n            {children}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nexport const DialogTitle = withStyles(styles)(props => {\r\n    const {\r\n        children,\r\n        classes,\r\n        onClose,\r\n        showDockBtn = false,\r\n        onDock,\r\n        ...other\r\n    } = props;\r\n    return (\r\n        <MuiDialogTitle\r\n            disableTypography\r\n            className={classes.titleRoot}\r\n            {...other}\r\n        >\r\n            <Typography variant=\"h6\" className={classes.titleText}>\r\n                {children}\r\n            </Typography>\r\n            {showDockBtn && (\r\n                <IconButton\r\n                    aria-label=\"dock\"\r\n                    className={classes.dockButton}\r\n                    onClick={onDock}\r\n                >\r\n                    <Dock />\r\n                </IconButton>\r\n            )}\r\n            <IconButton\r\n                aria-label=\"close\"\r\n                className={classes.closeButton}\r\n                onClick={onClose}\r\n            >\r\n                <Close />\r\n            </IconButton>\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nexport const DialogContent = withStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nexport const DialogActions = withStyles(theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n}))(MuiDialogActions);\r\n","import { lazy, Suspense } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst ModalBody = lazy(() =>\r\n    import(\r\n        /* webpackChunkName: \"ModalBody\" */ \"MainPage/Sidebar/Modal/ModalBody\"\r\n    )\r\n);\r\n\r\nfunction Modal({ mode, closeModal, handleSelect, setDock = null }) {\r\n    return (\r\n        mode &&\r\n        createPortal(\r\n            <Dialog\r\n                maxWidth=\"lg\"\r\n                onClose={closeModal}\r\n                open={!!mode}\r\n                scroll=\"paper\"\r\n                PaperProps={{ classes: { root: \"Modal\" } }}\r\n            >\r\n                <Suspense fallback={<div>Loading</div>}>\r\n                    <ModalBody\r\n                        mode={mode}\r\n                        closeModal={closeModal}\r\n                        handleSelect={handleSelect}\r\n                        setDock={setDock}\r\n                    />\r\n                </Suspense>\r\n            </Dialog>,\r\n            document.getElementById(\"modal-root\")\r\n        )\r\n    );\r\n}\r\n\r\nexport default Modal;\r\n","/**\r\n * get list of animations associated with a given source id\r\n * @param {string} sourceId\r\n * @return {Promise<AnimationList>}\r\n */\r\nexport const getNonHumanAniList = async sourceId => {\r\n    const { default: data } = sourceId.startsWith(\"h\")\r\n        ? await import(\"data/aniEnemies\")\r\n        : await import(\"data/aniDragon\");\r\n\r\n    return data[sourceId];\r\n};\r\n\r\nexport default getNonHumanAniList;\r\n","import { useState, useEffect, useContext, useRef } from \"react\";\r\n\r\nimport { DispatchContext, SettingsContext } from \"context/SettingsContext\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { DialogContent, DialogTitle, DialogTop } from \"components/CustomDialog\";\r\nimport Modal from \"../../Modal\";\r\n\r\nimport { chainCodeToList } from \"helpers/viewerHelpers\";\r\nimport { getViewerType } from \"helpers/helpers\";\r\nimport { getNonHumanAniList } from \"helpers/async/getNonHumanAniList\";\r\n\r\nimport \"./styles/NonHumanAni.css\";\r\n\r\nfunction NonHumanAni({ close, handleSelect, docked, moveToDock }) {\r\n    const dispatch = useContext(DispatchContext);\r\n    const {\r\n        model: { id: modelId },\r\n        app: { sidebarContent },\r\n    } = useContext(SettingsContext);\r\n\r\n    const [sourceId, setSourceId] = useState(modelId);\r\n    const [modalMode, setModalMode] = useState(\"\");\r\n\r\n    /**\r\n     * @type {[ undefined|AnimationList , function]}\r\n     */\r\n    const [aniList, setAniList] = useState();\r\n    const [listLoading, setListLoading] = useState(true);\r\n\r\n    const source = useRef(modelId);\r\n\r\n    useEffect(() => {\r\n        const viewerType = getViewerType(modelId);\r\n        if (![\"dragon\", \"ani\"].includes(viewerType)) {\r\n            close();\r\n            return;\r\n        }\r\n        if (modelId !== source.current) {\r\n            source.current = modelId;\r\n            setSourceId(modelId);\r\n        }\r\n    }, [modelId, close]);\r\n\r\n    useEffect(() => {\r\n        const getAniList = async () => {\r\n            const list = await getNonHumanAniList(sourceId);\r\n            setAniList(list);\r\n            setListLoading(false);\r\n        };\r\n\r\n        setListLoading(true);\r\n        getAniList();\r\n    }, [sourceId]);\r\n\r\n    const sourceIsNotDragon = sourceId.startsWith(\"h\");\r\n\r\n    const portraitDir = sourceIsNotDragon\r\n        ? \"enemyPortraits\"\r\n        : \"dragonPortraits\";\r\n\r\n    const portraitName = sourceIsNotDragon ? sourceId : sourceId.slice?.(1);\r\n\r\n    const portraitPath = `${process.env.PUBLIC_URL}/img/${portraitDir}/${portraitName}.png`;\r\n\r\n    const portrait = <img src={portraitPath} alt=\"portrait\" />;\r\n\r\n    const chainMode = sidebarContent === \"chainMaker\";\r\n\r\n    const chooseSource = () => setModalMode(\"dragon\");\r\n    const closeModal = () => setModalMode(\"\");\r\n\r\n    const updateSettings = (key, value) => {\r\n        dispatch({ type: \"update\", key, value });\r\n    };\r\n\r\n    const defaultAniHandler = (aniCode, name) => {\r\n        // Set Animation\r\n        updateSettings(\"animation\", { code: aniCode });\r\n        // Reinitialize Chain Maker's chain\r\n        const chainList = chainCodeToList(aniCode, name);\r\n        updateSettings(\"chainMaker\", { chain: chainList });\r\n    };\r\n\r\n    const aniHandler = handleSelect || defaultAniHandler;\r\n\r\n    const handleAniSelect = event => {\r\n        const aniCode = event.currentTarget.dataset.value;\r\n        const name = event.currentTarget.dataset.name;\r\n\r\n        aniHandler(aniCode, name);\r\n        !docked && close();\r\n    };\r\n\r\n    const aniButtons = aniList ? (\r\n        aniList.map(({ name, code }) => (\r\n            <Button\r\n                key={code}\r\n                data-value={code}\r\n                data-name={name}\r\n                variant=\"contained\"\r\n                onClick={handleAniSelect}\r\n            >\r\n                {name}\r\n            </Button>\r\n        ))\r\n    ) : (\r\n        <div>No Animation</div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <DialogTop>\r\n                <DialogTitle\r\n                    showDockBtn={!docked && !chainMode}\r\n                    onDock={moveToDock}\r\n                    onClose={close}\r\n                >\r\n                    {chainMode ? \"Add Animation\" : \"Select an Animation\"}\r\n                </DialogTitle>\r\n                <div className=\"NonHumanAni-source\">\r\n                    {portrait}\r\n                    <Button variant=\"outlined\" onClick={chooseSource}>\r\n                        Change Source\r\n                    </Button>\r\n                </div>\r\n            </DialogTop>\r\n            <DialogContent dividers className=\"NonHumanAni-content\">\r\n                {listLoading ? <div>Loading...</div> : aniButtons}\r\n            </DialogContent>\r\n            <Modal\r\n                mode={modalMode}\r\n                closeModal={closeModal}\r\n                handleSelect={setSourceId}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NonHumanAni;\r\n"],"sourceRoot":""}