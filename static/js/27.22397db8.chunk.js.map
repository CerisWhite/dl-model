{"version":3,"sources":["WeaponBtn.js"],"names":["WeaponBtn","props","wid","iconName","name","useToggleState","clicked","toggleClicked","reverseGrip","toggleReverseGrip","iconPath","process","dispatch","useContext","DispatchContext","setWeapon","event","stopPropagation","side","currentTarget","dataset","value","weaponCode","type","key","className","src","alt","onClick","e","id","checked","onChange","htmlFor","data-value"],"mappings":"+LAgFeA,UA1Ef,SAAmBC,GAAQ,IACfC,EAAwBD,EAAxBC,IAAKC,EAAmBF,EAAnBE,SAAUC,EAASH,EAATG,KADD,EAEWC,aAAe,GAF1B,mBAEfC,EAFe,KAENC,EAFM,OAGmBF,aAAe,GAHlC,mBAGfG,EAHe,KAGFC,EAHE,KAIhBC,EAAQ,UAAMC,YAAN,4BAAgDR,GAExDS,EAAWC,qBAAWC,KAEtBC,EAAY,SAAAC,GACdA,EAAMC,kBACN,IAAMC,EAAOF,EAAMG,cAAcC,QAAQC,MACnCC,EAAU,UAAMpB,GAAN,OAAYM,EAAc,IAAM,KAC5Ca,EAAQ,GACZA,EAAM,SAAD,OAAUH,IAAUI,EAMzBV,EALe,CACXW,KAAM,SACNC,IAAK,QACLH,WAKR,OACI,yBAAKI,UAAU,aACVtB,GACG,yBACIuB,IAAKhB,EACLW,MAAOnB,EACPyB,IAAKzB,EACL0B,QAASrB,EACTkB,UAAU,mBAGjBnB,EACG,yBAAKmB,UAAU,gBAAgBG,QAASrB,GACpC,yBACIkB,UAAU,iBACVG,QAAS,SAAAC,GAAC,OAAIA,EAAEZ,oBAEhB,2BACIM,KAAK,WACLO,GAAG,cACHC,QAASvB,EACTwB,SAAUvB,IAEd,2BAAOwB,QAAQ,eAAf,iBAEJ,yBAAKR,UAAU,yBACX,yBACIA,UAAU,mBACVS,aAAW,OACXN,QAASb,GAHb,UAOA,oCACA,yBACIU,UAAU,mBACVS,aAAW,QACXN,QAASb,GAHb,YAUR,yBAAKU,UAAU,iBAAiBG,QAASrB,GACpCH","file":"static/js/27.22397db8.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport useToggleState from \"./hooks/useToggleState\";\r\nimport \"./styles/WeaponBtn.css\";\r\n\r\nimport { DispatchContext } from \"./context/SettingsContext\";\r\n\r\nfunction WeaponBtn(props) {\r\n    const { wid, iconName, name } = props;\r\n    const [clicked, toggleClicked] = useToggleState(false);\r\n    const [reverseGrip, toggleReverseGrip] = useToggleState(false);\r\n    const iconPath = `${process.env.PUBLIC_URL}/img/weaponIcons/${iconName}`;\r\n\r\n    const dispatch = useContext(DispatchContext);\r\n\r\n    const setWeapon = event => {\r\n        event.stopPropagation();\r\n        const side = event.currentTarget.dataset.value;\r\n        const weaponCode = `${wid}${reverseGrip ? \"b\" : \"n\"}`;\r\n        let value = {};\r\n        value[`weapon${side}`] = weaponCode;\r\n        const action = {\r\n            type: \"update\",\r\n            key: \"model\",\r\n            value,\r\n        };\r\n        dispatch(action);\r\n    };\r\n\r\n    return (\r\n        <div className=\"WeaponBtn\">\r\n            {iconName && (\r\n                <img\r\n                    src={iconPath}\r\n                    value={wid}\r\n                    alt={wid}\r\n                    onClick={toggleClicked}\r\n                    className=\"WeaponBtn-icon\"\r\n                />\r\n            )}\r\n            {clicked ? (\r\n                <div className=\"WeaponBtn-add\" onClick={toggleClicked}>\r\n                    <div\r\n                        className=\"WeaponBtn-grip\"\r\n                        onClick={e => e.stopPropagation()}\r\n                    >\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"reverseGrip\"\r\n                            checked={reverseGrip}\r\n                            onChange={toggleReverseGrip}\r\n                        />\r\n                        <label htmlFor=\"reverseGrip\">Reverse Grip</label>\r\n                    </div>\r\n                    <div className=\"WeaponBtn-addBtnGroup\">\r\n                        <div\r\n                            className=\"WeaponBtn-addBtn\"\r\n                            data-value=\"Left\"\r\n                            onClick={setWeapon}\r\n                        >\r\n                            &#8656;\r\n                        </div>\r\n                        <div>ADD</div>\r\n                        <div\r\n                            className=\"WeaponBtn-addBtn\"\r\n                            data-value=\"Right\"\r\n                            onClick={setWeapon}\r\n                        >\r\n                            &#8658;\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"WeaponBtn-name\" onClick={toggleClicked}>\r\n                    {name}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WeaponBtn;\r\n"],"sourceRoot":""}