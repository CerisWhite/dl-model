{"version":3,"sources":["../node_modules/@material-ui/core/esm/List/ListContext.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","../node_modules/@material-ui/core/esm/ListItem/ListItem.js","../node_modules/@material-ui/core/esm/List/List.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","MainPage/Sidebar/SidebarBody/SettingBtns/commonProps.js","MainPage/Sidebar/SidebarBody/SettingBtns/ModelSelectBtns.js","MainPage/Sidebar/SidebarBody/SettingBtns/SettingBtns.js"],"names":["ListContext","React","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","props","ref","_props$align","align","classes","className","_props$color","color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_extends","clsx","root","concat","capitalize","withStyles","theme","margin","typography","caption","button","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name","useEnhancedEffect","window","ListItem","_props$alignItems","alignItems","_props$autoFocus","autoFocus","_props$button","childrenProp","children","componentProp","_props$ContainerCompo","ContainerComponent","_props$ContainerProps","ContainerProps","ContainerClassName","_props$dense","dense","_props$disabled","disabled","_props$disableGutters","disableGutters","_props$divider","divider","focusVisibleClassName","_props$selected","selected","context","childContext","listItemRef","current","focus","toArray","hasSecondaryAction","length","isMuiElement","handleOwnRef","instance","ReactDOM","handleRef","useForkRef","componentProps","gutters","alignItemsFlexStart","secondaryAction","focusVisible","ButtonBase","Provider","value","container","pop","justifyContent","textDecoration","boxSizing","paddingTop","paddingBottom","backgroundColor","action","opacity","borderBottom","backgroundClip","paddingLeft","paddingRight","transition","transitions","create","duration","shortest","hover","List","_props$component","_props$disablePadding","disablePadding","subheader","padding","listStyle","ListItemText","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","type","multiline","flex","minWidth","marginTop","typographyProps","categories","ModelSelectBtns","handleClick","btns","map","category","iconPath","process","Button","data-value","onClick","src","alt","style","mainBtns","adv","dragon","base","SettingBtns","openModal","settings","useContext","SettingsContext","dispatch","DispatchContext","model","app","showAniControl","antiAliasing","viewerType","outlineEnabled","outline","enable","handleBtnClick","e","currentTarget","dataset","updateSettings","key","removeWeapon","target","toggleSetting","event","openTools","sidebarContent","removeWeaponBtn","side","animationBtns","shareBtn","btn","includes","data-key","data-name"],"mappings":"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","file":"static/js/28.9e761e4b.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar ListContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ListContext.displayName = 'ListContext';\n}\n\nexport default ListContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport * as ReactDOM from 'react-dom';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      position: 'relative',\n      textDecoration: 'none',\n      width: '100%',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      paddingTop: 8,\n      paddingBottom: 8,\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n    container: {\n      position: 'relative'\n    },\n\n    /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n    focusVisible: {},\n\n    /* Styles applied to the `component` element if dense. */\n    dense: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      alignItems: 'flex-start'\n    },\n\n    /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the inner `component` element if `divider={true}`. */\n    divider: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      backgroundClip: 'padding-box'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the inner `component` element if `button={true}`. */\n    button: {\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n    secondaryAction: {\n      // Add some space to avoid collision as `ListItemSecondaryAction`\n      // is absolutely positioned.\n      paddingRight: 48\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nvar ListItem = /*#__PURE__*/React.forwardRef(function ListItem(props, ref) {\n  var _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$button = props.button,\n      button = _props$button === void 0 ? false : _props$button,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      componentProp = props.component,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo,\n      _props$ContainerProps = props.ContainerProps;\n  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;\n\n  var ContainerClassName = _props$ContainerProps.className,\n      ContainerProps = _objectWithoutProperties(_props$ContainerProps, [\"className\"]),\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$divider = props.divider,\n      divider = _props$divider === void 0 ? false : _props$divider,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  var context = React.useContext(ListContext);\n  var childContext = {\n    dense: dense || context.dense || false,\n    alignItems: alignItems\n  };\n  var listItemRef = React.useRef(null);\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  var children = React.Children.toArray(childrenProp);\n  var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n\n  var componentProps = _extends({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled: disabled\n  }, other);\n\n  var Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(ListContext.Provider, {\n      value: childContext\n    }, /*#__PURE__*/React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), /*#__PURE__*/React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    var secondaryActionIndex = -1;\n\n    for (var i = children.length - 1; i >= 0; i -= 1) {\n      var child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from './ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    listStyle: 'none',\n    margin: 0,\n    padding: 0,\n    position: 'relative'\n  },\n\n  /* Styles applied to the root element if `disablePadding={false}`. */\n  padding: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n\n  /* Styles applied to the root element if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if a `subheader` is provided. */\n  subheader: {\n    paddingTop: 0\n  }\n};\nvar List = /*#__PURE__*/React.forwardRef(function List(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'ul' : _props$component,\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disablePadding = props.disablePadding,\n      disablePadding = _props$disablePadding === void 0 ? false : _props$disablePadding,\n      subheader = props.subheader,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"dense\", \"disablePadding\", \"subheader\"]);\n\n  var context = React.useMemo(function () {\n    return {\n      dense: dense\n    };\n  }, [dense]);\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, dense && classes.dense, !disablePadding && classes.padding, subheader && classes.subheader),\n    ref: ref\n  }, other), subheader, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? List.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used for\n   * the list and list items.\n   * The prop is available to descendant components as the `dense` context.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, vertical padding will be removed from the list.\n   */\n  disablePadding: PropTypes.bool,\n\n  /**\n   * The content of the subheader, normally `ListSubheader`.\n   */\n  subheader: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiList'\n})(List);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","export const listStyle = {\r\n    backgroundColor: \"rgba(255,255,255,0.5)\",\r\n    width: \"100%\",\r\n    paddingBottom: 0,\r\n    marginBottom: \"0.4rem\",\r\n};\r\n\r\nexport const typographyProps = {\r\n    color: \"inherit\",\r\n    variant: \"button\",\r\n    align: \"center\",\r\n};\r\n","import Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport { listStyle, typographyProps } from \"./commonProps\";\r\n\r\nimport \"./ModelSelectBtns.css\";\r\n\r\nconst categories = [\"adv\", \"dragon\"];\r\n\r\nfunction ModelSelectBtns({ handleClick }) {\r\n    const btns = categories.map(category => {\r\n        const iconPath = `${process.env.PUBLIC_URL}/img/icons/${category}Icon.png`;\r\n        return (\r\n            <Button\r\n                key={category}\r\n                className=\"ModelSelectBtns-Btn\"\r\n                data-value={category}\r\n                onClick={handleClick}\r\n            >\r\n                <img src={iconPath} alt={category} />\r\n            </Button>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <List dense disablePadding style={listStyle} component=\"div\">\r\n            <ListItem divider>\r\n                <ListItemText\r\n                    primary=\"Change Model\"\r\n                    primaryTypographyProps={typographyProps}\r\n                />\r\n            </ListItem>\r\n            <ListItem>\r\n                <div className=\"ModelSelectBtns\">{btns}</div>\r\n            </ListItem>\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default ModelSelectBtns;\r\n","import { useContext } from \"react\";\r\n\r\nimport { DispatchContext, SettingsContext } from \"context/SettingsContext\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport ModelSelectBtns from \"./ModelSelectBtns\";\r\n\r\nimport { listStyle, typographyProps } from \"./commonProps\";\r\n\r\nconst mainBtns = {\r\n    adv: [\r\n        { value: \"texture\", text: \"Face Override\" },\r\n        { value: \"face\", text: \"Choose Face\" },\r\n        { value: \"weapon\", text: \"Add Weapons\" },\r\n    ],\r\n    dragon: [{ value: \"\", text: \"Under Construction\" }],\r\n    base: [],\r\n};\r\n\r\nfunction SettingBtns({ openModal }) {\r\n    const settings = useContext(SettingsContext);\r\n    const dispatch = useContext(DispatchContext);\r\n\r\n    const {\r\n        model,\r\n        app: { showAniControl, antiAliasing, viewerType },\r\n        outline: { enable: outlineEnabled },\r\n    } = settings;\r\n\r\n    const handleBtnClick = e => {\r\n        openModal(e.currentTarget.dataset.value);\r\n    };\r\n\r\n    const updateSettings = (key, value) => {\r\n        const action = { type: \"update\", key, value };\r\n        dispatch(action);\r\n    };\r\n\r\n    const removeWeapon = e => {\r\n        const target = e.currentTarget.dataset.value;\r\n        const key = `weapon${target}`;\r\n        const value = { [key]: \"\" };\r\n\r\n        updateSettings(\"model\", value);\r\n    };\r\n\r\n    const toggleSetting = event => {\r\n        const { key, name } = event.currentTarget.dataset;\r\n        const action = {\r\n            type: \"toggle\",\r\n            key: key,\r\n            value: name,\r\n        };\r\n        dispatch(action);\r\n    };\r\n\r\n    const openTools = event => {\r\n        const { value } = event.currentTarget.dataset;\r\n        updateSettings(\"app\", { sidebarContent: value });\r\n    };\r\n\r\n    const removeWeaponBtn = side => {\r\n        const key = `weapon${side}`;\r\n        if (!model[key]) return null;\r\n\r\n        return (\r\n            <ListItem button divider data-value={side} onClick={removeWeapon}>\r\n                <ListItemText\r\n                    primary={`Remove ${side} Weapon`}\r\n                    primaryTypographyProps={typographyProps}\r\n                />\r\n            </ListItem>\r\n        );\r\n    };\r\n\r\n    const animationBtns = (\r\n        <List dense disablePadding style={listStyle} component=\"div\">\r\n            <ListItem\r\n                button\r\n                divider\r\n                data-value={viewerType === \"adv\" ? \"animation\" : \"nonHumanAni\"}\r\n                onClick={handleBtnClick}\r\n            >\r\n                <ListItemText\r\n                    primary=\"Choose Animation\"\r\n                    primaryTypographyProps={typographyProps}\r\n                />\r\n            </ListItem>\r\n            <ListItem button data-value=\"chainMaker\" onClick={openTools}>\r\n                <ListItemText\r\n                    primary=\"Chain Maker\"\r\n                    primaryTypographyProps={typographyProps}\r\n                />\r\n            </ListItem>\r\n        </List>\r\n    );\r\n\r\n    const shareBtn = (\r\n        <div className=\"SettingBtns-Share\">\r\n            <Button\r\n                variant=\"contained\"\r\n                data-value=\"share\"\r\n                onClick={handleBtnClick}\r\n            >\r\n                Share\r\n            </Button>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <ModelSelectBtns handleClick={handleBtnClick} />\r\n            <List dense disablePadding style={listStyle} component=\"div\">\r\n                {mainBtns[viewerType].map(btn => (\r\n                    <ListItem\r\n                        key={btn.value}\r\n                        button\r\n                        divider\r\n                        data-value={btn.value}\r\n                        onClick={handleBtnClick}\r\n                    >\r\n                        <ListItemText\r\n                            primary={btn.text}\r\n                            primaryTypographyProps={typographyProps}\r\n                        />\r\n                    </ListItem>\r\n                ))}\r\n                {removeWeaponBtn(\"Left\")}\r\n                {removeWeaponBtn(\"Right\")}\r\n            </List>\r\n\r\n            {[\"adv\", \"dragon\"].includes(viewerType) ? animationBtns : null}\r\n\r\n            <List dense disablePadding style={listStyle} component=\"div\">\r\n                <ListItem\r\n                    button\r\n                    divider\r\n                    data-value=\"background\"\r\n                    onClick={handleBtnClick}\r\n                >\r\n                    <ListItemText\r\n                        primary=\"Background Settings\"\r\n                        primaryTypographyProps={typographyProps}\r\n                    />\r\n                </ListItem>\r\n                <ListItem\r\n                    button\r\n                    data-key=\"app\"\r\n                    data-name=\"antiAliasing\"\r\n                    divider\r\n                    onClick={toggleSetting}\r\n                >\r\n                    <ListItemText\r\n                        primary={`Turn ${\r\n                            antiAliasing ? \"Off\" : \"On\"\r\n                        } Anti-Aliasing`}\r\n                        primaryTypographyProps={typographyProps}\r\n                    />\r\n                </ListItem>\r\n                <ListItem\r\n                    button\r\n                    data-key=\"app\"\r\n                    data-name=\"showAniControl\"\r\n                    divider\r\n                    onClick={toggleSetting}\r\n                >\r\n                    <ListItemText\r\n                        primary={`${\r\n                            showAniControl ? \"Hide\" : \"Show\"\r\n                        } Animation Control`}\r\n                        primaryTypographyProps={typographyProps}\r\n                    />\r\n                </ListItem>\r\n                <ListItem\r\n                    button\r\n                    data-key=\"outline\"\r\n                    data-name=\"enable\"\r\n                    divider\r\n                    onClick={toggleSetting}\r\n                >\r\n                    <ListItemText\r\n                        primary={`${outlineEnabled ? \"Hide\" : \"Show\"} Outline`}\r\n                        primaryTypographyProps={typographyProps}\r\n                    />\r\n                </ListItem>\r\n                <ListItem button data-value=\"advanced\" onClick={openTools}>\r\n                    <ListItemText\r\n                        primary=\"Advanced Settings\"\r\n                        primaryTypographyProps={typographyProps}\r\n                    />\r\n                </ListItem>\r\n            </List>\r\n\r\n            {shareBtn}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SettingBtns;\r\n"],"sourceRoot":""}