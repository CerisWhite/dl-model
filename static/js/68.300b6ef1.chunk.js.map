{"version":3,"sources":["components/viewers/DragonViewer.js"],"names":["DragonViewer","props","initNewModel","saveMainModelInitState","initFace","addAnimation","afterMainModelLoad","updateModel","prev","current","a","updateMainModel","model","updateFace","updateAnimation","animation","eyeIdx","mouthIdx","afterMainModelUpdate","mainModel","models","main","eyes","getDragonEye","mouths","getDragonMouth","_eyeIdx","_mouthIdx","newIdx","oldIdx","this","regex","forEach","mesh","name","id","exec","visible","parseInt","AniViewer"],"mappings":"0OAQaA,EAAb,kDAII,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAIVC,aAAe,WACX,EAAKC,yBACL,EAAKC,WACL,EAAKC,gBARU,EAWnBC,mBAAqB,WACjB,EAAKJ,gBAZU,EAenBK,YAfmB,uCAeL,WAAOC,EAAMC,GAAb,SAAAC,EAAA,sEACJ,EAAKC,gBAAgBH,EAAKI,MAAOH,EAAQG,OADrC,OAEV,EAAKC,WAAWJ,EAAQG,OACxB,EAAKE,gBAAgBN,EAAKO,UAAWN,EAAQM,WAHnC,2CAfK,0DAqBnBF,WAAa,YAA2B,IAAxBG,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACpB,EAAKD,OAASA,EACd,EAAKC,SAAWA,GAvBD,EA0BnBC,qBAAuB,WACnB,EAAKhB,gBA3BU,EA8BnBE,SAAW,WACP,IAAMe,EAAY,EAAKC,OAAOC,KAC9B,EAAKC,KAAOC,YAAaJ,GAEzB,EAAKK,OAASC,YAAeN,GAE7B,MAA6B,EAAKlB,MAAMW,MAAhCI,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,SAChB,EAAKD,OAASA,EACd,EAAKC,SAAWA,GApChB,EAAKS,QAAU,EAAKC,UAAY,EAFjB,EAJvB,wCAgDI,SAAWC,GACP,IAAMC,EAASC,KAAKJ,QACpB,GAAIE,IAAWC,EAAf,CAEAC,KAAKJ,QAAUE,EACf,IAAMG,EAAQ,WACdD,KAAKR,KAAKU,SAAQ,SAAAC,GACd,IAAQC,EAASD,EAATC,KACFC,EAAKJ,EAAMK,KAAKF,GAAM,GAC5BD,EAAKI,QAAUC,SAASH,KAAQP,QAzD5C,oBAgEI,SAAaA,GACT,IAAMC,EAASC,KAAKH,UACpB,GAAIC,IAAWC,EAAf,CAEAC,KAAKH,UAAYC,EACjB,IAAMG,EAAQ,WACdD,KAAKN,OAAOQ,SAAQ,SAAAC,GAChB,IAAQC,EAASD,EAATC,KACFC,EAAKJ,EAAMK,KAAKF,GAAM,GAC5BD,EAAKI,QAAUC,SAASH,KAAQP,UAzE5C,GAAkCW,WA8EnBvC","file":"static/js/68.300b6ef1.chunk.js","sourcesContent":["import AniViewer from \"./AniViewer\";\r\n\r\nimport { getDragonEye, getDragonMouth } from \"helpers/viewerHelpers\";\r\n\r\n/**\r\n * Extension of Ani Viewer for dragons that adds:\r\n *   - Eyes and Mouth\r\n */\r\nexport class DragonViewer extends AniViewer {\r\n    /**\r\n     * @param {ViewerProps} props\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        this._eyeIdx = this._mouthIdx = 0;\r\n    }\r\n\r\n    initNewModel = () => {\r\n        this.saveMainModelInitState();\r\n        this.initFace();\r\n        this.addAnimation();\r\n    };\r\n\r\n    afterMainModelLoad = () => {\r\n        this.initNewModel();\r\n    };\r\n\r\n    updateModel = async (prev, current) => {\r\n        await this.updateMainModel(prev.model, current.model);\r\n        this.updateFace(current.model);\r\n        this.updateAnimation(prev.animation, current.animation);\r\n    };\r\n\r\n    updateFace = ({ eyeIdx, mouthIdx }) => {\r\n        this.eyeIdx = eyeIdx;\r\n        this.mouthIdx = mouthIdx;\r\n    };\r\n\r\n    afterMainModelUpdate = () => {\r\n        this.initNewModel();\r\n    };\r\n\r\n    initFace = () => {\r\n        const mainModel = this.models.main;\r\n        this.eyes = getDragonEye(mainModel);\r\n\r\n        this.mouths = getDragonMouth(mainModel);\r\n\r\n        const { eyeIdx, mouthIdx } = this.props.model;\r\n        this.eyeIdx = eyeIdx;\r\n        this.mouthIdx = mouthIdx;\r\n    };\r\n\r\n    /**\r\n     * @param {number} newIdx\r\n     */\r\n    set eyeIdx(newIdx) {\r\n        const oldIdx = this._eyeIdx;\r\n        if (newIdx === oldIdx) return;\r\n\r\n        this._eyeIdx = newIdx;\r\n        const regex = /[0-9]{2}/;\r\n        this.eyes.forEach(mesh => {\r\n            const { name } = mesh;\r\n            const id = regex.exec(name)[0];\r\n            mesh.visible = parseInt(id) === newIdx;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {number} newIdx\r\n     */\r\n    set mouthIdx(newIdx) {\r\n        const oldIdx = this._mouthIdx;\r\n        if (newIdx === oldIdx) return;\r\n\r\n        this._mouthIdx = newIdx;\r\n        const regex = /[0-9]{2}/;\r\n        this.mouths.forEach(mesh => {\r\n            const { name } = mesh;\r\n            const id = regex.exec(name)[0];\r\n            mesh.visible = parseInt(id) === newIdx;\r\n        });\r\n    }\r\n}\r\n\r\nexport default DragonViewer;\r\n"],"sourceRoot":""}