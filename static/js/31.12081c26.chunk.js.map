{"version":3,"sources":["components/CustomDialog/CustomDialogStyles.js","components/CustomDialog/CustomDialog.js","../node_modules/@material-ui/icons/FileCopy.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","MainPage/Sidebar/Modal/Share/ShareContent.js","MainPage/Sidebar/Modal/Share/Share.js"],"names":["styles","dialogRoot","margin","padding","closeButton","position","right","top","color","titleRoot","paddingBottom","display","justifyContent","DialogTop","withStyles","props","children","classes","other","onClose","disableTypography","className","DialogTitle","Typography","variant","titleText","IconButton","aria-label","onClick","DialogContent","theme","root","spacing","MuiDialogContent","MuiDialogActions","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","FormControlLabel","ref","checked","control","disabledProp","disabled","label","inputRef","_props$labelPlacement","labelPlacement","name","onChange","_objectWithoutProperties","muiFormControl","useFormControl","controlProps","forEach","key","_extends","clsx","concat","capitalize","component","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","palette","text","SwitchBase","autoFocus","checkedProp","checkedIcon","defaultChecked","icon","id","inputProps","onBlur","onFocus","readOnly","required","tabIndex","type","_useControlled","useControlled","controlled","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","hasLabelFor","role","undefined","event","input","newChecked","target","opacity","width","height","left","zIndex","createSvgIcon","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$color","_props$icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","_props$size","size","fontSize","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","QRCode","lazy","ShareContent","method","useState","AC","Settings","show","setShow","useToggleState","transparentBG","toggleTransparentBG","customCam","toggleCustomCam","camPos","setCamPos","setLabel","currentSettings","useContext","SettingsContext","CopyButton","copyText","handleChange","currentTarget","oldValue","handleCamChange","index","parseInt","getAttribute","newCamPos","map","v","i","shareTextField","document","getElementById","select","setSelectionRange","execCommand","setTimeout","shareLink","keyCodes","keys","initKey","filter","group","push","link","baseUrl","keyCode","currentValue","defaultValue","defaultSettings","replace","modelId","defaultCameraPosition","cameraPositions","some","_","getShareLink","embedCode","useEffect","focus","TextField","fullWidth","InputLabelProps","InputProps","endAdornment","includeMargin","fallback","axis","step","Share","closeModal","setMethod","AppBar","Tabs","centered","newValue","Tab","dividers"],"mappings":"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","file":"static/js/31.12081c26.chunk.js","sourcesContent":["const styles = {\r\n    dialogRoot: {\r\n        margin: 0,\r\n        padding: 0,\r\n    },\r\n    closeButton: {\r\n        position: \"absolute\",\r\n        right: \"0.5rem\",\r\n        top: \"0.5rem\",\r\n        color: \"rgba(0,0,0,0.8)\",\r\n    },\r\n    titleRoot: {\r\n        margin: 0,\r\n        padding: \"1rem\",\r\n        paddingBottom: 0,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n    },\r\n};\r\n\r\nexport default styles;\r\n","import { withStyles } from \"@material-ui/core/styles\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Close from \"@material-ui/icons/Close\";\r\n\r\nimport styles from \"./CustomDialogStyles\";\r\n\r\nexport const DialogTop = withStyles(styles)(props => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle\r\n            disableTypography\r\n            className={classes.dialogRoot}\r\n            {...other}\r\n        >\r\n            {children}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nexport const DialogTitle = withStyles(styles)(props => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle\r\n            disableTypography\r\n            className={classes.titleRoot}\r\n            {...other}\r\n        >\r\n            <Typography variant=\"h6\" className={classes.titleText}>\r\n                {children}\r\n            </Typography>\r\n            <IconButton\r\n                aria-label=\"close\"\r\n                className={classes.closeButton}\r\n                onClick={onClose}\r\n            >\r\n                <Close />\r\n            </IconButton>\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nexport const DialogContent = withStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nexport const DialogActions = withStyles(theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n}))(MuiDialogActions);\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z\"\n}), 'FileCopy');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import { lazy, Suspense, useState, useEffect, useContext } from \"react\";\r\nimport useToggleState from \"hooks/useToggleState\";\r\n\r\nimport FileCopy from \"@material-ui/icons/FileCopy\";\r\n\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { SettingsContext } from \"context/SettingsContext\";\r\nimport {\r\n    defaultSettings,\r\n    initKey,\r\n    baseUrl,\r\n    cameraPositions,\r\n} from \"helpers/consts\";\r\n\r\nimport \"./styles/ShareContent.css\";\r\n\r\nconst QRCode = lazy(() => import(\"qrcode.react\"));\r\n\r\nfunction ShareContent({ method }) {\r\n    const [show, setShow] = useState({ AC: true, Settings: true });\r\n    const [transparentBG, toggleTransparentBG] = useToggleState(false);\r\n    const [customCam, toggleCustomCam] = useToggleState(false);\r\n    const [camPos, setCamPos] = useState([0, 0.5, 1.5]);\r\n    const [label, setLabel] = useState(\"Code\");\r\n    const currentSettings = useContext(SettingsContext);\r\n\r\n    const CopyButton = () => (\r\n        <IconButton onClick={copyText}>\r\n            <FileCopy />\r\n        </IconButton>\r\n    );\r\n\r\n    const handleChange = event => {\r\n        const name = event.currentTarget.name;\r\n        setShow(oldValue => ({ ...oldValue, [name]: !oldValue[name] }));\r\n    };\r\n\r\n    const handleCamChange = event => {\r\n        const index = parseInt(event.currentTarget.getAttribute(\"index\"));\r\n        const value = event.currentTarget.value;\r\n        const newCamPos = camPos.map((v, i) => (i === index ? value : v));\r\n        setCamPos(newCamPos);\r\n    };\r\n\r\n    const copyText = () => {\r\n        const shareTextField = document.getElementById(\"shareTextField\");\r\n        shareTextField.select();\r\n        shareTextField.setSelectionRange(0, 99999); // For mobile\r\n        document.execCommand(\"copy\");\r\n        setLabel(\"Copied\");\r\n        setTimeout(() => {\r\n            setLabel(\"Link\");\r\n        }, 2000);\r\n    };\r\n\r\n    const getShareLink = () => {\r\n        const keyCodes = Object.keys(initKey).filter(\r\n            key => initKey[key].group !== \"app\"\r\n        );\r\n        keyCodes.push(\"AA\");\r\n\r\n        let link = baseUrl;\r\n\r\n        keyCodes.forEach(keyCode => {\r\n            const { group, key } = initKey[keyCode];\r\n            const currentValue = currentSettings[group][key];\r\n            const defaultValue = defaultSettings[group][key];\r\n            switch (keyCode) {\r\n                case \"bg\":\r\n                    if (transparentBG) {\r\n                        link = link.concat(`bg=transparent/`);\r\n                        break;\r\n                    }\r\n                    if (currentValue !== defaultValue) {\r\n                        link = link.concat(\r\n                            `${keyCode}=${currentValue.replace(\"#\", \"\")}/`\r\n                        );\r\n                    }\r\n                    break;\r\n                case \"et\":\r\n                    if (\r\n                        currentSettings[\"model\"][\"eyeTexture\"] !==\r\n                        currentSettings[\"model\"][\"id\"]\r\n                    ) {\r\n                        link = link.concat(`${keyCode}=${currentValue}/`);\r\n                    }\r\n                    break;\r\n                case \"mt\":\r\n                    if (\r\n                        currentSettings[\"model\"][\"mouthTexture\"] !==\r\n                        currentSettings[\"model\"][\"id\"]\r\n                    ) {\r\n                        link = link.concat(`${keyCode}=${currentValue}/`);\r\n                    }\r\n                    break;\r\n                case \"cam\":\r\n                    if (!customCam) break;\r\n                    const modelId = currentSettings[\"model\"][\"id\"];\r\n                    const type = modelId[0];\r\n                    const defaultCameraPosition = cameraPositions[modelId]\r\n                        ? cameraPositions[modelId]\r\n                        : cameraPositions[type];\r\n                    if (\r\n                        camPos.some(\r\n                            (_, i) => camPos[i] !== defaultCameraPosition[i]\r\n                        )\r\n                    ) {\r\n                        link = link.concat(\"cam=\");\r\n                        camPos.forEach((_, i) => {\r\n                            const value =\r\n                                camPos[i] !== defaultCameraPosition[i]\r\n                                    ? camPos[i]\r\n                                    : \"\";\r\n                            link = link.concat(`${value}${i < 2 ? \",\" : \"\"}`);\r\n                        });\r\n                        link = link.concat(\"/\");\r\n                    }\r\n                    break;\r\n                default:\r\n                    if (currentValue !== defaultValue) {\r\n                        link = link.concat(`${keyCode}=${currentValue}/`);\r\n                    }\r\n            }\r\n        });\r\n\r\n        Object.keys(show).forEach(key => {\r\n            if (!show[key]) {\r\n                link = link.concat(`show${key}=false/`);\r\n            }\r\n        });\r\n        return link;\r\n    };\r\n\r\n    const shareLink = getShareLink();\r\n    const embedCode = `<iframe src=\"${shareLink}\" frameborder=\"0\" width=\"300\" height=\"300\" ${\r\n        transparentBG ? \"allowtransparency \" : \"\"\r\n    }/></iframe>`;\r\n\r\n    useEffect(() => {\r\n        if (method !== 1) return; // QR\r\n        const shareTextField = document.getElementById(\"shareTextField\");\r\n        if (!shareTextField) return;\r\n        shareTextField.focus();\r\n        shareTextField.select();\r\n    }, [shareLink, method]);\r\n\r\n    let display;\r\n    switch (method) {\r\n        case 0: // Link\r\n            display = (\r\n                <TextField\r\n                    color=\"secondary\"\r\n                    variant=\"filled\"\r\n                    autoFocus\r\n                    fullWidth\r\n                    inputProps={{ readOnly: true }}\r\n                    label={label}\r\n                    InputLabelProps={{ color: \"primary\" }}\r\n                    id=\"shareTextField\"\r\n                    margin=\"dense\"\r\n                    value={shareLink}\r\n                    InputProps={{ endAdornment: <CopyButton /> }}\r\n                />\r\n            );\r\n            break;\r\n        case 1: // QR\r\n            display = (\r\n                <>\r\n                    <div className=\"ShareContent-QR\">\r\n                        <QRCode includeMargin size={256} value={shareLink} />\r\n                    </div>\r\n                    <div>Right click to save or copy</div>\r\n                </>\r\n            );\r\n            break;\r\n        case 2: // Embed\r\n            display = (\r\n                <>\r\n                    <TextField\r\n                        color=\"secondary\"\r\n                        variant=\"filled\"\r\n                        autoFocus\r\n                        fullWidth\r\n                        inputProps={{ readOnly: true }}\r\n                        label={label}\r\n                        InputLabelProps={{ color: \"primary\" }}\r\n                        id=\"shareTextField\"\r\n                        margin=\"dense\"\r\n                        value={embedCode}\r\n                        InputProps={{ endAdornment: <CopyButton /> }}\r\n                    />\r\n                    <div>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={transparentBG}\r\n                                    onChange={toggleTransparentBG}\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            label=\"Transparent Background\"\r\n                        />\r\n                    </div>\r\n                </>\r\n            );\r\n            break;\r\n        default:\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"ShareContent-main\">\r\n                <Suspense fallback={<div>Loading</div>}>{display}</Suspense>\r\n            </div>\r\n            <div className=\"ShareContent-checkboxes\">\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox\r\n                            checked={show.AC}\r\n                            onChange={handleChange}\r\n                            name=\"AC\"\r\n                            color=\"primary\"\r\n                        />\r\n                    }\r\n                    label=\"Show Animation Control\"\r\n                />\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox\r\n                            checked={show.Settings}\r\n                            onChange={handleChange}\r\n                            name=\"Settings\"\r\n                            color=\"primary\"\r\n                        />\r\n                    }\r\n                    label=\"Show Settings\"\r\n                />\r\n            </div>\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        checked={customCam}\r\n                        onChange={toggleCustomCam}\r\n                        name=\"Settings\"\r\n                        color=\"primary\"\r\n                    />\r\n                }\r\n                label=\"Custom Camera Position\"\r\n            />\r\n            {customCam && (\r\n                <div className=\"ShareContent-CamPos\">\r\n                    {[\"x\", \"y\", \"z\"].map((axis, i) => (\r\n                        <TextField\r\n                            onChange={handleCamChange}\r\n                            label={axis}\r\n                            key={axis}\r\n                            size=\"small\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            inputProps={{\r\n                                type: \"number\",\r\n                                step: 0.5,\r\n                                index: i,\r\n                            }}\r\n                            value={camPos[i]}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShareContent;\r\n","import { useState } from \"react\";\r\n\r\nimport { DialogContent, DialogTitle, DialogTop } from \"components/CustomDialog\";\r\nimport ShareContent from \"./ShareContent\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nfunction Share({ closeModal }) {\r\n    const [method, setMethod] = useState(0);\r\n\r\n    const handleChange = (_, newValue) => {\r\n        setMethod(newValue);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <DialogTop>\r\n                <DialogTitle onClose={closeModal}>Share</DialogTitle>\r\n                <AppBar position=\"static\">\r\n                    <Tabs centered value={method} onChange={handleChange}>\r\n                        <Tab label=\"Link\" />\r\n                        <Tab label=\"QR\" />\r\n                        <Tab label=\"Embed\" />\r\n                    </Tabs>\r\n                </AppBar>\r\n            </DialogTop>\r\n            <DialogContent dividers className=\"Share-content\">\r\n                <ShareContent method={method} />\r\n            </DialogContent>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Share;\r\n"],"sourceRoot":""}