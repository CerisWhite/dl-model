{"version":3,"sources":["components/selectors/Selector.js","components/selectors/BladeSelector.js"],"names":["Selector","value","options","onClick","texts","handleClick","event","stopPropagation","currentTarget","dataset","selectors","map","option","i","data-value","className","BladeSelector"],"mappings":"6GAAA,kBAgCeA,IAvBf,YAA8D,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,QAAyB,IAAhBC,aAAgB,MAAR,KAAQ,EAInDC,EAAc,SAAAC,GAChBA,EAAMC,kBADmB,IAEjBN,EAAUK,EAAME,cAAcC,QAA9BR,MACRE,EAAQF,IAGNS,EAAYR,EAAQS,KAAI,SAACC,EAAQC,GAAT,OAC1B,qBACIC,aAAYF,EAEZT,QAASE,EACTU,UAAS,wBAAmBd,IAAUW,EAAS,WAAa,IAJhE,SAMKR,EAAQA,EAAMS,GAAKD,GAJfA,MAOb,OAAO,qBAAKG,UAAU,WAAf,SAA2BL,M,uDC7BtC,2BAOeM,UALf,YAA4C,IAAnBf,EAAkB,EAAlBA,MAAOE,EAAW,EAAXA,QAE5B,OAAO,cAAC,IAAD,CAAUF,MAAOA,EAAOC,QADf,CAAC,QAAS,UACuBC,QAASA","file":"static/js/44.13208206.chunk.js","sourcesContent":["import \"./styles/Selector.css\";\r\n\r\n/**\r\n * @param {Object} params\r\n * @param {string} params.value - currently selected value\r\n * @param {string[]} params.options - options to select\r\n * @param {function} params.onClick - called when an option is clicked\r\n * @param {string[]} [params.texts] - display texts for the options\r\n */\r\nfunction Selector({ value, options, onClick, texts = null }) {\r\n    /**\r\n     * @param {React.MouseEvent<HTMLDivElement, MouseEvent>} event\r\n     */\r\n    const handleClick = event => {\r\n        event.stopPropagation();\r\n        const { value } = event.currentTarget.dataset;\r\n        onClick(value);\r\n    };\r\n\r\n    const selectors = options.map((option, i) => (\r\n        <div\r\n            data-value={option}\r\n            key={option}\r\n            onClick={handleClick}\r\n            className={`Selector-Item ${value === option ? \"selected\" : \"\"}`}\r\n        >\r\n            {texts ? texts[i] : option}\r\n        </div>\r\n    ));\r\n    return <div className=\"Selector\">{selectors}</div>;\r\n}\r\n\r\nexport default Selector;\r\n","import Selector from \"./Selector\";\r\n\r\nfunction BladeSelector({ value, onClick }) {\r\n    const options = [\"Blade\", \"Sheath\"];\r\n    return <Selector value={value} options={options} onClick={onClick} />;\r\n}\r\n\r\nexport default BladeSelector;\r\n"],"sourceRoot":""}