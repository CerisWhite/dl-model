(this["webpackJsonpdl-model"]=this["webpackJsonpdl-model"]||[]).push([[63],{479:function(n,t,r){"use strict";r.r(t),r.d(t,"USDZExporter",(function(){return c}));var o=r(3),a=r(4),e=r(60),c=function(){function n(){Object(o.a)(this,n)}return Object(a.a)(n,[{key:"parse",value:function(n){var t='#usda 1.0\n(\n    doc = "Three.js"\n    metersPerUnit = 1\n    upAxis = "Y"\n)\n\n',r={};return n.traverse((function(n){n.isMesh&&(r[n.material.uuid]=n.material,t+=function(n,t){var r=n.name||"Xform1",o=function(n){var t=n.elements;return"( ".concat(i(t,0),", ").concat(i(t,4),", ").concat(i(t,8),", ").concat(i(t,12)," )")}(n.matrixWorld);return'def Xform "'.concat(r,'"\n{\n    matrix4d xformOp:transform = ').concat(o,'\n    uniform token[] xformOpOrder = ["xformOp:transform"]\n\n    ').concat(t,"\n}\n\n")}(n,function(n,t){var r=n.name||"Mesh1",o=n.attributes,a=o.position.count;return'def Mesh "'.concat(r,'"\n    {\n        int[] faceVertexCounts = [').concat(function(n){var t=null!==n.index?n.index.array.length:n.attributes.position.count;return Array(t/3).fill(3).join(", ")}(n),"]\n        int[] faceVertexIndices = [").concat(function(n){if(null!==n.index)return n.index.array.join(", ");for(var t=[],r=n.attributes.position.count,o=0;o<r;o++)t.push(o);return t.join(", ")}(n),"]\n        rel material:binding = </_materials/Material_").concat(t.id,">\n        normal3f[] normals = [").concat(u(o.normal,a),'] (\n            interpolation = "faceVarying"\n        )\n        point3f[] points = [').concat(u(o.position,a),"]\n        texCoord2f[] primvars:UVMap = [").concat(function(n,t){if(void 0===n)return console.warn("USDZExporter: UVs missing."),Array(t).fill("(0, 0)").join(", ");for(var r=[],o=n.array,a=0;a<o.length;a+=2)r.push("(".concat(o[a+0],", ").concat(o[a+1],")"));return r.join(", ")}(o.uv,a),'] (\n            interpolation = "faceVarying"\n        )\n        uniform token subdivisionScheme = "none"\n    }\n')}(n.geometry,n.material)))})),t+=function(n){var t=[];for(var r in n){var o=n[r];t.push(s(o))}return'def "_materials"\n{\n'.concat(t.join(""),"\n}\n\n")}(r),Object(e.zipSync)({"model.usda":Object(e.strToU8)(t)},{level:0})}}]),n}();function i(n,t){return"(".concat(n[t+0],", ").concat(n[t+1],", ").concat(n[t+2],", ").concat(n[t+3],")")}function u(n,t){if(void 0===n)return console.warn("USDZExporter: Normals missing."),Array(t).fill("(0, 0, 0)").join(", ");for(var r=[],o=n.array,a=0;a<o.length;a+=3)r.push("(".concat(o[a+0],", ").concat(o[a+1],", ").concat(o[a+2],")"));return r.join(", ")}function s(n){return'\n    def Material "Material_'.concat(n.id,'"\n    {\n        token outputs:surface.connect = </_materials/Material_').concat(n.id,'/previewShader.outputs:surface>\n\n        def Shader "previewShader"\n        {\n            uniform token info:id = "UsdPreviewSurface"\n            color3f inputs:diffuseColor = ').concat((t=n.color,"(".concat(t.r,", ").concat(t.g,", ").concat(t.b,")")),"\n            float inputs:metallic = ").concat(n.metalness,"\n            float inputs:roughness = ").concat(n.roughness,"\n            token outputs:surface\n        }\n    }\n");var t}}}]);
//# sourceMappingURL=63.6f1c52b9.chunk.js.map