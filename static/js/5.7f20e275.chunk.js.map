{"version":3,"sources":["../node_modules/three/examples/jsm/controls/OrbitControls.js","components/viewers/BasicViewer.js"],"names":["OrbitControls","object","domElement","undefined","console","warn","document","error","this","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","ownerDocument","onPointerMove","onPointerUp","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","subVectors","handleTouchMovePan","handleTouchMoveDolly","pointerType","mouseAction","preventDefault","focus","window","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","onMouseUp","stopPropagation","handleMouseWheel","needsUpdate","keyCode","handleKeyDown","handleTouchStartDollyPan","DOLLY_ROTATE","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","prototype","Object","create","EventDispatcher","constructor","MapControls","call","BasicViewer","disableInput","msg","props","setLoadingMsg","enableInput","initialize","a","initScene","outlines","models","modelInfo","loadMainModel","afterMainModelLoad","viewport","width","innerWidth","height","innerHeight","clock","THREE","scene","bgColor","floor","createInvisibleFloor","camera","CAM_PARAMS","near","far","cameraPosition","controls","mount","controlsPosition","lights","addAllLights","loadedFX","Map","rendererAA","antialias","alpha","outputEncoding","rendererNoAA","AAEnabled","antiAliasing","_AA","renderer","finalRenderer","setSize","canvas","animate","modelId","model","id","main","modelPath","getModelPath","loadModel","basicMainProcessing","addLight","light","enable","params","newLight","createLight","push","forEach","removeLight","remove","removeAllLights","addToScene","initTexture","texture","defaultTexture","getDefaultTexture","split","source","name","textureSource","textureName","texturePath","fbxSource","mainModel","replaceTexture","oldTexture","removeEffects","materialType","matType","isBlade","analyzeWeaponCode","changeMaterial","forced","applyNewModelMat","outlineParams","outline","createOutline","updateViewer","prev","current","updateExport","export","updateCommon","updateModel","otherUpdate","updateViewport","updateOutline","updateMaterial","material","updateLights","updateAscii","ascii","updateCamera","updateControl","AA","updateMainModel","aspect","disposeMainModel","dispose3dObject","replaceMainModel","beforeMainModelUpdate","afterMainModelUpdate","updateOutlineParams","values","flat","applyOutlineSettings","updatedKeys","filter","key","map","matParams","updateMatParams","prevParams","useTexture","matTypeChanged","some","newCanvas","has","AsciiEffect","showAscii","charSet","color","get","effect","style","background","exportModel","toggleExport","rotateFloor","dt","rotateY","everyAnimate","getDelta","frameId","requestAnimationFrame","render","finishedInit","log","logUpdate","cancelAnimationFrame","mixer","renderLists","ref","el","allParams","paramList","getParamsList","filterObject","oldCanvas","_canvas","removeChild","appendChild","PureComponent"],"mappings":"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","file":"static/js/5.7f20e275.chunk.js","sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from '../../../build/three.module.js';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function ( object, domElement ) {\n\n\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\tthis.object = object;\n\tthis.domElement = domElement;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.05;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t// Touch fingers\n\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t// the target DOM element for key events\n\tthis._domElementKeyEvents = null;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\tthis._domElementKeyEvents = domElement;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().invert();\n\n\t\tvar lastPosition = new Vector3();\n\t\tvar lastQuaternion = new Quaternion();\n\n\t\tvar twoPI = 2 * Math.PI;\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t} else {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t}\n\n\t\t\t// restrict theta to be between desired limits\n\n\t\t\tvar min = scope.minAzimuthAngle;\n\t\t\tvar max = scope.maxAzimuthAngle;\n\n\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t}\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove );\n\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t}\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = {\n\t\tNONE: - 1,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2,\n\t\tTOUCH_ROTATE: 3,\n\t\tTOUCH_PAN: 4,\n\t\tTOUCH_DOLLY_PAN: 5,\n\t\tTOUCH_DOLLY_ROTATE: 6\n\t};\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new Spherical();\n\tvar sphericalDelta = new Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new Vector2();\n\tvar rotateEnd = new Vector2();\n\tvar rotateDelta = new Vector2();\n\n\tvar panStart = new Vector2();\n\tvar panEnd = new Vector2();\n\tvar panDelta = new Vector2();\n\n\tvar dollyStart = new Vector2();\n\tvar dollyEnd = new Vector2();\n\tvar dollyDelta = new Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\tvar needsUpdate = false;\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\n\t\t}\n\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t}\n\n\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateEnd.set( x, y );\n\n\t\t}\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t}\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\tdollyOut( dollyDelta.y );\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t}\n\n\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t}\n\n\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onPointerDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseDown( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onPointerMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseMove( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onPointerUp( event ) {\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseUp( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onMouseDown( event ) {\n\n\t\t// Prevent the browser from scrolling.\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tvar mouseAction;\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase 0:\n\n\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\n\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tmouseAction = - 1;\n\n\t\t}\n\n\t\tswitch ( mouseAction ) {\n\n\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.PAN:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\n\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\t\tevent.stopPropagation();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nOrbitControls.prototype = Object.create( EventDispatcher.prototype );\nOrbitControls.prototype.constructor = OrbitControls;\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nvar MapControls = function ( object, domElement ) {\n\n\tOrbitControls.call( this, object, domElement );\n\n\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\tthis.touches.ONE = TOUCH.PAN;\n\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n};\n\nMapControls.prototype = Object.create( EventDispatcher.prototype );\nMapControls.prototype.constructor = MapControls;\n\nexport { OrbitControls, MapControls };\n","/**\r\n################################################\r\n# Basic Viewer that supports adding / updating:\r\n#    - 1 main model\r\n#    - auto rotate\r\n#    - viewport\r\n#    - material\r\n#    - background color\r\n#    - lighting\r\n#    - anti aliasing\r\n#    - ASCII mode\r\n################################################\r\n*/\r\nimport { PureComponent } from \"react\";\r\n\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nimport { CAM_PARAMS } from \"helpers/consts\";\r\nimport { isBlade, filterObject, getDefaultTexture } from \"helpers/helpers\";\r\nimport {\r\n    createInvisibleFloor,\r\n    createLight,\r\n    analyzeWeaponCode,\r\n    getModelPath,\r\n    loadModel,\r\n    dispose3dObject,\r\n    createOutline,\r\n    applyOutlineSettings,\r\n    getParamsList,\r\n    changeMaterial,\r\n    updateMatParams,\r\n    removeEffects,\r\n    replaceTexture,\r\n    logUpdate,\r\n} from \"helpers/viewerHelpers\";\r\nimport { fbxSource } from \"App\";\r\n\r\n/**\r\n * @typedef {ViewerProps} Props\r\n * @extends PureComponent<Props>\r\n */\r\nclass BasicViewer extends PureComponent {\r\n    async componentDidMount() {\r\n        // window.app = this;\r\n\r\n        // const { fbx2json } = await import(\"helpers/fbx2json\");\r\n        // await fbx2json();\r\n\r\n        await this.initialize();\r\n        this.finishedInit = true;\r\n    }\r\n\r\n    /**\r\n     * @param {ViewerProps} prev\r\n     */\r\n    componentDidUpdate(prev) {\r\n        if (!this.finishedInit) return;\r\n        /**\r\n         * @type {ViewerProps}\r\n         */\r\n        const current = this.props;\r\n\r\n        // print updated props to console\r\n        console.log(\"Updated\");\r\n        logUpdate(prev, current);\r\n\r\n        this.updateViewer(prev, current);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        cancelAnimationFrame(this.frameId);\r\n        dispose3dObject(this.scene);\r\n        this.mixer = null;\r\n        this.clock = null;\r\n        this.camera = null;\r\n        this.controls = null;\r\n        this.scene = null;\r\n        this.renderer = null;\r\n        this.rendererAA.renderLists?.dispose();\r\n        this.rendererAA.dispose();\r\n        this.rendererAA = null;\r\n        this.rendererNoAA.renderLists?.dispose();\r\n        this.rendererNoAA.dispose();\r\n        this.rendererNoAA = null;\r\n    }\r\n\r\n    /**\r\n     * disable input and display a message, default is \"Loading...\"\r\n     * @param {string} [msg]\r\n     */\r\n    disableInput = msg => this.props.setLoadingMsg(msg || \"Loading...\");\r\n\r\n    /**\r\n     * remove loading message\r\n     */\r\n    enableInput = () => this.props.setLoadingMsg(\"\");\r\n\r\n    /**\r\n     * called when viewer is mounted to initialize the scene\r\n     */\r\n    initialize = async () => {\r\n        this.disableInput();\r\n\r\n        this.initScene();\r\n\r\n        this.outlines = {};\r\n        this.models = {};\r\n        this.modelInfo = {};\r\n        await this.loadMainModel();\r\n        await this.afterMainModelLoad();\r\n\r\n        this.enableInput();\r\n    };\r\n\r\n    /**\r\n     * Called after main model is loaded and added to scene\r\n     */\r\n    afterMainModelLoad = () => void 0;\r\n\r\n    /**\r\n     * initialize scene, display size, floor, clock, light, camera, controls, and renderers\r\n     */\r\n    initScene = () => {\r\n        // viewport\r\n        this.viewport = this.props.viewport || {\r\n            width: window.innerWidth,\r\n            height: window.innerHeight,\r\n        };\r\n\r\n        // clock\r\n        this.clock = new THREE.Clock();\r\n\r\n        // Scene\r\n        this.scene = new THREE.Scene();\r\n        this.bgColor = this.props.bgColor;\r\n\r\n        // Floor for auto rotate\r\n        this.floor = createInvisibleFloor();\r\n        this.scene.add(this.floor);\r\n\r\n        // Camera\r\n        this.camera = new THREE.PerspectiveCamera(\r\n            CAM_PARAMS.angle,\r\n            this.viewport.width / this.viewport.height,\r\n            CAM_PARAMS.near,\r\n            CAM_PARAMS.far\r\n        );\r\n        /**\r\n         * @type {xyzCoordinate}\r\n         */\r\n        this.cameraPosition = this.props.cameraPosition || [2, 0, 10];\r\n        this.camera.position.set(...this.cameraPosition);\r\n        this.camera.updateProjectionMatrix();\r\n\r\n        // Controls\r\n        this.controls = new OrbitControls(this.camera, this.mount);\r\n        /**\r\n         * @type {xyzCoordinate}\r\n         */\r\n        this.controlsPosition = this.props.controlsPosition || [0, 0, 0];\r\n        this.controls.target.set(...this.controlsPosition);\r\n        this.controls.update();\r\n\r\n        // Light\r\n        const { lights } = this.props;\r\n        this.addAllLights(lights);\r\n\r\n        /**\r\n         * loaded effects' constructors\r\n         * @type {Map< string, new (...params) => * >}\r\n         */\r\n        this.loadedFX = new Map();\r\n\r\n        // Renderer\r\n        this.rendererAA = new THREE.WebGLRenderer({\r\n            antialias: true,\r\n            alpha: true,\r\n        });\r\n        this.rendererAA.outputEncoding = THREE.sRGBEncoding;\r\n\r\n        this.rendererNoAA = new THREE.WebGLRenderer({\r\n            antialias: false,\r\n            alpha: true,\r\n        });\r\n        this.rendererNoAA.outputEncoding = THREE.sRGBEncoding;\r\n\r\n        const AAEnabled = this.props.antiAliasing;\r\n        this._AA = AAEnabled;\r\n\r\n        this.renderer = AAEnabled ? this.rendererAA : this.rendererNoAA;\r\n\r\n        this.finalRenderer = this.renderer;\r\n        const { width, height } = this.props.viewport;\r\n        this.finalRenderer.setSize(width, height);\r\n\r\n        const canvas = this.finalRenderer.domElement;\r\n        this.canvas = canvas;\r\n\r\n        this.animate();\r\n    };\r\n\r\n    /**\r\n     * load, and perform basic processing on main model\r\n     */\r\n    loadMainModel = async () => {\r\n        const modelId = this.props.model.id;\r\n        this.modelInfo.main = modelId;\r\n\r\n        const modelPath = getModelPath(modelId);\r\n        const model = await loadModel(modelPath);\r\n        this.models.main = model;\r\n\r\n        await this.basicMainProcessing();\r\n        return;\r\n    };\r\n\r\n    /**\r\n     * enable / disable Anti Aliasing\r\n     * @param {Boolean} enabled\r\n     */\r\n    set AA(enabled) {\r\n        if (enabled === this._AA) return;\r\n\r\n        this._AA = enabled;\r\n        this.renderer = enabled ? this.rendererAA : this.rendererNoAA;\r\n        const { width, height } = this.viewport;\r\n        this.renderer.setSize(width, height);\r\n\r\n        if (this.props.ascii.enable) return;\r\n\r\n        this.finalRenderer = this.renderer;\r\n\r\n        const newCanvas = this.renderer.domElement;\r\n        this.canvas = newCanvas;\r\n    }\r\n\r\n    /**\r\n     * add light to scene\r\n     * @param {LightParam} light\r\n     */\r\n    addLight = light => {\r\n        const { id, enable, ...params } = light;\r\n        if (!enable) return;\r\n\r\n        const newLight = createLight(params);\r\n\r\n        this.scene.add(newLight);\r\n        this.lights.push(newLight);\r\n    };\r\n\r\n    /**\r\n     * add lights to scene\r\n     * @param {LightParam[]} lights\r\n     */\r\n    addAllLights = lights => {\r\n        /**\r\n         * @type {THREE.Light[]}\r\n         */\r\n        this.lights = [];\r\n        lights.forEach(this.addLight);\r\n    };\r\n\r\n    /**\r\n     * remove light from scene\r\n     * @param {THREE.Light} light\r\n     */\r\n    removeLight = light => this.scene.remove(light);\r\n\r\n    /**\r\n     * remove all lights in the scene\r\n     */\r\n    removeAllLights = () => this.lights.forEach(this.removeLight);\r\n\r\n    /**\r\n     * add model to scene\r\n     * @param {THREE.Object3D} model\r\n     */\r\n    addToScene = model => this.floor.add(model);\r\n\r\n    /**\r\n     * change main model's texture if specified\r\n     */\r\n    initTexture = async () => {\r\n        const { id: modelId, texture } = this.props.model;\r\n        if (!texture || texture === \">\") return;\r\n\r\n        const defaultTexture = getDefaultTexture(modelId);\r\n        const [source, name] = texture.split(\">\");\r\n        const textureSource = source || modelId;\r\n        const textureName = name || getDefaultTexture(textureSource);\r\n\r\n        const texturePath = `${fbxSource}/fbx/${textureSource}/${textureName}.png`;\r\n        const mainModel = this.models.main;\r\n        await replaceTexture(mainModel, {\r\n            oldTexture: defaultTexture,\r\n            texturePath,\r\n        });\r\n    };\r\n\r\n    /**\r\n     * main model basic processing:\r\n     * remove effects, change material, change texture, add outline, then add to scene\r\n     */\r\n    basicMainProcessing = async () => {\r\n        const model = this.models.main;\r\n\r\n        removeEffects(model);\r\n\r\n        const materialType = this.matType;\r\n        const modelId = this.props.model.id;\r\n        if (isBlade(modelId)) {\r\n            const { texturePath } = analyzeWeaponCode(`${modelId}n`);\r\n            changeMaterial(model, { materialType, texturePath });\r\n        } else {\r\n            changeMaterial(model, { materialType, forced: true });\r\n        }\r\n\r\n        await this.initTexture();\r\n\r\n        this.applyNewModelMat(model);\r\n\r\n        const outlineParams = this.props.outline;\r\n        this.outlines.main = createOutline(model, outlineParams);\r\n\r\n        this.addToScene(model);\r\n    };\r\n\r\n    /**\r\n     * update viewer's display\r\n     * @param {ViewerProps} prev\r\n     * @param {ViewerProps} current\r\n     */\r\n    updateViewer = async (prev, current) => {\r\n        await this.updateExport(prev.export, current.export);\r\n        this.updateCommon(prev, current);\r\n        this.updateModel(prev, current);\r\n        this.otherUpdate(prev, current);\r\n    };\r\n\r\n    /**\r\n     * update settings other than model and environment\r\n     * @param {ViewerProps} prev\r\n     * @param {ViewerProps} current\r\n     */\r\n    otherUpdate = (prev, current) => void 0;\r\n\r\n    /**\r\n     * update viewport, outline, material, lighting, ASCII,\r\n     * camera, control, background, and Anti Aliasing\r\n     * @param {ViewerProps} prev\r\n     * @param {ViewerProps} current\r\n     */\r\n    updateCommon = (prev, current) => {\r\n        this.updateViewport(prev.viewport, current.viewport);\r\n        this.updateOutline(prev.outline, current.outline);\r\n        this.updateMaterial(prev.material, current.material);\r\n        this.updateLights(prev.lights, current.lights);\r\n        this.updateAscii(prev.ascii, current.ascii);\r\n        this.updateCamera(prev.cameraPosition, current.cameraPosition);\r\n        this.updateControl(prev.controlsPosition, current.controlsPosition);\r\n\r\n        // Update background color\r\n        if (prev.bgColor !== current.bgColor) {\r\n            this.bgColor = current.bgColor;\r\n        }\r\n\r\n        this.AA = current.antiAliasing;\r\n    };\r\n\r\n    /**\r\n     * update model settings\r\n     * @param {ViewerProps} prev\r\n     * @param {ViewerProps} current\r\n     */\r\n    updateModel = (prev, current) => {\r\n        this.updateMainModel(prev.model, current.model);\r\n    };\r\n\r\n    /**\r\n     * update viewport\r\n     * @param {ViewerProps[\"viewport\"]} prev\r\n     * @param {ViewerProps[\"viewport\"]} current\r\n     */\r\n    updateViewport = (prev, current) => {\r\n        const { width, height } = current;\r\n        if (prev.width === width && prev.height === height) return;\r\n\r\n        this.viewport.width = width;\r\n        this.viewport.height = height;\r\n\r\n        this.finalRenderer.setSize(width, height);\r\n        this.camera.aspect = width / height;\r\n        this.camera.updateProjectionMatrix();\r\n    };\r\n\r\n    /**\r\n     * remove from scene and dispose main model\r\n     */\r\n    disposeMainModel = () => {\r\n        const mainModel = this.models.main;\r\n        this.floor.remove(mainModel);\r\n        dispose3dObject(mainModel);\r\n    };\r\n\r\n    /**\r\n     * replace main model\r\n     */\r\n    replaceMainModel = async () => {\r\n        this.disableInput();\r\n\r\n        this.disposeMainModel();\r\n        await this.loadMainModel();\r\n        this.applyNewModelMat(this.models.main);\r\n\r\n        this.enableInput();\r\n    };\r\n\r\n    /**\r\n     * update main model\r\n     * @param {ViewerProps[\"model\"]} prev\r\n     * @param {ViewerProps[\"model\"]} current\r\n     */\r\n    updateMainModel = async (prev, current) => {\r\n        const modelId = current.id;\r\n        const mainUpdated = prev.id !== modelId;\r\n        if (!mainUpdated) return;\r\n\r\n        this.beforeMainModelUpdate();\r\n        await this.replaceMainModel();\r\n        this.afterMainModelUpdate();\r\n    };\r\n\r\n    /**\r\n     * called before main model is updated\r\n     */\r\n    beforeMainModelUpdate = () => void 0;\r\n\r\n    /**\r\n     * called after main model is updated\r\n     */\r\n    afterMainModelUpdate = () => void 0;\r\n\r\n    /**\r\n     * update outline parameters\r\n     * @param {Map<string, *>} update\r\n     */\r\n    updateOutlineParams = update => {\r\n        const outlines = Object.values(this.outlines).flat();\r\n        outlines.forEach(outline => {\r\n            applyOutlineSettings(outline, update);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * update outline settings\r\n     * @param {AppOutlineState} prev - previous settings\r\n     * @param {AppOutlineState} current - current settings\r\n     */\r\n    updateOutline = (prev, current) => {\r\n        if (prev === current) return;\r\n\r\n        const updatedKeys = Object.keys(current).filter(\r\n            key => prev[key] !== current[key]\r\n        );\r\n        if (updatedKeys.length === 0) return;\r\n\r\n        const update = new Map(updatedKeys.map(key => [key, current[key]]));\r\n        this.updateOutlineParams(update);\r\n    };\r\n\r\n    /**\r\n     * get relevant parameters for the current material type\r\n     */\r\n    get matParams() {\r\n        const { type: materialType, ...allParams } = this.props.material;\r\n        const paramList = getParamsList(materialType);\r\n        return filterObject(allParams, paramList);\r\n    }\r\n\r\n    /**\r\n     * get the current material type\r\n     */\r\n    get matType() {\r\n        return this.props.material.type;\r\n    }\r\n\r\n    /**\r\n     * apply material setting to a newly loaded model\r\n     */\r\n    applyNewModelMat = model => {\r\n        const params = this.matParams;\r\n        const defaultParams = { useTexture: true };\r\n        updateMatParams(model, { prevParams: defaultParams, params });\r\n    };\r\n\r\n    /**\r\n     * update material settings\r\n     */\r\n    updateMaterial = (prev, current) => {\r\n        if (prev === current) return;\r\n\r\n        const materialType = this.matType;\r\n        const mainModel = this.models.main;\r\n\r\n        const matTypeChanged = prev.type !== materialType;\r\n        if (matTypeChanged) {\r\n            changeMaterial(this.models.main, { materialType });\r\n        }\r\n\r\n        const prevParams = matTypeChanged\r\n            ? { useTexture: prev.useTexture }\r\n            : prev;\r\n        const params = this.matParams;\r\n        updateMatParams(mainModel, { prevParams, params });\r\n    };\r\n\r\n    /**\r\n     * update lighting\r\n     * @param {LightParam[]} prev\r\n     * @param {LightParam[]} current\r\n     */\r\n    updateLights = (prev, current) => {\r\n        if (prev !== current) {\r\n            this.removeAllLights();\r\n            this.addAllLights(current);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Update ASCII settings\r\n     * @param {ViewerProps[\"ascii\"]} prev\r\n     * @param {ViewerProps[\"ascii\"]} current\r\n     */\r\n    updateAscii = async (prev, current) => {\r\n        const updated = Object.keys(prev).some(\r\n            key => prev[key] !== current[key]\r\n        );\r\n        if (!updated) return;\r\n\r\n        const { enable } = current;\r\n        if (!enable) {\r\n            this.finalRenderer = this.renderer;\r\n            const newCanvas = this.renderer.domElement;\r\n            this.canvas = newCanvas;\r\n            return;\r\n        }\r\n\r\n        if (!this.loadedFX.has(\"ascii\")) {\r\n            const { AsciiEffect } = await import(\r\n                \"three/examples/jsm/effects/AsciiEffect\"\r\n            );\r\n            this.loadedFX.set(\"ascii\", AsciiEffect);\r\n            this.showAscii();\r\n        } else this.showAscii();\r\n\r\n        this.finalRenderer.setSize(this.viewport.width, this.viewport.height);\r\n    };\r\n\r\n    /**\r\n     * render scene as ASCII\r\n     */\r\n    showAscii = () => {\r\n        const { charSet, color, bgColor, invert } = this.props.ascii;\r\n        const AsciiEffect = this.loadedFX.get(\"ascii\");\r\n\r\n        this.effect = new AsciiEffect(this.renderer, charSet, { invert });\r\n\r\n        const { width, height } = this.viewport;\r\n        this.effect.setSize(width, height);\r\n\r\n        const newCanvas = this.effect.domElement;\r\n        newCanvas.style.color = color;\r\n        newCanvas.style.background = bgColor;\r\n        this.canvas = newCanvas;\r\n\r\n        this.finalRenderer = this.effect;\r\n    };\r\n\r\n    /**\r\n     * @param {xyzCoordinate} prev\r\n     * @param {xyzCoordinate} current\r\n     */\r\n    updateCamera = (prev, current) => {\r\n        if (prev === current) return;\r\n\r\n        this.camera.position.set(...current);\r\n        this.camera.updateProjectionMatrix();\r\n    };\r\n\r\n    /**\r\n     * @param {xyzCoordinate} prev\r\n     * @param {xyzCoordinate} current\r\n     */\r\n    updateControl = (prev, current) => {\r\n        if (prev === current) return;\r\n\r\n        this.controls.target.set(...current);\r\n        this.controls.update();\r\n    };\r\n\r\n    /**\r\n     * @param {ViewerProps[\"export\"]} prev\r\n     * @param {ViewerProps[\"export\"]} current\r\n     */\r\n    updateExport = async (prev, current) => {\r\n        if (!current.enable || prev.enable) return;\r\n        this.disableInput(\"Exporting\");\r\n\r\n        const { exportModel } = await import(\"helpers/exportModel\");\r\n        await exportModel(this.models.main, current);\r\n        this.props.toggleExport();\r\n\r\n        this.enableInput();\r\n    };\r\n\r\n    /**\r\n     * @param {ColorCode | 'transparent'} color\r\n     */\r\n    set bgColor(color) {\r\n        this.scene.background =\r\n            color !== \"transparent\" ? new THREE.Color(color) : null;\r\n    }\r\n\r\n    /**\r\n     * set display canvas\r\n     */\r\n    set canvas(canvas) {\r\n        const oldCanvas = this._canvas;\r\n        oldCanvas && this.mount.removeChild(oldCanvas);\r\n        this.mount.appendChild(canvas);\r\n        this._canvas = canvas;\r\n    }\r\n\r\n    /**\r\n     * get currently displayed canvas\r\n     */\r\n    get canvas() {\r\n        return this._canvas;\r\n    }\r\n\r\n    /**\r\n     * rotate the floor\r\n     * @param {number} dt - time difference\r\n     */\r\n    rotateFloor = dt => {\r\n        const { rotateSpeed } = this.props;\r\n        if (!rotateSpeed) return;\r\n\r\n        const angle = (rotateSpeed * dt * Math.PI) / 2;\r\n        this.floor.rotateY(angle);\r\n    };\r\n\r\n    /**\r\n     * called during every animation frame\r\n     */\r\n    everyAnimate = () => {\r\n        const dt = this.clock.getDelta();\r\n        this.rotateFloor(dt);\r\n    };\r\n\r\n    /**\r\n     * render loop\r\n     */\r\n    animate = () => {\r\n        this.frameId = requestAnimationFrame(this.animate);\r\n\r\n        this.everyAnimate();\r\n\r\n        this.finalRenderer.render(this.scene, this.camera);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                ref={el => {\r\n                    this.mount = el;\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default BasicViewer;\r\n"],"sourceRoot":""}