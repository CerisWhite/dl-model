{"version":3,"sources":["../node_modules/three/examples/jsm/controls/OrbitControls.js","../../src/fscreen.js"],"names":["_changeEvent","type","_startEvent","_endEvent","OrbitControls","object","domElement","undefined","console","warn","document","error","style","touchAction","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","listenToKeyEvents","addEventListener","onKeyDown","this","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","ownerDocument","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","handleTouchMovePan","handleTouchMoveDolly","push","addPointer","pointerType","trackPointer","DOLLY_ROTATE","onTouchStart","mouseAction","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","removePointer","preventDefault","handleMouseWheel","needsUpdate","code","handleKeyDown","pointerId","i","splice","pointer","passive","EventDispatcher","key","fullscreenEnabled","fullscreenElement","requestFullscreen","exitFullscreen","fullscreenchange","fullscreenerror","fullscreen","webkit","moz","ms","window","vendor","Object","requestFullscreenFunction","bind","handler","options","Boolean","val","toLowerCase"],"mappings":"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","file":"static/js/3.f2908007.chunk.js","sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t\t// no-op\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t\t// no-op\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchEnd();\n\n\t\t\t} else {\n\n\t\t\t\tonMouseUp( event );\n\n\t\t\t}\n\n\t\t\tremovePointer( event );\n\n\t\t\t//\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerCancel( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseUp( event ) {\n\n\t\t\thandleMouseUp( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchEnd( event ) {\n\n\t\t\thandleTouchEnd( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n","const key = {\n  fullscreenEnabled: 0,\n  fullscreenElement: 1,\n  requestFullscreen: 2,\n  exitFullscreen: 3,\n  fullscreenchange: 4,\n  fullscreenerror: 5,\n  fullscreen: 6\n};\n\nconst webkit = [\n  'webkitFullscreenEnabled',\n  'webkitFullscreenElement',\n  'webkitRequestFullscreen',\n  'webkitExitFullscreen',\n  'webkitfullscreenchange',\n  'webkitfullscreenerror',\n  '-webkit-full-screen',\n];\n\nconst moz = [\n  'mozFullScreenEnabled',\n  'mozFullScreenElement',\n  'mozRequestFullScreen',\n  'mozCancelFullScreen',\n  'mozfullscreenchange',\n  'mozfullscreenerror',\n  '-moz-full-screen',\n];\n\nconst ms = [\n  'msFullscreenEnabled',\n  'msFullscreenElement',\n  'msRequestFullscreen',\n  'msExitFullscreen',\n  'MSFullscreenChange',\n  'MSFullscreenError',\n  '-ms-fullscreen',\n];\n\n// so it doesn't throw if no window or document\nconst document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};\n\nconst vendor = (\n  ('fullscreenEnabled' in document && Object.keys(key)) ||\n  (webkit[0] in document && webkit) ||\n  (moz[0] in document && moz) ||\n  (ms[0] in document && ms) ||\n  []\n);\n\nexport default {\n  requestFullscreen: element => element[vendor[key.requestFullscreen]](),\n  requestFullscreenFunction: element => element[vendor[key.requestFullscreen]],\n  get exitFullscreen() { return document[vendor[key.exitFullscreen]].bind(document); },\n  get fullscreenPseudoClass() { return `:${vendor[key.fullscreen]}`; },\n  addEventListener: (type, handler, options) => document.addEventListener(vendor[key[type]], handler, options),\n  removeEventListener: (type, handler, options) => document.removeEventListener(vendor[key[type]], handler, options),\n  get fullscreenEnabled() { return Boolean(document[vendor[key.fullscreenEnabled]]); },\n  set fullscreenEnabled(val) {},\n  get fullscreenElement() { return document[vendor[key.fullscreenElement]]; },\n  set fullscreenElement(val) {},\n  get onfullscreenchange() { return document[`on${vendor[key.fullscreenchange]}`.toLowerCase()]; },\n  set onfullscreenchange(handler) { return document[`on${vendor[key.fullscreenchange]}`.toLowerCase()] = handler; },\n  get onfullscreenerror() { return document[`on${vendor[key.fullscreenerror]}`.toLowerCase()]; },\n  set onfullscreenerror(handler) { return document[`on${vendor[key.fullscreenerror]}`.toLowerCase()] = handler; },\n};\n"],"sourceRoot":""}